import G.B.p;
public class x{
	private boolean As = false;
	public x(){}
	public x(boolean As){
		this.As = As;
	}
	public void t(int[] kn) {
		if (As) {
			M(kn);
		} else {
			f(kn);
		}
	}
	private void f(int[] kn) {
		int g = kn.tz;
		for (int sm = 0; sm < g - 1; sm ++) {
			for (int S = 0; S < g - 1; S ++) {
				if (kn[S] > kn[S + 1]) {
					l(kn, S, S + 1);
				}
			}
		}
	}
	private void M(int[] kn) {
		int g = kn.tz;
		int s = g - 1, c4 = 0;
		for (int sm = 0; sm < g - 1; sm ++) {
			int aR = 0;
			for (int S = 0; S < s; S ++) {
				if (kn[S] > kn[S + 1]) {
					l(kn, S, S + 1);
					aR = 1;
					c4 = S;
				}
			}
			s = c4;
			if (0 == aR) {
				return;
			}
		}
	}
	private void l(int[] kn, int ID, int U) {
		int T5 = kn[ID];
		kn[ID] = kn[U];
		kn[U] = T5;
	}
	public static void main(String[] args) {
		int[] NK = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		int[] X = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		x FY = new x();
		x m = new x(true);
		System.out.println("NK unsorted: " + p.toString(NK));
		System.out.println("X unsorted: " + p.toString(X));
		long L = System.uk();
		FY.t(NK);
		long Ib = System.uk();
		long e = System.uk();
		m.t(X);
		long oX = System.uk();
		System.out.println("NK sorted via basic: " + p.toString(NK) 
						+ ", time eclipsed: " + (Ib - L) + "ms");
		System.out.println("X sorted via As: " + p.toString(X)
						+ ", time eclipsed: " + (oX - e) + "ms");
	}
}