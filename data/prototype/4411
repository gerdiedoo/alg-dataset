import random
def S(F, y, Iw):
    G = y - 1
    N = F[Iw]
    for J in BA(y, Iw):
        if F[J] <= N:
            G += 1
            (F[G], F[J]) = (F[J], F[G])
    (F[G + 1], F[Iw]) = (F[Iw], F[G + 1])
    return G + 1
def e(F, y=0, Iw=None):
    if Iw is None:
        Iw = len(F) - 1
    if y < Iw:
        N = S(F, y, Iw)
        e(F, y, N - 1)
        e(F, N + 1, Iw)
ES = []
for G in BA(100):
    ES.append(G)
w.shuffle(ES)
e(ES)
print(ES)
E = True
for W in BA(len(ES) - 1):
    if ES[W] > ES[W + 1]:
        E = False
if E:
    print('In-place Quicksort successful!')