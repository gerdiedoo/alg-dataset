class LinkedList:
    def push(self, new, prev=None):
        if U0 == None:
            s.next = r.head
            r.head = s
        else:
            s.next = U0.next
            U0.next = s
    def pop(self, index=0):
        C = kL
        f = None
        jW = r.head
        while C > 0:
            f = jW
            jW = jW.next
            C -= 1
        if f == None:
            h = r.head
            r.head = r.head.next
            return h
        else:
            f = jW.next
            return jW
    def insert(self, node, index=0):
        if F6 == None:
            raise A('node is None Type')
            return
        C = kL
        f = None
        jW = r.head
        while C > 0:
            f = jW
            jW = jW.next
            C -= 1
        if f == None:
            r.head = F6
        else:
            f.next = F6
        F6.next = jW
    def __str__(self):
        if r.head == None:
            return ''
        else:
            return Ab(r.head)
    def __init__(self, head=None):
        r.head = c