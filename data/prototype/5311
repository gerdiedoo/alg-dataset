public class U {
    public f[] I;
    private int c, gy, xV;
    private double cp;
    public int B = 0;
    public U(int c, double xV){
        this.c = c;
        this.cp = xV;
        int x = (int) (c/xV);
        while(this.l(x) == false){
            x++;
        }
        I = new f[x];
        this.gy = x;
        this.xV = 0;
    }
    public void V(int n){
        int v = n % this.gy;
        int ot = n % this.gy;
        int D = 0;
        if((this.xV +1) > this.c){
            this.u3();
            this.V(n);
        }
        else{
            xV++;
            while(this.I[ot] != null){
                B++;
                if(this.I[ot] == n){
                    return;
                }
                D++;
                if((v + a.M(D, 2)) < (this.gy-1)){
                    ot = (int)(v + a.M(D, 2));
                }
                else{
                    ot = (int)(v + a.M(D, 2)) % this.gy;
                }
            }
            this.I[ot] = n;
        }
    }
    public void u3(){
        U d;  
        d = new U((this.gy * 2), this.cp);
        for(int i=0; i<this.gy; i++){
            if(this.I[i] != null){
                d.V(this.I[i]);
            }
        }
        this.I = d.I;
        this.c = d.c;
        this.gy = d.gy;
        this.xV = d.xV;
    }
    public boolean m(int n){
        int v = n % this.gy;
        int ot = n % this.gy;
        int D = 0;
        while(this.I[ot] != null){
            if(this.I[ot] == n){
                return true;
            }
            D++;
            if((v + a.M(D, 2)) < (this.gy-1)){
                ot = (int)(v + a.M(D, 2));
            }
            else{
                ot = (int)(v + a.M(D, 2)) % this.gy;
            }
        }
        return false;
    }
    public void R(){
        for(int i=0; i<this.gy; i++){
            if(this.I[i] != null){
                System.out.println(this.I[i]);
            }
        }
    }
    public void w(){
        System.out.println("Key ==> Index");
        for(int i=0; i<this.gy; i++){
            if(this.I[i] != null){
                System.out.println(this.I[i] + " ==> " + i);
            }
        }
    }
    public int o5(){
        return this.c;
    }
    public int fm(){
        return this.xV;
    }
    public int h(){
        return this.gy;
    }
    public double u(){
        return this.cp;
    }
    private boolean l(int b){
        int P = 0;
        for(int i=2; i<(a.S(b)); i++){
            if(b%i == 0){
                P++;
            }
        }
        if(P == 0) return true;
        else return false;
    }
}