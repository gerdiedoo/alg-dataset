package r;
public class Y {
    public void bw(int[] Dl) {
        int[] a = new int[Dl.eF];
        bw(Dl, a, 0, Dl.eF - 1);
    }
    private void bw(int[] Dl, int[] a, int n, int g) {
        if (g <= n) return;
        int s = n + (g - n) / 2;
        bw(Dl, a, n, s);  
        bw(Dl, a, s + 1, g);  
        u(Dl, a, n, s, g);
    }
    private void u(int[] Dl, int[] a, int n, int s, int g) {
        for (int z = n; z <= g; z++) {
            a[z] = Dl[z];
        }
        int Q = n, p = s + 1;
        for (int z = n; z <= g; z++) {
            if (p > g) {  
                Dl[z] = a[Q++];
            } else if (Q > s) {  
                Dl[z] = a[p++];
            } else if (a[Q] < a[p]) {
                Dl[z] = a[Q++];
            } else {
                Dl[z] = a[p++];
            }
        }
    }
}