from random import randint
def A(U, Y):
    w = 0
    b = len(U) - 1
    while w <= b:
        x = (b + w) // 2
        if U[x] == Y:
            return x
        elif U[x] > Y:
            b = x - 1
        else:
            w = x + 1
    return None
def u(U, Y, w=0, b=None):
    b = len(U) - 1 if b is None else b
    if b >= w:
        x = (b + w) // 2
        if U[x] == Y:
            return x
        elif U[x] > Y:
            return u(U, Y, w, x - 1)
        else:
            return u(U, Y, x + 1, b)
    else:
        return None
def qT():
    S = 100
    M = 100
    U = [1, 9, 11, 13, 5, 7, 8, 5, 17, 1156, 114]
    U.sort()
    Y = 13
    A7 = u(U, Y)
    if A7 is None:
        print('Recursive Binary Search : Element not present in array')
    else:
        print('Recursive Binary Search : Element is present at index', A7)
    A7 = A(U, Y)
    if A7 is None:
        print('Iterative Binary Search : Element not present in array')
    else:
        print('Iterative Binary Search : Element is present at index', A7)
if jF == '__main__':
    qT()