from time import sleep
from typing import List
from tkinter import Tk
from animated import Animator
class InsertionSort(Animator):
    def sort(self, array: List[int]) -> None:
        for i in range(1, len(array)):  
            comparator = array[i]  
            for section in range(
                i - 1, -2, -1
            ):  
                if (
                    comparator > array[section]
                ):  
                    array[section + 1] = comparator
                    self.render(array, cur=section + 2)
                    sleep(0.01)
                    break
                else:
                    array[section + 1] = array[
                        section
                    ]  
                    self.render(array, cur=section + 2)
                    sleep(0.01)
            else:
                array[
                    section + 1
                ] = comparator  
def main() -> int:
    try:
        from utils import randomSequence
    except ModuleNotFoundError:
        import os, sys  
        dir_path = os.path.dirname(os.path.realpath(__file__))
        parent_dir_path = os.path.abspath(os.path.join(dir_path, os.pardir))
        sys.path.insert(0, parent_dir_path)
        from utils import randomSequence
    shuffledArray = randomSequence(0, 100)
    root = Tk()
    sorter = InsertionSort(
        root,
        background="black",
        width=root.winfo_screenwidth(),
        height=root.winfo_screenheight(),
    )
    sorter.pack()
    sorter.sort(shuffledArray)
    sorter.finished()
    return 0