package VS.D;
public class O implements x9 {
    private int y[];
    private int c;
    private int F[];
    public void qI(int z, int e[]) {
        c = z;
        y = e;
        F = new int[c];
        j(0, c - 1);
    }
    public void j(int X, int w) {
        int r;
        if (w > X) {
            r = (int) (X + w) / 2;
            j(X, r);
            j(r + 1, w);
            h(X, r, w);
        }
    }
    public void h(int X, int r, int w) {
        int oZ, N, C;
        oZ = X;
        N = r + 1;
        C = X;
        while (C <= w) {
            if ((oZ < r + 1) && (N > w || y[oZ] < y[N])) {
                F[C] = y[oZ];
                oZ++;
            } else {
                F[C] = y[N];
                N++;
            }
            C++;
        }
        for (int i = X; i <= w; i++) {
            y[i] = F[i];
        }
    }
}