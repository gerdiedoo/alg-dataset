package sort.merge;
import sort.Sort;
public class MergeBU extends Sort {
    private static Comparable[] aux;  
    public void sortMethod(Comparable[] a) {
        for (int sz = 1; sz < a.length; sz = sz + sz)  
            for (int lo = 0; lo < a.length - sz; lo += sz + sz)  
                merge(a, lo, lo + sz - 1, Math.min(lo + sz + sz - 1, a.length - 1));
    }
    public static void sort(Comparable[] a) {
        aux = new Comparable[a.length];
        new MergeBU().sortMethod(a);
    }
    private static void merge(Comparable[] a, int lo, int mid, int hi) {
        int i = lo, j = mid + 1;
        for (int k = lo; k <= hi; k++)
            aux[k] = a[k];
        for (int k = lo; k <= hi; k++) {
            if (i > mid) a[k] = aux[j++];  
            else if (j > hi) a[k] = aux[i++];  
            else if (less(aux[j], aux[i])) a[k] = aux[j++];  
            else a[k] = aux[i++];  
        }
    }
}