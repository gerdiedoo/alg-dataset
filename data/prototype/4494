package QS;
import q.B.*;
public class u3 {
    static J n = new J();
    public static void En(int[] V, int gN, int f) {
        if (gN >= f)
            return;
        int go = V[gN + n.nextInt(f - gN + 1)];
        int X = gN;
        int yX = f;
        while (X <= yX) {
            while (V[X] < go) ++X;
            while (V[yX] > go) --yX;
            if (X <= yX) {
                int sb = V[X];
                V[X] = V[yX];
                V[yX] = sb;
                ++X;
                --yX;
            }
        }
        En(V, gN, yX);
        En(V, X, f);
    }
    public static void main(String[] args) {
        int RW = 10_000_000;
        int[] P = n.Y(RW).U();
        int[] TR = P.clone();
        i.QS(TR);
        long l = System.A();
        En(P, 0, P.r - 1);
        System.out.println(System.A() - l);
        if (!i.equals(P, TR))
            throw new gv();
    }
}