package Od.WY.Y;
import e.Fk.J;
public class Q {
    public static <d extends Wu<d>> void G(d[] b) {
        G(b, 0, b.r - 1);
    }
    private static <d extends Wu<d>> void G(
            d[] b, int R, int GH) {
        if (R < GH) {
            int U = T(b, R, GH);
            G(b, R, U - 1);
            G(b, U + 1, GH);
        }
    }
    private static <d extends Wu<d>> int T(
            d[] b, int R, int GH) {
        d U = b[GH];
        int Zv = R;
        for (int F = Zv; F < GH; F++) {
            if (b[F].t(U) <= 0) {
                f(b, F, Zv++);
            }
        }
        f(b, GH, Zv);
        return Zv;
    }
    private static <d extends Wu<d>> void f(
            d[] b, int mr, int GN) {
        if (mr != GN) {
            d Z = b[mr];
            b[mr] = b[GN];
            b[GN] = Z;
        }
    }
    private static J qu = new J();
    public static <d extends Wu<d>> void k(d[] b) {
        k(b, 0, b.r - 1);
    }
    private static <d extends Wu<d>> void k(
            d[] b, int R, int GH) {
        if (R < GH) {
            int U = UR(b, R, GH);
            k(b, R, U - 1);
            k(b, U + 1, GH);
        }
    }
    private static <d extends Wu<d>> int UR(
            d[] b, int R, int GH) {
        int U = R + qu.nextInt(GH - R);
        f(b, GH, U);
        return T(b, R, GH);
    }
}