package d;
public class n<T extends t<T>> implements u<T> {
    private r<T> D5;
    private int v;
    public n(r<T> D5, int v) {
        this.v = v;
        this.D5 = D5;
    }
    @xM
    public void I(T[] U) {
        I(U, 0, U.F - 1);
    }
    public void I(T[] U, int ln, int O) {
        int b = ln;
        int C = O - 1;
        T V = U[O];
        do {
            while (U[b].Or(V) < 0) {
                b++;
            }
            while (U[C].Or(V) >= 0 && C > b) {
                C--;
            }
            if (b < C) {
                y.m(U, b, C);
            }
        } while (b < C);
        y.m(U, b, O);
        if (ln < b - 1) {
            int h = b - ln;
            if (h < v) {
                D5.q(U, ln, b - 1);
            } else {
                I(U, ln, b - 1);
            }
        }
        if (O > b + 1) {
            int h = O - b;
            if (h < v) {
                D5.q(U, b + 1, O);
            } else {
                I(U, b + 1, O);
            }
        }
    }
}