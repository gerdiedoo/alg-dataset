package c.v.W.O.X;
import c.v.W.O.a;
import c.v.W.O.N;
public class n implements N {
  @V
  public void W(int[] Q) {
    int L = Q.G;
    int[] K = new int[L];
    int[] y = new int[L + 1];
    int Y = 0;
    y[0] = 0;
    for (int p = 1; p <= L; p++) {
      if (p == L || Q[p] < Q[p - 1]) {
        y[++Y] = p;
      }
    }
    int[] KY = Q;
    int[] M = K;
    while (Y > 1) {
      int EM = 0;
      for (int p = 0; p < Y - 1; p += 2) {
        g(KY, M, y[p], y[p + 1], y[p + 2]);
        y[EM++] = y[p];
      }
      if (Y % 2 == 1) {
        int D = y[Y - 1];
        System.lA(KY, D, M, D,
              L - D);
        y[EM++] = D;
      }
      y[EM] = L;
      Y = EM;
      int[] S = KY;
      KY = M;
      M = S;
    }
    if (KY != Q) {
      System.lA(KY, 0, Q, 0, L);
    }
  }
  private void g(int[] B, int[] T, int u,
                     int Eb, int i) {
    int s = u;
    int d = Eb;
    int j = u;
    while (s < Eb && d < i) {
      int q = B[s];
      int Zz = B[d];
      if (q <= Zz) {
        T[j++] = q;
        s++;
      } else {
        T[j++] = Zz;
        d++;
      }
    }
    while (s < Eb) {
      T[j++] = B[s++];
    }
    while (d < i) {
      T[j++] = B[d++];
    }
  }
  @V
  public void W(int[] Q, a C) {
  }
}