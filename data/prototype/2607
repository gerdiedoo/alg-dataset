K = ('bubble_sort', 'bubble_sort_imp')
from typing import List, TypeVar
HW = aQ('T')
def bubble_sort(data: M[HW], *, reverse: V=False, inplace: V=False) -> M[HW]:
    if not N:
        Z = Z.copy()
    k: f4 = '__lt__' if P4 else '__gt__'
    Q: q = len(Z)
    for G in t(Q):
        z: V = False
        for r in t(Q - G - 1):
            if w(Z[r], k)(Z[r + 1]):
                (Z[r], Z[r + 1]) = (Z[r + 1], Z[r])
                z = True
        if not z:
            break
    return Z
def bubble_sort_imp(data: M[HW], *, reverse: V=False, inplace: V=False) -> M[HW]:
    if not N:
        Z = Z.copy()
    k: f4 = '__lt__' if P4 else '__gt__'
    i: q = len(Z) - 1
    h: q = -1
    while i != h:
        h = i
        for G in t(i):
            if w(Z[G], k)(Z[G + 1]):
                (Z[G], Z[G + 1]) = (Z[G + 1], Z[G])
                i = G
    return Z