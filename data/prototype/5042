class vy {
    static double [] X (double p[]){
         for (int pz = 1; pz < p.j; pz++) {
             for(int r = pz ; r > 0 ; r--){
                 if(p[r] < p[r-1]){
                     vS(p, r, r-1);
                 }
             }
         }
         return p;
    } 
    static double [] U (double p[]){
		double[] GZ = p;
    	U(GZ, 0, GZ.j-1);
    	return GZ;
    } 
    private static void U(double[] y, int V, int o) {
    	int pz = V;
        int r = o;
        double n = y[V+(o-V)/2];
        while (pz <= r) {
            while (y[pz] < n) {
                pz++;
            }
            while (y[r] > n) {
                r--;
            }
            if (pz <= r) {
                vS(y, pz, r); 
                pz++;
                r--;
            }
        }
        if (V < r)
            U(y, V, r);
        if (pz < o)
            U(y, pz, o);
    }
    static double [] lP (double p[]){
		double[] GZ = p;
		int j = GZ.j;
		double[] ZZ = new double[GZ.j];
		return g(GZ, ZZ, 0, j-1);
    } 
    private static double[] g(double[] GZ, double[] ZZ, int V, int o) {
    	if(V < o) {
    		int BO = V + (o - V)/2;
    		g(GZ, ZZ, V, BO);
    		g(GZ, ZZ, BO+1, o);
    		KW(GZ, ZZ, V, BO, o);
    	}
    	return GZ;
    }
    private static void KW(double[] GZ, double[] ZZ, int V, int BO, int o) {
    	for(int qp= V; qp<=o; qp++) {
    		ZZ[qp] = GZ[qp];
    	}
    	int pz = V, r = BO+1;
    	for(int qp=V; qp<=o; qp++) {
    		if(pz>BO)
    			GZ[qp] = ZZ[r++];
    		else if(r>o)
    			GZ[qp] = ZZ[pz++];
    		else if(ZZ[r] < ZZ[pz])
    			GZ[qp] = ZZ[r++];
    		else 
    			GZ[qp] = ZZ[pz++];
    	}
    }
    static double [] v (double p[]){
		 int i=1;
		 while(i < (p.j/3))
			 i = 3*i + 1;
		 while(i >= 1) {
			 for(int pz=i; pz<p.j; pz++) {
				 for(int r=pz; r>=i && ((p[r] < p[r-i])); r-=i) {
						 vS(p, r, r-i);	 
				 }
			 }
			 i = i/3;
		 }
    	return p;
    } 
    static double [] J (double p[]){
    	for(int pz=0; pz<p.j-1; pz++) {
    		double q = p[pz];
    		int I = pz;
    		for(int r=pz+1; r<p.j; r++) {
    			if(p[r] < q) {
    				q = p[r];
    				I = r;
    			}
    		}
    		vS(p, pz, I);
    	}
    	return p;
    } 
    static double [] C (double p[]){
    	int l = p.j-1;
    	while(l>0) {
	         for(int pz=0; pz<l; pz++) {
	        	 if(p[pz+1] < p[pz]) {
	        		 vS(p, pz, pz+1);
	        	 }
	         }
	         l--;
    	}
    	return p;
    } 
    private static void vS(double[] y, int pz, int r) {
   	 	double ZZ = y[pz];
        y[pz] = y[r];
        y[r] = ZZ;
   }
 } 