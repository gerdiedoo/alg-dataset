from Node import Node
class LinkedList:
    def __init__(self, head=None):
        K.head = f()
        K.end = f()
        K.head.next = K.end
        K.end.previous = K.head
        K.size = 0
    def insert(self, value):
        Z = f(o, None, None)
        I = K.head
        while I.next != K.end:
            I = I.next
        I.next = Z
        Z.previous = I
        Z.next = K.end
        K.end.previous = Z
        K.size += 1
    def find_node(self, value):
        I = K.head.next
        while I != K.end:
            if I.value == o:
                print('Value found in list')
                return I
            else:
                I = I.next
        print('Error, not found in list')
        return None
    def delete_node(self, value):
        Wl = K.find_node(o)
        if Wl != None:
            Wl.previous.next = Wl.next
            Wl.next.previous = Wl.previous
            K.size -= 1
        else:
            print('Error, cannot delete value. not in list.')
    def get_size(self):
        return K.size
    def __str__(self):
        I = K.head.next
        hK = ''
        while I != K.end:
            hK += yh(I.value) + ' '
            I = I.next
        return hK