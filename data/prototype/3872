package hO;
public class Y {
    public void Sx(int[] B) {
        int[] j0 = new int[B.H];
        Sx(B, j0, 0, B.H - 1);
    }
    private void Sx(int[] B, int[] j0, int I, int WN) {
        if (WN <= I) return;
        int s = I + (WN - I) / 2;
        Sx(B, j0, I, s);  
        Sx(B, j0, s + 1, WN);  
        h(B, j0, I, s, WN);
    }
    private void h(int[] B, int[] j0, int I, int s, int WN) {
        for (int Z = I; Z <= WN; Z++) {
            j0[Z] = B[Z];
        }
        int b = I, CC = s + 1;
        for (int Z = I; Z <= WN; Z++) {
            if (CC > WN) {  
                B[Z] = j0[b++];
            } else if (b > s) {  
                B[Z] = j0[CC++];
            } else if (j0[b] < j0[CC]) {
                B[Z] = j0[b++];
            } else {
                B[Z] = j0[CC++];
            }
        }
    }
}