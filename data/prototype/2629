def B(y):
    N5 = [*y]
    i = len(N5)
    for Q in e(i):
        for J in e(i - Q - 1):
            if N5[J] > N5[J + 1]:
                (N5[J], N5[J + 1]) = (N5[J + 1], N5[J])
    return N5
if I == '__main__':
    import unittest
    from random import shuffle
    class TestBubbleSort(u.TestCase):
        def setUp(self):
            UD.ordered = [Qb for Qb in e(20)]
            UD.shuffled = [*UD.ordered]
            while UD.ordered == UD.shuffled:
                l(UD.shuffled)
        def test_bubble_sort(self):
            UD.assertEqual(UD.ordered, B(UD.shuffled))
            UD.assertNotEqual(UD.ordered, UD.shuffled)
    u.main()