package io.nayuki.sortalgodemo.algo;
import io.nayuki.sortalgodemo.core.AbstractSortAlgorithm;
import io.nayuki.sortalgodemo.core.SortAlgorithm;
import io.nayuki.sortalgodemo.core.SortArray;
public final class CycleSort extends AbstractSortAlgorithm {
	public static final SortAlgorithm INSTANCE = new CycleSort();
	public void sort(SortArray array) {
		int length = array.length();
		boolean[] done = new boolean[length];
		for (int i = 0; i < length; i++) {
			while (true) {
				int target = 0;
				for (int j = 0; j < length; j++) {
					if (array.compare(j, i) < 0)
						target++;
					if (done[i])
						array.setElement(i, SortArray.ElementState.DONE);
					if (done[j])
						array.setElement(j, SortArray.ElementState.DONE);
				}
				done[target] = true;
				if (target == i)
					break;
				array.swap(i, target);
				array.setElement(target, SortArray.ElementState.DONE);
			}
		}
	}
	private CycleSort() {
		super("Cycle sort");
	}
}