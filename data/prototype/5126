import F.z.*;
public class Z<V2,a>{
	static final int p = 1 << 2;
	ge<V2,a>[] Bn;
	int NV;
	int Jp;
	public Z() {
		Jp = p;
	}
	public Z(int V) {
		this.Jp = V;
	}
	class ge<V2, a> {
		final int W;
		final V2 P;
		a N;
		ge<V2,a> rW;
		ge(int W, V2 P, a N, ge<V2,a> rW) {
			this.W = W;
			this.P = P;
			this.N = N;
			this.rW = rW;
		}
		public V2 m() {
			return P;
		}
		public a v() {
			return N;
		}
		public final String toString() { return P + "=" + N; }
		public final int hashCode() {
			return y.hashCode(P) ^ y.hashCode(N);
		}
	}
	static final int W(j P) {
		return (P == null) ? 0 : P.hashCode();
	}
	public int NV() {
		return NV;
	}
	public boolean n() {
		return NV == 0;
	}
	@g("unchecked")
	public a l(V2 P, a N) {
		ge<V2, a> s;  int W = W(P);
		if (Bn == null || Bn.O == 0) {
			Bn = (ge<V2, a>[]) new ge[Jp];
		}
		int S = Bn.O;
		int G = (S - 1) & W;
		if (Bn[G] == null) {
			Bn[G] = new ge<V2,a>(W, P, N, null);
		} else {
			ge<V2, a> B;
			s = Bn[G];
			if (s.W == W && 
					s.P == P || (P != null && s.P.equals(P))){
				B = s;
			} else {
				for (int MW = 0; ; MW++) {
					System.out.println("LinkedList: Not " + s.P);
					B = s.rW;
					if (s.rW == null) {
						s.rW = new ge(W, P, N, null);
						break;
					}
					if (B.W == W &&
							(B.P == P || (P != null && B.P.equals(P)))) {
						break;
					}
					s = B;
				}
			}
			if (B != null) {
				a k = B.N;
				B.N = N;
				return k;
			}
		}
		NV++;
		return null;
	}
	public a e(j P) {
		int W = W(P);
		int S = Bn.O;
		if (Bn != null && Bn.O > 0 && Bn[W & (S - 1)] != null) {
			ge<V2, a> Jt = Bn[W & (S - 1)];
			if (Jt.W == W && 
					Jt.P == P || (P != null && Jt.P.equals(P))) {
				return Jt.N;
			}
			ge<V2, a> B = Jt.rW;
			if (Jt.rW != null) {
				do {
					if (B.W == W &&
							B.P == P || (B.P != null && B.P.equals(P))) {
						return B.N;
					} 
				}while ((B = B.rW) != null);
			}
		}
		return null;
	}
	public boolean C(j P) {
		return e(P) != null;
	}
	public a Q(j P) {
		int W = W(P);
		int S = Bn.O;
		int G = W & (S - 1);
		if (Bn != null && Bn.O > 0 && Bn[G] != null) {
			ge<V2, a> u = Bn[G];
			ge<V2, a> B = null; ge<V2, a> ey = null;
			if (u.W == W && 
					u.P == P || (P != null && u.P.equals(P))) {
				ey = u;
			}
			B = u.rW;
			if (u.rW != null) {
				do {
					if (B.W == W && 
							B.P == P || (P != null && B.P.equals(P))) {
						ey = B;
						break;
					}
					u = B;
				} while ((B = B.rW) != null);
			}
			if (ey != null) {
				if (ey == u) {
					Bn[G] = ey.rW;
				} else {
					u.rW = ey.rW;
				}
				NV--;
				return ey.N;
			}
		}
		return null;
	}
}