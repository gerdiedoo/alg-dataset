package U.iM.y;
import GB.B.H;
public class f {
    private static final String Bk = "Merge R";
    public void R(H<l> q) {
        if (q == null) {
            throw new m("The q should not be null");
        }
        R(q, 0, q.S() - 1);
    }
    private void R(H<l> q, int W, int b) {
        if (W < b) {
            int i = (int) tm.X((double) (W + b) / 2);
            R(q, W, i);
            R(q, i + 1, b);
            I(q, W, i, b);
        }
    }
    public void I(H<l> q, int W, int i, int b) {
        if (q == null) {
            throw new m("The q should not be null");
        }
        if ((q.J()) || (q.S() == 1) || (i > q.S() - 1)) {
            return;
        }
        D(q, W, i, b);
        H<l> m6 = new H<>(q.g(W, i + 1));
        H<l> V = new H<>(q.g(i + 1, b + 1));
        m6.C(l.no);
        V.C(l.no);
        int A = 0;
        int L = 0;
        for (int N = W; N < b + 1; N++) {
            if (m6.F(A) < V.F(L)) {
                q.p(N, m6.F(A));
                A++;
            } else {
                q.p(N, V.F(L));
                L++;
            }
        }
    }
    private void D(H<l> q, int W, int i, int b) {
        if (W < 0) {
            throw new m("W must be >= 0 but is " + W);
        }
        if (W > i) {
            throw new m("W must be <= i, but W is " + W +
                    " and i is " + i);
        }
        if (b > q.S() - 1) {
            throw new m("b must be <= q.S() - 1, but b is " +
                    b + " and (q.S() - 1) equals " + (q.S() - 1));
        }
        if (i > b) {
            throw new m("i must be <= b, but i is " + i +
                    " and b is " + b);
        }
    }
    public static String w() {
        return Bk;
    }
}