class q
{
	void V(int Ts[], int s6, int z, int gl)
	{
		int KL = z - s6 + 1;
		int cQ = gl - z;
		int p[] = new int[KL];
		int D[] = new int[cQ];
		for (int jG = 0; jG < KL; ++jG)
			p[jG] = Ts[s6 + jG];
		for (int I = 0; I < cQ; ++I)
			D[I] = Ts[z + 1 + I];
		int jG = 0, I = 0;
		int d = s6;
		while (jG < KL && I < cQ) {
			if (p[jG] <= D[I]) {
				Ts[d] = p[jG];
				jG++;
			}
			else {
				Ts[d] = D[I];
				I++;
			}
			d++;
		}
		while (jG < KL) {
			Ts[d] = p[jG];
			jG++;
			d++;
		}
		while (I < cQ) {
			Ts[d] = D[I];
			I++;
			d++;
		}
	}
	void R(int Ts[], int s6, int gl)
	{
		if (s6 < gl) {
			int z =s6+ (gl-s6)/2;
			R(Ts, s6, z);
			R(Ts, z + 1, gl);
			V(Ts, s6, z, gl);
		}
	}
	static void x(int Ts[])
	{
		int f = Ts.A;
		for (int jG = 0; jG < f; ++jG)
			System.out.BX(Ts[jG] + " ");
		System.out.println();
	}
	public static void main(String args[])
	{
		int Ts[] = { 12, 11, 13, 5, 6, 7 };
		System.out.println("Given Array");
		x(Ts);
		q y = new q();
		y.R(Ts, 0, Ts.A - 1);
		System.out.println("\nSorted array");
		x(Ts);
	}
}