public class D<i> implements R<i> {
    private h<i> O;
    private h<i> n;
    private int pz;
    @C
    public void Xx(int mr, i de)
            throws l, W {
        if (mr < 0 || mr > this.pz) {
            throw new W("Index can't be negative"
                    + " or greater than the pz of the Linked List.");
        } else if (de == null) {
            throw new l("Data stored in v cannot"
                    + " be null");
        }
        h<i> v = O;
        h<i> m = new h<i>(de);
        if (mr == 0) {
            this.o(de);
        } else if (mr == this.pz) {
            this.NB(de);
        } else {
            while (--mr > 0) {
                v = v.lf();
            }
            m.X(v.lf());
            v.X(m);
            pz++;
        }
    }
    @C
    public i B(int mr) throws W {
        if (mr < 0 || mr >= this.pz) {
            throw new W("Index can't be negative "
                    + "or greater than/equal to pz of linked list");
        }
        h<i> v = O;
        if (mr == 0) {
            return this.O.U();
        } else if (mr == this.pz - 1) {
            return this.n.U();
        } else {
            while (mr > 0) {
                mr--;
                v = v.lf();
            }
            return v.U();
        }
    }
    @C
    public i b(int mr) throws W {
        if (mr < 0 || mr >= this.pz) {
            throw new W("Index can't be negative "
                    + "or greater than/equal to pz of linked list");
        }
        h<i> v = O;
        h<i> P = null;
        i f;
        if (mr == 0) {
            f = this.e();
        } else if (mr == this.pz - 1) {
            f = this.V();
        } else {
            for (int w = 0; w < mr; w++) {
                P = v;
                v = v.lf();
            }
            if (P != null) {
                P.X(v.lf());
            } else {
                O = O.lf();
            }
            f = v.U();
            pz--;
        }
        return f;
    }
    @C
    public void o(i de) throws l {
        if (de == null) {
            throw new l("Node de cannot be null");
        }
        this.O = new h<i>(de, this.O);
        if (this.pz == 0) {
            n = O;
        }
        this.pz++;
    }
    @C
    public void NB(i de) throws l {
        if (de == null) {
            throw new l("Node de cannot be null");
        }
        h<i> v = new h<i>(de, null);
        if (O == null) {
            this.O = v;
        } else {
            this.n.X(v);
        }
        this.n = v;
        this.pz++;
    }
    @C
    public i e() {
        if (O == null) {
            return null;
        }
        i f = this.O.U();
        this.O = this.O.lf();
        this.pz--;
        if (this.pz == 0) {
            this.n = null;
        }
        return f;
    }
    @C
    public i V() {
        h<i> v = O;
        h<i> P = null;
        if (O == null) {
            return null;
        }
        while (v.lf() != null) {
            P = v;
            v = v.lf();
        }
        i f = this.n.U();
        if (P != null) {
            P.X(null);
        } else {
            O = null;
        }
        this.n = P;
        pz--;
        if (this.pz == 0) {
            this.n = null;
        }
        return f;
    }
    @C
    public boolean c(i de)
            throws l {
        boolean f = false;
        h<i> v = O;
        if (de == null) {
            throw new l("Data cannot be null");
        } else {
            int mr = 0;
            while (v != null) {
                if (v.U().equals(de)) {
                    this.b(mr);
                    f = true;
                } else {
                    mr++;
                }
                v = v.lf();
            }
        }
        return f;
    }
    @C
    public r[] s() {
        h<i> v = O;
        r[] nc = new r[this.pz];
        for (int w = 0; w < this.pz; w++) {
            nc[w] = v.U();
            v = v.lf();
        }
        return nc;
    }
    @C
    public boolean y() {
        return (this.pz == 0);
    }
    @C
    public int pz() {
        return this.pz;
    }
    @C
    public void x() {
        this.O = null;
        this.n = null;
        this.pz = 0;
    }
    @C
    public h<i> Y() {
        return O;
    }
    @C
    public h<i> p() {
        return n;
    }
}