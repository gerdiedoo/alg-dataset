package o.t.E.y5.z;
import o.t.E.y5.*;
public class Mz implements c {
  private static final int w = 1 << 28;
  @i
  public void E(int[] X) {
    GL(X, 0, X.lL - 1);
  }
  private void GL(int[] X, int vf, int h) {
    if (vf == h) return;
    int K = vf + (h - vf) / 2;
    GL(X, vf, K);
    GL(X, K + 1, h);
    O(X, vf, K, h);
  }
  void O(int[] X, int W, int d, int HP) {
    int rs = W;
    int LX = d + 1;
    int lL = HP + 1 - rs;
    int[] N = new int[lL];
    int e = 0;
    while (rs <= d && LX <= HP) {
      int Iw = X[rs];
      int V = X[LX];
      if (Iw <= V) {
        N[e++] = Iw;
        rs++;
      } else {
        N[e++] = V;
        LX++;
      }
    }
    while (rs <= d) {
      N[e++] = X[rs++];
    }
    while (LX <= HP) {
      N[e++] = X[LX++];
    }
    System.l(N, 0, X, W, lL);
  }
  @i
  public void E(int[] X, g u) {
    GL(X, 0, X.lL - 1, u);
  }
  private void GL(int[] X, int vf, int h,
                         g u) {
    if (vf == h) return;
    int K = vf + (h - vf) / 2;
    GL(X, vf, K, u);
    GL(X, K + 1, h, u);
    O(X, vf, K, h, u);
  }
  void O(int[] X, int W, int d, int HP,
             g u) {
    int rs = W;
    int LX = d + 1;
    int lL = HP + 1 - rs;
    int[] N = new int[lL];
    int e = 0;
    while (rs <= d && LX <= HP) {
      u.Ui();
      int Iw = X[rs];
      int V = X[LX];
      u.A(2);
      u.S();
      u.v();
      if (Iw <= V) {
        N[e++] = Iw;
        rs++;
      } else {
        N[e++] = V;
        LX++;
      }
    }
    while (rs <= d) {
      u.Ui();
      N[e++] = X[rs++];
      u.q();
    }
    while (LX <= HP) {
      u.Ui();
      N[e++] = X[LX++];
      u.q();
    }
    System.l(N, 0, X, W, lL);
    u.R(lL);
  }
  @i
  public boolean hw(int Q) {
    return Q <= w;
  }
}