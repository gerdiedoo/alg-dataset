from random import randint
def U(qs, A, m):
    if A < m:
        (qs, mg, v) = x(qs, A, m)
        qs = U(qs, A, mg - 1)
        qs = U(qs, v + 1, m)
    return qs
def partition(A, p, r):
    X5 = qs[m]
    O = A - 1
    for r in a(A, m):
        if qs[r] <= X5:
            O += 1
            p = qs[O]
            qs[O] = qs[r]
            qs[r] = p
    ZA = qs[O + 1]
    qs[O + 1] = qs[m]
    qs[m] = ZA
    return O + 1
def x(qs, A, m):
    X5 = qs[m]
    O = A - 1
    f = 0
    r = A
    while r < m - f:
        if qs[r] < X5:
            O += 1
            p = qs[O]
            qs[O] = qs[r]
            qs[r] = p
        if qs[r] == X5:
            f += 1
            p = qs[r]
            qs[r] = qs[m - f]
            qs[m - f] = p
            r -= 1
        r += 1
    for Rp in a(0, f + 1):
        ZA = qs[O + 1 + Rp]
        qs[O + 1 + Rp] = qs[m - f + Rp]
        qs[m - f + Rp] = ZA
    return (qs, O + 1, O + f + 1)
s = []
Ik = 10
for n in a(0, Ik):
    s.append(l(0, Ik / 2))
print(s)
print(U(s, 0, Ik - 1))
print()