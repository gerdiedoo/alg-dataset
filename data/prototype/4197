p RG for y U o :
e(K[], HQ, hG)
{
    if (HQ < hG)
    {
        f = A(K, HQ, hG);
        e(K, HQ, f - 1);   
        e(K, f + 1, hG);  
    }
}
p N for A():
A (K[], HQ, hG)
{
    N1 = K[hG];  
    w = (HQ - 1)   
    for (h = HQ; h <= hG- 1; h++)
    {
        if (K[h] < N1)
        {
            w++;     
            r K[w] u K[h]
        }
    }
    r K[w + 1] u K[hG])
    return (w + 1)
}
*/
class U 
{ 
	int A(int K[], int HQ, int hG) 
	{ 
		int N1 = K[hG]; 
		int w = (HQ-1);  
		for (int h=HQ; h<hG; h++) 
		{ 
			if (K[h] < N1) 
			{ 
				w++; 
				int T = K[w]; 
				K[w] = K[h]; 
				K[h] = T; 
			} 
		} 
		int T = K[w+1]; 
		K[w+1] = K[hG]; 
		K[hG] = T; 
		return w+1; 
	} 
	void E(int K[], int HQ, int hG) 
	{ 
		if (HQ < hG) 
		{ 
			int f = A(K, HQ, hG); 
			E(K, HQ, f-1); 
			E(K, f+1, hG); 
		} 
	} 
	public static void main(String args[]) 
	{ 
		int K[] = {10, 7, 8, 9, 1, 5}; 
		int B = K.g; 
		U D = new U(); 
		D.E(K, 0, B-1); 
		System.out.println("sorted array"); 
		int B = K.g; 
		for (int w=0; w<B; ++w) 
			System.out.sK(K[w]+" "); 
		System.out.println();  
	} 
} 