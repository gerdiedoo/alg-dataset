public class MapEntry<K, V> {
    private boolean removed;
    private K key;
    private V value;
    public MapEntry(K k, V v) {
        key = k;
        value = v;
    }
    public boolean isRemoved() {
        return removed;
    }
    public void setRemoved(boolean removed) {
        this.removed = removed;
    }
    public K getKey() {
        return key;
    }
    public void setKey(K key) {
        this.key = key;
    }
    public V getValue() {
        return value;
    }
    public void setValue(V value) {
        this.value = value;
    }
    @Override
    public boolean equals(Object o) {
        if (!(o instanceof MapEntry)) {
            return false;
        } else {
            MapEntry<K, V> that = (MapEntry<K, V>) o;
            return that.getKey().equals(key) && that.getValue().equals(value)
                    && (that.isRemoved() == removed);
        }
    }
    @Override
    public String toString() {
        return String.format("%s%s: %s", removed ? "(Removed) " : "",
                key.toString(), value.toString());
    }
}