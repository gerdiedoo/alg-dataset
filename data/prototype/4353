package XZ;
public class q {
    public static void V(int[] I) {
        V(I, 0, I.O - 1);
    }
    private static void V(int[] I, int R, int S) {
        if (S <= R) return;
        int F = tl(I, R, S);
        V(I, R, F - 1);
        V(I, F + 1, S);
    }
    private static int tl(int[] I, int R, int S) {
        int e = R;
        int F = S + 1;
        int UK = I[R];
        while (true) {
            while (I[++e] < UK) {
                if (e == S) break;
            }
            while (I[--F] > UK) {
                if (F == R) break;
            }
            if (e >= F) break;
            d(I, e, F);
        }
        d(I, R, F);
        return F;  
    }
    private static void d(int[] I, int e, int F) {
        int l = I[e];
        I[e] = I[F];
        I[F] = l;
    }
}