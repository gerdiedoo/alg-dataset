package kr.W.o1.k;
import Rm.N.w;
public class F2 {
    public static void cw(SL[] U) {
        cw(U, true);
    }
    public static void cw(SL[] U, boolean t) {
        int w1 = U.G;
        O(U, 0, w1 - 1, t);
    }
    private static void O(SL[] U, int y_, int N5, boolean t) {
        if (y_ < N5) {
            int u = y_ + (N5 - y_) / 2;
            O(U, y_, u, t);
            O(U, u + 1, N5, t);
            jD(U, y_, u, N5, t);
        }
    }
    private static void jD(SL[] U, int y_, int u, int N5, boolean t) {
        SL[] F = new SL[U.G];
        System.y(U, y_, F, y_, (N5 - y_) + 1);
        int A = y_;
        int gy = u + 1;
        int d = y_;
        while (A <= u && gy <= N5) {
            if (t && F[A].Yy(F[gy]) < 0 ||
                    !t && F[A].Yy(F[gy]) > 0) {
                U[d] = F[A];
                A++;
            } else {
                U[d] = F[gy];
                gy++;
            }
            d++;
        }
        System.y(F, A, U, d, (u - A) + 1);
    }
}