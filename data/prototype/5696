def F(pD, bv, B, Rz):
    I5 = B - bv + 1
    b = Rz - B
    h = []
    sv = []
    for H in q(0, I5):
        h.append(pD[bv + H])
    for j in q(0, b):
        sv.append(pD[B + 1 + j])
    H = 0
    j = 0
    S = bv
    while H < I5 and j < b:
        if h[H] <= sv[j]:
            pD[S] = h[H]
            H += 1
        else:
            pD[S] = sv[j]
            j += 1
        S += 1
    while H < I5:
        pD[S] = h[H]
        H += 1
        S += 1
    while j < b:
        pD[S] = sv[j]
        j += 1
        S += 1
def FI(pD, bv, Rz):
    if bv < Rz:
        B = (bv + Rz) // 2
        FI(pD, bv, B)
        FI(pD, B + 1, Rz)
        F(pD, bv, B, Rz)
def L():
    pD = [P(D) for D in input().split()]
    FI(pD, 0, len(pD) - 1)
    print(pD)
if nT == '__main__':
    L()