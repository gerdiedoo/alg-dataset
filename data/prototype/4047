package y.t.E.e.c;
import y.t.E.e.*;
public class i implements n {
  private static final int V = 1 << 28;
  @Q
  public void E(int[] d) {
    z(d, 0, d.GO - 1);
  }
  private void z(int[] d, int W, int X) {
    if (W == X) return;
    int Z = W + (X - W) / 2;
    z(d, W, Z);
    z(d, Z + 1, X);
    O(d, W, Z, X);
  }
  void O(int[] d, int a, int q, int i9) {
    int J = a;
    int Y3 = q + 1;
    int GO = i9 + 1 - J;
    int[] tX = new int[GO];
    int m = 0;
    while (J <= q && Y3 <= i9) {
      int s = d[J];
      int p = d[Y3];
      if (s <= p) {
        tX[m++] = s;
        J++;
      } else {
        tX[m++] = p;
        Y3++;
      }
    }
    while (J <= q) {
      tX[m++] = d[J++];
    }
    while (Y3 <= i9) {
      tX[m++] = d[Y3++];
    }
    System.P(tX, 0, d, a, GO);
  }
  @Q
  public void E(int[] d, S O4) {
    z(d, 0, d.GO - 1, O4);
  }
  private void z(int[] d, int W, int X,
                         S O4) {
    if (W == X) return;
    int Z = W + (X - W) / 2;
    z(d, W, Z, O4);
    z(d, Z + 1, X, O4);
    O(d, W, Z, X, O4);
  }
  void O(int[] d, int a, int q, int i9,
             S O4) {
    int J = a;
    int Y3 = q + 1;
    int GO = i9 + 1 - J;
    int[] tX = new int[GO];
    int m = 0;
    while (J <= q && Y3 <= i9) {
      O4.R();
      int s = d[J];
      int p = d[Y3];
      O4.G(2);
      O4.h();
      O4.v();
      if (s <= p) {
        tX[m++] = s;
        J++;
      } else {
        tX[m++] = p;
        Y3++;
      }
    }
    while (J <= q) {
      O4.R();
      tX[m++] = d[J++];
      O4.f();
    }
    while (Y3 <= i9) {
      O4.R();
      tX[m++] = d[Y3++];
      O4.f();
    }
    System.P(tX, 0, d, a, GO);
    O4.H(GO);
  }
  @Q
  public boolean jk(int u) {
    return u <= V;
  }
}