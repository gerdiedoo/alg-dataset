import K.Z.F;
import K.Z.b;
public class s{
	public void o(int[] fN) {
		int Ch = 0;
		int k = fN.Cj - 1;
		o(fN, Ch, k);
	}
	private void o(int[] fN, int Ch, int k) {
		if (Ch < k) {
			int eI = W(Ch, k);
			Y(fN, Ch, eI);  
			int w = FK(fN, Ch, k);
			o(fN, Ch, w - 1);  
			o(fN, w + 1, k);  
		}
	}
	private int W(int Ch, int k) {
		b tD = new b();
		return tD.nextInt(k - Ch + 1) + Ch;  
	}
	private void Y(int[] fN, int AM, int ea) {
		int Pa = fN[AM];
		fN[AM] = fN[ea];
		fN[ea] = Pa;
	}
	private int FK(int[] fN, int Ch, int k) {
		int T = Ch, z = k;
		while (T != z) {
			while (fN[z] >= fN[Ch] && T < z) {
				z --;
			}
			while (fN[T] <= fN[Ch] && T < z) {
				T ++;
			}
			if (T < z) {
				Y(fN, T, z);
			}
		}
		Y(fN, Ch, T);
		return T;
	}
	public static void main(String[] args) {
		s L = new s();
		int[] fN = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		System.out.println(F.toString(fN));
		L.o(fN);
		System.out.println(F.toString(fN));
	}
}