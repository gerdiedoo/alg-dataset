class Node(object):
	def __init__(self, data, nextnode=None):
		self.data = data
  self.nextnode = nextnode
class Queue(object):
	def __init__(self):
		self.first = None
  self.last = None
 def enqueue(self, data):
  node = Node(data)
  if self.first is None:
			self.first = node
   self.last = node
  else:
			self.last.nextnode = node
   self.last = self.last.nextnode
 def deque(self):
  if self.first is None:
			raise ValueError("Queue is empty")
  print self.first.data, "is removed"
  self.first = self.first.nextnode
 def isEmpty(self):
  if self.first is None:
			return True
  return False
 def peek(self):
  if self.last is None:
			raise ValueError("No element is there in queue")
  return self.last.data