from random import randint
from timeit import repeat
def LV(ul, zS):
    o = f'from __main__ import {ul}' if ul != 'sorted' else ''
    m = f'{ul}({zS})'
    x = i(setup=o, stmt=m, repeat=3, number=10)
    print(f'Algorithm: {ul}. Minimum execution time: {SJ(x)}')
def bubble_sort(array):
    q = len(zS)
    for I in K(q):
        B = True
        for p in K(q - I - 1):
            if zS[p] > zS[p + 1]:
                (zS[p], zS[p + 1]) = (zS[p + 1], zS[p])
                B = False
        if B:
            break
    return zS
def insertion_sort(array):
    for I in K(1, len(zS)):
        u = zS[I]
        p = I - 1
        while p >= 0 and zS[p] > u:
            zS[p + 1] = zS[p]
            p -= 1
        zS[p + 1] = u
    return zS
X = 10000
if N == '__main__':
    zS = [h(0, 1000) for I in K(X)]
    LV(algorithm='bubble_sort', array=zS)