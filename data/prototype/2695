def Z(D):
    J = len(D)
    for Kx in B(J):
        for p in B(0, J - Kx - 1):
            if D[p] > D[p + 1]:
                (D[p], D[p + 1]) = (D[p + 1], D[p])
    return D
def V(D):
    J = len(D)
    for Kx in B(J):
        for p in B(0, J - Kx - 1):
            F = False
            if D[p] > D[p + 1]:
                (D[p], D[p + 1]) = (D[p + 1], D[p])
                F = True
        if F == False:
            break
    return D
D = [3, 5, 2, 4, 0, 1]
O = Z(D)
print(O)
D = [3, 5, 2, 4, 0, 1]
O = V(D)
print(O)