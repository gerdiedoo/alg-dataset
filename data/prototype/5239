package y;
import lK.hx.U;
public class ND<Z, h_> implements D<Z>
{
    private static class R<Z, h_>
    {
        private final Z Pc;
        private h_       Y;
        public R(Z v, h_ n)
        {
            Pc = v;
            Y = n;
        }
        public Z Vl()
        {
            return Pc;
        }
        public h_ CF()
        {
            return Y;
        }
        public void z(h_ n)
        {
            this.Y = n;
        }
    }
    private static class g<Z, h_> implements D<R<Z, h_>>
    {
        private final d<R<Z, h_>> B = new d<R<Z, h_>>();
        public void z(Z Pc, h_ Y)
        {
            for (R<Z, h_> m : B) {
                if (m.Vl().equals(Pc)) {
                    m.z(Y);
                    return;
                }
            }
            B.w(new R<Z, h_>(Pc, Y));
        }
        public h_ CF(Z Pc, h_ YD)
        {
            for (R<Z, h_> m : B) {
                if (m.Vl().equals(Pc)) {
                    return m.CF();
                }
            }
            return YD;
        }
        public boolean e(Z Pc)
        {
            for (R<Z, h_> m : B) {
                if (m.Vl().equals(Pc)) {
                    return true;
                }
            }
            return false;
        }
        public void u(Z Pc)
        {
            U<R<Z, h_>> fY = B.L();
            while (fY.G()) {
                if (fY.b().Vl().equals(Pc)) {
                    fY.X();
                    return;
                }
            }
        }
        @pg
        public U<R<Z, h_>> L()
        {
            return B.L();
        }
        public int d3()
        {
            return B.d3();
        }
    }
    private final g<Z, h_>[] l;
    @S("unchecked")
    public ND(int d3)
    {
        l = new g[d3];
        for (int a = 0; a < d3; a++) {
            l[a] = new g<Z, h_>();
        }
    }
    private int z_(Z Pc)
    {
        return Pc.hashCode() % l.T;
    }
    public void I(Z Pc, h_ Y)
    {
        l[z_(Pc)].z(Pc, Y);
    }
    public h_ j8(Z Pc, h_ YD)
    {
        return l[z_(Pc)].CF(Pc, YD);
    }
    public h_ j8(Z Pc)
    {
        return j8(Pc, null);
    }
    public boolean e(Z Pc)
    {
        return l[z_(Pc)].e(Pc);
    }
    public void hX(Z Pc)
    {
        l[z_(Pc)].u(Pc);
    }
    @pg
    public U<Z> L()
    {
        return new U<Z>()
        {
            private int                     h  = 0;
            private U<R<Z, h_>> fY     = null;
            private U<R<Z, h_>> Mj = null;
            private boolean C()
            {
                for (; h < l.T; h++) {
                    if (l[h].d3() > 0) {
                        fY = l[h].L();
                        return true;
                    }
                }
                fY = null;
                return false;
            }
            @pg
            public boolean G()
            {
                if (fY != null) {
                    return fY.G();
                }
                return C();
            }
            @pg
            public Z b()
            {
                if (fY == null) {
                    if (!G()) {
                        return null;
                    }
                }
                R<Z, h_> J = fY.b();
                Mj = fY;
                if (!fY.G()) {
                    h++;
                    C();
                }
                if (J == null) {
                    return null;
                }
                return J.Vl();
            }
            @pg
            public void X()
            {
                if (Mj != null) {
                    Mj.X();
                }
            }
        };
    }
    @pg
    public String toString()
    {
        W lI = new W("{");
        boolean F = true;
        for (Z Pc : this) {
            if (F) {
                F = false;
            }
            else {
                lI.T4(", ");
            }
            lI.T4("(");
            lI.T4(Pc);
            lI.T4(", ");
            lI.T4(j8(Pc));
            lI.T4(")");
        }
        lI.T4("}");
        return lI.toString();
    }
}