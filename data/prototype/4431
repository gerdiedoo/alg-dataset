import B.c.u;
import B.c.P;
public class b{
	public void n(int[] a) {
		int Sf = 0;
		int Y = a.N - 1;
		n(a, Sf, Y);
	}
	private void n(int[] a, int Sf, int Y) {
		if (Sf < Y) {
			int t6 = D(Sf, Y);
			l(a, Sf, t6);  
			int V5 = x(a, Sf, Y);
			n(a, Sf, V5 - 1);  
			n(a, V5 + 1, Y);  
		}
	}
	private int D(int Sf, int Y) {
		P fn = new P();
		return fn.nextInt(Y - Sf + 1) + Sf;  
	}
	private void l(int[] a, int HQ, int J8) {
		int os = a[HQ];
		a[HQ] = a[J8];
		a[J8] = os;
	}
	private int x(int[] a, int Sf, int Y) {
		int T = Sf, m = Y;
		while (T != m) {
			while (a[m] >= a[Sf] && T < m) {
				m --;
			}
			while (a[T] <= a[Sf] && T < m) {
				T ++;
			}
			if (T < m) {
				l(a, T, m);
			}
		}
		l(a, Sf, T);
		return T;
	}
	public static void main(String[] args) {
		b G = new b();
		int[] a = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		System.out.println(u.toString(a));
		G.n(a);
		System.out.println(u.toString(a));
	}
}