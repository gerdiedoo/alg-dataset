class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
class SinglyLinkedList:
    def __init__(self):
        self.head = None
    def size(self):
        current = self.head
        size = 0
        while current is not None:
            size += 1
            current = current.next
        return size
    def insert_at_end(self, data):
        node = Node(data)
        if self.head is None:
            self.head = node
        else:
            current = self.head
            while current.next is not None:
                current = current.next
            current.next = node
    def insert_at_beg(self, data):
        node = Node(data)
        node.next = self.head
        self.head = node
    def delete_from_end(self):
        current = self.head
        previous = None
        if current is None:
            print("Linked List Underflow!!")
        else:
            while current.next is not None:
                previous = current
                current = current.next
            if previous is None:
                self.head = None
            else:
                previous.next = None
    def delete_from_beg(self):
        current = self.head
        if current is None:
            print("Linked List Underflow!!")
        else:
            self.head = current.next
    def print_data(self):
        current = self.head
        while current is not None:
            print(current.data, '->', end='')
            current = current.next
        print('End of list')
if __name__ == '__main__':
    linked_list = SinglyLinkedList()
    linked_list.insert_at_beg(3)
    linked_list.insert_at_beg(2)
    linked_list.insert_at_beg(1)
    print('After insertion at the beginning:')
    linked_list.print_data()
    linked_list.insert_at_end(4)
    linked_list.insert_at_end(5)
    print('After insertion at the end:')
    linked_list.print_data()
    print('After deletion at the beginning:')
    linked_list.delete_from_beg()
    linked_list.print_data()
    print('After deletion at the end:')
    linked_list.delete_from_end()
    linked_list.print_data()
    print("size: ", linked_list.size())