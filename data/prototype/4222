def O(qv, to, ic):
    z = qv[ic]
    k = to - 1
    for u in V(to, ic):
        if qv[u] <= z:
            k += 1
            (qv[k], qv[u]) = (qv[u], qv[k])
    (qv[k + 1], qv[ic]) = (qv[ic], qv[k + 1])
    return (k + 1, qv)
def eK(qv, to=0, ic=-1):
    if ic < 0:
        ic = len(qv) - 1
    if to < ic:
        (xH, qv) = O(qv, to, ic)
        eK(qv, to, xH - 1)
        eK(qv, xH + 1, ic)
    return qv