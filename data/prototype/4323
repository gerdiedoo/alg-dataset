def C(ws, b, kQ):
    U = b - 1
    pI = ws[kQ]
    for a in UG(b, kQ):
        if ws[a] <= pI:
            U = U + 1
            (ws[U], ws[a]) = (ws[a], ws[U])
    (ws[U + 1], ws[kQ]) = (ws[kQ], ws[U + 1])
    return U + 1
def V(ws, b, kQ):
    if b < kQ:
        pX = C(ws, b, kQ)
        V(ws, b, pX - 1)
        V(ws, pX + 1, kQ)
if f == '__main__':
    ws = [5, 3, 2, 5, 9, 1]
    V(ws, 0, len(ws) - 1)
    print(ws)