from Node import Node
class LinkedList:
    def __init__(self, head=None):
        Zw.head = k()
        Zw.end = k()
        Zw.head.next = Zw.end
        Zw.end.previous = Zw.head
        Zw.size = 0
    def insert(self, value):
        jN = k(W, None, None)
        n = Zw.head
        while n.next != Zw.end:
            n = n.next
        n.next = jN
        jN.previous = n
        jN.next = Zw.end
        Zw.end.previous = jN
        Zw.size += 1
    def find_node(self, value):
        n = Zw.head.next
        while n != Zw.end:
            if n.value == W:
                print('Value found in list')
                return n
            else:
                n = n.next
        print('Error, not found in list')
        return None
    def delete_node(self, value):
        m = Zw.find_node(W)
        if m != None:
            m.previous.next = m.next
            m.next.previous = m.previous
            Zw.size -= 1
        else:
            print('Error, cannot delete value. not in list.')
    def get_size(self):
        return Zw.size
    def __str__(self):
        n = Zw.head.next
        VU = ''
        while n != Zw.end:
            VU += L(n.value) + ' '
            n = n.next
        return VU