package Cy;
import ou.B.V;
import ou.B.Xr;
import ou.B.hu;
import ou.B.Pm;
import ou.B.I;
import ou.B.m;
public class FQ<N,w> extends T<N,w>{
	private V<be<N,w>> F = new V<>();
	public FQ(){	}
	public void a() {
		F.a();
	}
	private int h(N J){
		int n = F.X();
		for(int K = 0; K < n; K++){
			if(F.z(K).YX().equals(J)){
				return K;
			}
		}
		return -1;
	}
	private int P(w Z){
		int n = F.X();
		for(int K = 0; K < n; K++){
			if(F.z(K).R() == Z){
				return K;
			}
		}
		return -1;
	}
	public boolean u(d J) {
		int K = h((N)J);
		if(K == -1){
			return false;
		} else{
			return true;
		}
	}
	public boolean r(d Z) {
		int K = P((w)Z);
		if(K == -1){
			return false;
		} else{
			return true;
		}
	}
	private class p implements hu<H<N,w>> {
		private int K = 0;
		public boolean C(){
			return K < F.X();
		}
		public H<N,w> Y(){
			if(K == F.X()){
				throw new I();
			}
			return F.z(K++);
		}
		public void tA(){
			throw new wk();
		}
	}
	private class Q implements W<H<N,w>> {
		public hu<H<N, w>> S() {
			return new p();
		}
	}
	public m<H<N, w>> De() {
		return (m<H<N, w>>) new Q();
	}
	public w z(d J) {
		int K = h((N)J);
		if(K == -1){
			return null;
		}
		return F.z(K).R();
	}
	public w l(N J, w Z) {
		int K = h(J);
		if(K == -1){
			F.j(new be<>(J,Z));
			return null;
		} else {
			return F.z(K).km(Z);
		}
	}
	public void qh(Pm<? extends N, ? extends w> c) {
		F.cZ((Xr<? extends be<N, w>>) c);
	}
	public w tA(d J) {
		int K = h((N)J);
		int n = X();
		if(K == -1){
			return null;
		} 
		w k = F.z(K).R();
		if(K != n - 1){
			F.g(K, F.z(n-1));
		}
		F.tA(n-1);
		return k;
	}
	public int X() {
		return F.X();
	}
}