package Gd.J.z.rB.B;
public final class s extends f {
    private s() {
    }
    @I("rawtypes")
    public static void R(bI[] H) {
        bI[] Fd = new bI[H.N];
        R(H, Fd);
    };
    @I("rawtypes")
    private static void R(bI[] H, bI[] Fd) {
        int sF = H.N;
        for (int d = 1; d < sF; d = d + d)
            for (int Fp = 0; Fp < sF - d; Fp += d + d)
                X(H, Fd, Fp, Fp + d - 1,
                        D.P(Fp + d + d - 1, sF - 1));
    }
    @I("rawtypes")
    private static void X(bI[] H, bI[] Fd, int Fp, int i,
            int r) {
        Oa(H, Fd, Fp, r);
        int Q = Fp;
        int q = i + 1;
        for (int k = Fp; k <= r; k++) {
            if (Q > i)
                H[k] = Fd[q++];
            else if (q > r)
                H[k] = Fd[Q++];
            else if (j(Fd[q], Fd[Q]))
                H[k] = Fd[q++];
            else
                H[k] = Fd[Q++];
        }
    }
}