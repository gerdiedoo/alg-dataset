import time
def F(e):
    def wrap(*L, **R):
        G = K.time()
        XC = e(*L, **R)
        W = K.time()
        print('{:s} function took {:.3f} ms'.format(e.__name__, (W - G) * 1000.0))
        return XC
    return bc
def Q7(X, LH, m7):
    u = X
    S = u[LH]
    u[LH] = u[m7]
    u[m7] = S
    return u
@F
def a(X):
    u = X
    for ws in K6(len(u), 0, -1):
        for g in K6(1, ws):
            if u[g - 1] > X[g]:
                u = Q7(u, g - 1, g)
    return u
@F
def l0(X):
    u = X
    V = len(u)
    for ws in K6(0, V):
        l = V - 1 - ws
        J = 0
        for g in K6(0, l):
            if u[g] > X[J]:
                J = g
        u = Q7(u, J, l)
    return u
@F
def E(X):
    u = X
    for ws in K6(0, len(u) - 1):
        for g in K6(ws + 1, 0, -1):
            if u[g - 1] > u[g]:
                u = Q7(u, g - 1, g)
            else:
                break
    return u
@F
def O5(X):
    return C(X)
M = [555, 510, 20, 5, 78, 3, 4557, 23, 467, 12789, 663, 41, 21, 20329, 3141219]
print(a(M))
print(l0(M))
print(E(M))
print(O5(M))