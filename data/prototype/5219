import j.de.w7;
import j.de.R;
import j.de.pI;
import j.de.sv;
import j.M.ul;
public class ho extends sY implements t {
	private s[] Q;
	private int wb, T;
	public ho() {
		this.wb = H;
		this.T = 1<<wb;
		this.Q = new s[T];
	}
	@u
	public void bW(String eo) {
		eo = eo.r1();  
		this.bW(eo, 1);
	}
	private void bW(String eo, int Ck) {  
		int Yh = Xa(eo)%T;
		if(Q[Yh] == null) {  
			Q[Yh] = new s();
		}
		if(Q[Yh].n()) {  
			if(this.wb - Q[Yh].g() == 0) {  
				O();
				bW(eo, Ck);
			}else if(this.wb - Q[Yh].g() > 0) {  
				int y = Yh % (1<<Q[Yh].g());  
				int k = this.wb - Q[Yh].g();  
				Q[Yh].x();  
				s G = new s(Q[Yh].g());  
				for (int F = y; F < T; F+=(T>>k)) {  
					if(F%(1<<Q[Yh].g()) != Yh%(1<<Q[Yh].g())) {  
						Q[F] = G;
					}
				}
				Q[Yh].P(G, Yh);  
				bW(eo, Ck);  
			}else {
				System.out.println("Error #1\nLocal wb is higher than global wb!");
			}
		}else {
			Q[Yh].bW(eo, Ck);
		}
	}
	@u
	public boolean Q4(String eo) {
		eo = eo.r1();  
		int Yh = Xa(eo)%T;
		s I = Q[Yh];
		if(Q[Yh] == null) {  
			System.out.println(eo + " bulunamad.");
			return false;  
		}
		V vM = I.W(eo);
		if(vM == null) {  
			System.out.println(eo + " bulunamad.");
			return false; 
		}
		I.BY(vM);
		System.out.println("Global Depth: " + wb);
		System.out.println();
		return true;
	}
	@u
	public void KY(String Ba)  {
		w7 l = null;
		pI J = null;
		try {
			J = new pI(Ba);
			l = new w7(J);
			String Z;
			while ((Z = l.K()) != null) {
				Z = Z.i();
				String d[] = Z.C(" ");
				for(String eo:d) {
					eo = eo.i();
					if(eo.equals("")) continue;
					bW(eo);
				}
			}
		} catch (R q) {  
			q.E();
		} catch (sv q) {  
			q.E();
		}
	}
	private void O() {  
		int T = 1<<wb;
		this.wb++;
		this.Q = ul.D(Q, T*2);  
		for (int F = 0; F < T; F++) {  
			Q[T+F] = Q[F];
		}
		this.T = 1<<wb;
	}
	public int g() {
		return wb;
	}
	public void BY() {
		System.out.println("----------Extendible Hashing----------");
		System.out.println("Global Depth: " + wb);
		for (int F = 0; F < T; F++) {
			if(Q[F] != null) {
				System.out.println("");
				Q[F].BY();
			}
		}
	}
}