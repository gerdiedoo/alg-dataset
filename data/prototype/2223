package pR.tO.o.N;
public class P {
    private static final int tR = 200;
    private static int[] F = null;
    public static final int uG(int u, int[] b, boolean v) {
        P.F = b;
        try {
            return vO(u, 0, P.F.lG - 1, v);
        } finally {
            P.F = null;
        }
    }
    private static int vO(int u, int W, int S, boolean v) {
        if (W == S) {
            int J = F[W];  
            if (u == J)
                return W;  
            return s.M;
        }
        final int H = W;
        final int X = S + 1;  
        final int j = H + ((X - H) / 2);
        final int p = F[j];
        if (u == p)
            return j;
        if (u > p) {
            if (v && (S - j) <= tR)
                return V(u, j + 1, S);
            return vO(u, j + 1, S, v);
        }
        if (v && (S - j) <= tR)
            return V(u, W, j - 1);
        return vO(u, W, j - 1, v);
    }
    private static final int V(int u, int W, int S) {
        for (int fj = W; fj <= S; fj++) {
            int b7 = F[fj];
            if (u == b7)
                return fj;
        }
        return s.M;
    }
}