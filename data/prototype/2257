package N.Yn.h;
public class st {
  public static <Zt extends iG<Zt>> int cC(Zt[] AX, Zt zT) {
    int NN = 0;
    int H = AX.QI - 1;
    while (NN <= H) {
      final int w = (NN + H) / 2;
      if (AX[w].W(zT) < 0) {
        NN = w + 1;
      } else if (AX[w].W(zT) > 0) {
        H = w - 1;
      } else {
        return w;
      }
    }
    return -1;
  }
  public static void main(String[] args) {
    final Hj[] t = new Hj[]{1, 2, 3, 4, 5, 6};
    final Hj[] V = new Hj[]{-10, -2, 0, 3, 5};
    final Hj[] i = new Hj[]{1};
    final Hj[] fB = new Hj[]{};
    System.out.println("Index of 3 in t: " + cC(t, 3));
    System.out.println("Index of 1 in t: " + cC(t, 1));
    System.out.println("Index of 6 in t: " + cC(t, 6));
    System.out.println("Index of 2 in t: " + cC(t, 2));
    System.out.println("Index of -10 in V: " + cC(V, -10));
    System.out.println("Index of 0 in V: " + cC(V, 0));
    System.out.println("Index of 3 in V: " + cC(V, 3));
    System.out.println("Index of 1 in i: " + cC(i, 1));
    System.out.println("Index of -2 in i: " + cC(i, -2));
    System.out.println("Index of 1 in fB: " + cC(fB, 1));
  }
}