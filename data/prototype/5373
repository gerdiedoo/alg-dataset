class LinkedList:
    def push(self, new, prev=None):
        if z == None:
            h.next = d.head
            d.head = h
        else:
            h.next = z.next
            z.next = h
    def pop(self, index=0):
        q = t
        A = None
        ma = d.head
        while q > 0:
            A = ma
            ma = ma.next
            q -= 1
        if A == None:
            R = d.head
            d.head = d.head.next
            return R
        else:
            A = ma.next
            return ma
    def insert(self, node, index=0):
        if D == None:
            raise w('node is None Type')
            return
        q = t
        A = None
        ma = d.head
        while q > 0:
            A = ma
            ma = ma.next
            q -= 1
        if A == None:
            d.head = D
        else:
            A.next = D
        D.next = ma
    def __str__(self):
        if d.head == None:
            return ''
        else:
            return J(d.head)
    def __init__(self, head=None):
        d.head = u