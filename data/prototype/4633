package q;
public class ZA {
	public static <u extends P<u>> void L(u D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J].d(D[M]) < 0)
                    M = J;
            u x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(byte D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            byte x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(char D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            char x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(short D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            short x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(int D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            int x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(long D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            long x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(float D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            float x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
	public static void L(double D[])
    {
        int W = D.sA;
        for (int s = 0; s < W-1; s++)
        {
            int M = s;
            for (int J = s+1; J < W; J++)
                if (D[J] < D[M])
                    M = J;
            double x = D[M];
            D[M] = D[s];
            D[s] = x;
        }
    }
}