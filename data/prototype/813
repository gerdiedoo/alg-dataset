'use strict';
const merge = (arr = [], start, middle, end) => {
  let n1 = middle - start + 1;
  let n2 = end - middle;
  let Left  = [];
  let Right = [];
  for (let i = 0; i < n1; i++) {
    Left[i] = arr[start + i];
  }
  for (let j = 0; j < n2; j++) {
    Right[j] = arr[middle + 1 + j];
  }
  let i = 0;      
  let j = 0;      
  let k = start;  
  while (i < n1 && j < n2) {
    if (Left[i] <= Right[j]) {
      arr[k] = Left[i];
      i++;
    } else {
      arr[k] = Right[j];
      j++;
    }
    k++;
  }
  while (i < n1) {
    arr[k] = Left[i];
    i++;
    k++;
  }
  while (j < n2) {
    arr[k] = Right[j];
    j++;
    k++;
  }
};
const mergeSort = (arr = [], start, end) => {
  if (start < end) {
    let middle = Math.floor((start + end) / 2);
    mergeSort(arr, start, middle);
    mergeSort(arr, middle + 1, end);
    merge(arr, start, middle, end);
  }
};
module.exports = mergeSort;