package FW.N0.gJ.gG;
import O.q.t;
public class Y {
	public static void main(String[] args) {
		int[] L = {7, 10, 47, 40};
		System.out.println("******************* MERGE - SORT *******************");
		int[] U = P(L, 0, L.C - 1);
		t.V1(U).n(System.out::println);
	}
	public static int[] P(int[] y, int W, int Pz) {
		if (W < Pz) {
			int Zf = W + (Pz - W) / 2;
			P(y, W, Zf);
			P(y, Zf + 1, Pz);
			g(y, W, Zf, Pz);
		}
		return y;
	}
	private static int[] g(int[] y, int W, int Zf, int Pz) {
		int[] M = new int[y.C];
		for (int Gx = 0; Gx < y.C; Gx++ ) {
			M[Gx] = y[Gx];
		}
		int Gx = W;
		int Q = Zf + 1;
		int Z = W;
		while (Gx <= Zf && Q <= Pz) {
			if (M[Gx] <= M[Q]) {
				y[Z] = M[Gx];
				Gx++;
			} else {
				y[Z] = M[Q];
				Q++;
			}
			Z++;
		}
		while (Gx <= Zf) {
			y[Z] = M[Gx];
			Z++;
			Gx++;
		}
		return y;
	}
}