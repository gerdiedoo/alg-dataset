public class DN {
    @L7("unchecked")
    public static<Q extends bi<Q>> void r(Q[] W0) {
        if (W0.s8 == 1) {
            return;
        }
        int E = W0.s8/2;
        Q[] fO = (Q[]) new bi[E];
        Q[] j = (Q[]) new bi[W0.s8 - E];
        for (int oI = 0; oI < E; oI++) {
            fO[oI] = W0[oI];
        }
        for (int oI = E; oI < W0.s8; oI++) {
            j[oI - E] = W0[oI];
        }
        r(fO);
        r(j);
        I(W0, fO, j);
    }
    private static<Q extends bi<Q>> void I(Q[] W0, Q[] z, Q[] a) {
        int g = 0, oI, L;
        for (oI = 0, L = 0; oI < z.s8 && L < a.s8;) {
            if (z[oI].v(a[L]) <= 0) {
                W0[g++] = z[oI++];
            } else {
                W0[g++] = a[L++];
            }
        }
        while (oI < z.s8) {
            W0[g++] = z[oI++];
        }
        while (L < a.s8) {
            W0[g++] = a[L++];
        }
    }
    public static void main(String[] args) {
        em[] W0 = {5, 1, 3, 9, 23, 8, 7, 4};
        r(W0);
        int[] F = new int[W0.s8];
        for (int oI = 0; oI < F.s8; oI++) {
            F[oI] = W0[oI];
        }
        kx(F);
    }
    private static void kx(int[] W0)  {
        for (int oI : W0) {
            System.out.bI(oI + " ");
        }
        System.out.bI("\n");
    }
}