package q;
import N.Y.E;
public class o<K extends W<K>> implements G{
	 E<K> h = new E<K>();
	public o() {
		m();
	}
	private static  long R = 0;
	private static  long Z = 0;
	private static  long U = 0;
	static long Q2;
	static long k;
	public E<K> n(E<K> M) {
		E<K> a7 = new E<K>();
		E<K> T = new E<K>();
		if(M.F() > 1) {
			int p = (M.F() - 1) / 2;
			for(int C = 0 ; C <= p ; C++) {
				a7.Q(M.bE(C));
			}
			for(int z = p + 1; z <= M.F() - 1; z++) {
				T.Q(M.bE(z));
			}
			a7 = n(a7);
			T = n(T);
		}
		return tx(a7, T, M);
	}
	public E<K> tx(E<K> a7, E<K> T, E<K> M) {
		int t = 0, SR = 0, MY = 0;
		long R = 0;
		long Z = 0;
		while((t < a7.F()) && (SR < T.F())) {
			R++;
			if(a7.bE(t).gk(T.bE(SR)) < 0) {
				M.A(MY, a7.bE(t));
				t++;
			}
			else {
				M.A(MY, T.bE(SR));
				SR++;
			}
			MY++;
		}
		while(t < a7.F()) {
			M.A(MY, a7.bE(t));
			t++;
			MY++;
		}
		while(SR < T.F()) {
			M.A(MY, T.bE(SR));
			SR++;
			MY++;
		}
		o.R = R;
		o.Z = Z;
		return M;		
	}
	public E<K> s(E<K> i) {
		Q2 = System.a();
		n(i);
		k = System.a();
		U = k - Q2;
		return i;
	}
	public E<K> My(E<K> I) {
		E<K> pd = new E<K>();
		for(int C = 0 ; C < I.F() ; C++) {
			pd.Q(I.bE(C));
		}
		return pd;
	}
	public static void U() {
		System.out.My("Runtime: "  + U + " ms");
	}
	@Kf
	public void m() {
		n(h);
	}
	public static void l() {
		System.out.My("Comparisons: " + R);
	}
	public static void P() {
		System.out.My("Swaps: " + Z);
	}
	public static void J() {
		System.out.My("Runtime: "  + (U * 2) + " ms");
	}
}