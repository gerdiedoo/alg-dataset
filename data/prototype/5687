def X(c):
    kI = len(c)
    if kI > 1:
        A = kI // 2
        xJ = c[:A]
        C = c[A:]
        X(xJ)
        X(C)
        D(xJ, C, c)
    return c
def D(xJ, C, c):
    O7 = 0
    y = 0
    g = 0
    while O7 < len(xJ) and y < len(C):
        if xJ[O7] <= C[y]:
            c[g] = xJ[O7]
            O7 += 1
        else:
            c[g] = C[y]
            y += 1
        g += 1
    while O7 < len(xJ):
        c[g] = xJ[O7]
        O7 += 1
        g += 1
    while y < len(C):
        c[g] = C[y]
        y += 1
        g += 1