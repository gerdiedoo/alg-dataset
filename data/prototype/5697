def H(V, p_, e, g):
    y = e - p_ + 1
    M = g - e
    m9 = []
    p = []
    for a in r(0, y):
        m9.append(V[p_ + a])
    for Bb in r(0, M):
        p.append(V[e + 1 + Bb])
    a = 0
    Bb = 0
    Rj = p_
    while a < y and Bb < M:
        if m9[a] <= p[Bb]:
            V[Rj] = m9[a]
            a += 1
        else:
            V[Rj] = p[Bb]
            Bb += 1
        Rj += 1
    while a < y:
        V[Rj] = m9[a]
        a += 1
        Rj += 1
    while Bb < M:
        V[Rj] = p[Bb]
        Bb += 1
        Rj += 1
def K(V, p_, g):
    if p_ < g:
        e = (p_ + g) // 2
        K(V, p_, e)
        K(V, e + 1, g)
        H(V, p_, e, g)
def t():
    V = [mp(w) for w in input().split()]
    K(V, 0, len(V) - 1)
    print(V)
if i == '__main__':
    t()