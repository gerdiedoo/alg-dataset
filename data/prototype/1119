import java.util.Arrays;
import java.util.Random;
public class QuickSort{
	public void quickSort(int[] A) {
		int low = 0;
		int high = A.length - 1;
		quickSort(A, low, high);
	}
	private void quickSort(int[] A, int low, int high) {
		if (low < high) {
			int pivotIdx = getPivot(low, high);
			swap(A, low, pivotIdx);  
			int partitionIdx = partition(A, low, high);
			quickSort(A, low, partitionIdx - 1);  
			quickSort(A, partitionIdx + 1, high);  
		}
	}
	private int getPivot(int low, int high) {
		Random random = new Random();
		return random.nextInt(high - low + 1) + low;  
	}
	private void swap(int[] A, int idx1, int idx2) {
		int tmp = A[idx1];
		A[idx1] = A[idx2];
		A[idx2] = tmp;
	}
	private int partition(int[] A, int low, int high) {
		int i = low, j = high;
		while (i != j) {
			while (A[j] >= A[low] && i < j) {
				j --;
			}
			while (A[i] <= A[low] && i < j) {
				i ++;
			}
			if (i < j) {
				swap(A, i, j);
			}
		}
		swap(A, low, i);
		return i;
	}
	public static void main(String[] args) {
		QuickSort qs = new QuickSort();
		int[] A = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		System.out.println(Arrays.toString(A));
		qs.quickSort(A);
		System.out.println(Arrays.toString(A));
	}
}