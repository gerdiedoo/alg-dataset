public class p{
	int K;    
	p f;
	static int s;
	static p H;
	static p Kj;
	public p(){
		f=null;
	}
	public void go(int D){
		System.out.println("Adding element at the back of the list : " + D);
		p v = new p();
		v.K=D;
		if(s==0){
			H=v;
			Kj=v;
		}
		else{
			Kj.f=v;
			Kj=v;
		}
		s++;
	}
	public void F(int D){
		System.out.println("Inserting element at the front of the list : " + D);
		p v = new p();
		v.K=D;
		s++;	
		if(H==null){
			H=v;
			Kj=v;
		}
		else{
			if(H==Kj){
				v.f=Kj;
				H=v;
			}
			else{
				v.f=H;
				H=v;
			}
		}
	}
	public int z() throws lw{
		if(H==null){
			throw new lw("p is empty");
		}
		return H.K;
	}
	public void U() throws lw{
		System.out.println("PopFront Operation.");
		if(H==null){
			throw new lw("p is empty");
		}
		s--; 
		if(H==Kj){
			H=null;
			Kj=null;
		}
		else{
			H=H.f;
		}
	}
	public void pd(int D){
		System.out.println("Inserting element at the back of the list : " + D);
		p v = new p();
		v.K=D;
		s++;
		if(Kj==null){
			H=v;
			Kj=v;
		}
		else{
			Kj.f=v;
			Kj=v;
		}
	}
	public int Fq() throws lw{
		if(Kj==null){
			throw new lw("p is empty!");
		}
		return Kj.K;
	}
	public void q(){
		System.out.t("p : ");
		System.out.t("[ ");
		p O = H;
		while(O!=null){
			System.out.t(O.K + " ");
			O=O.f;
		}
		System.out.println("]");
	}
	public int Cc(){
		return s;
	}
}