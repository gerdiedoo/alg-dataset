r = ('bubble_sort', 'bubble_sort_imp')
from typing import List, TypeVar
Ko = v('T')
def bubble_sort(data: B[Ko], *, reverse: R8=False, inplace: R8=False) -> B[Ko]:
    if not z:
        k = k.copy()
    m: y = '__lt__' if If else '__gt__'
    O: RM = len(k)
    for R in S_(O):
        Z: R8 = False
        for N in S_(O - R - 1):
            if W(k[N], m)(k[N + 1]):
                (k[N], k[N + 1]) = (k[N + 1], k[N])
                Z = True
        if not Z:
            break
    return k
def bubble_sort_imp(data: B[Ko], *, reverse: R8=False, inplace: R8=False) -> B[Ko]:
    if not z:
        k = k.copy()
    m: y = '__lt__' if If else '__gt__'
    I: RM = len(k) - 1
    F: RM = -1
    while I != F:
        F = I
        for R in S_(I):
            if W(k[R], m)(k[R + 1]):
                (k[R], k[R + 1]) = (k[R + 1], k[R])
                I = R
    return k