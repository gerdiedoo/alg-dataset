package Nu.a.R.wN.d;
import Nu.a.R.wN.V;
import Nu.a.R.wN.q;
public class s implements q {
  @g
  public void R(int[] h) {
    int I = h.I;
    X(h, 0, I - 1);
  }
  private void X(int[] h, int Cy, int C) {
    if (Cy == C) return;
    int K = Cy + (C - Cy) / 2;
    X(h, Cy, K);
    X(h, K + 1, C);
    E1(h, Cy, K + 1, C);
  }
void E1(int[] h, int y, int Z, int c) {
  int r = Z - 1;
  while (y <= r && Z <= c) {
    int k = h[y];
    int Z1 = h[Z];
    if (k <= Z1) {
      y++;
    } else {
      int m = Z;
      while (m > y) {
        h[m] = h[m - 1];
        m--;
      }
      h[y] = Z1;
      y++;
      r++;
      Z++;
    }
  }
}
  @g
  public void R(int[] h, V G) {
    int I = h.I;
    X(h, 0, I - 1, G);
  }
  private void X(int[] h, int Cy, int C,
                         V G) {
    if (Cy == C) return;
    int K = Cy + (C - Cy) / 2;
    X(h, Cy, K, G);
    X(h, K + 1, C, G);
    E1(h, Cy, K + 1, C, G);
  }
  private void E1(int[] h, int y, int Z, int c,
                     V G) {
    int r = Z - 1;
    while (F(y, r, G) && F(Z, c, G)) {
      int k = h[y];
      int Z1 = h[Z];
      G.p(2);
      G.A();
      if (k <= Z1) {
        y++;
      } else {
        int m = Z;
        while (i(m, y, G)) {
          G.eq();
          h[m] = h[m - 1];
          m--;
        }
        G.oz();
        h[y] = Z1;
        y++;
        r++;
        Z++;
      }
    }
  }
  private boolean F(int t, int n, V G) {
    G.A();
    return t <= n;
  }
  private boolean i(int t, int n, V G) {
    G.A();
    return t > n;
  }
}