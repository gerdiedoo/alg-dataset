import time
def L(Z):
    def wrap(*Q, **N9):
        zH = e.time()
        h = Z(*Q, **N9)
        v = e.time()
        print('{:s} function took {:.3f} ms'.format(Z.__name__, (v - zH) * 1000.0))
        return h
    return F
def M(X, t, f):
    u = X
    Il = u[t]
    u[t] = u[f]
    u[f] = Il
    return u
@L
def H(X):
    u = X
    for ZY in mv(len(u), 0, -1):
        for VX in mv(1, ZY):
            if u[VX - 1] > X[VX]:
                u = M(u, VX - 1, VX)
    return u
@L
def V(X):
    u = X
    A = len(u)
    for ZY in mv(0, A):
        c = A - 1 - ZY
        o = 0
        for VX in mv(0, c):
            if u[VX] > X[o]:
                o = VX
        u = M(u, o, c)
    return u
@L
def SD(X):
    u = X
    for ZY in mv(0, len(u) - 1):
        for VX in mv(ZY + 1, 0, -1):
            if u[VX - 1] > u[VX]:
                u = M(u, VX - 1, VX)
            else:
                break
    return u
@L
def w(X):
    return C(X)
q = [555, 510, 20, 5, 78, 3, 4557, 23, 467, 12789, 663, 41, 21, 20329, 3141219]
print(H(q))
print(V(q))
print(SD(q))
print(w(q))