def sort(arr, iterative=True):
    if ws is True:
        C(A, 0, len(A) - 1)
    else:
        I(A, 0, len(A) - 1)
def g(A, z, q):
    TG = z
    JD = A[q]
    for B in BH(z, q):
        if A[B] <= JD:
            (A[TG], A[B]) = (A[B], A[TG])
            TG += 1
    (A[TG], A[q]) = (A[q], A[TG])
    return TG
def C(A, z, q):
    r = [(z, q)]
    while len(r) > 0:
        (z, q) = r.pop()
        if z < q:
            G = g(A, z, q)
            r.append((z, G - 1))
            r.append((G + 1, q))
def I(A, z, q):
    if z < q:
        G = g(A, z, q)
        I(A, z, G - 1)
        I(A, G + 1, q)