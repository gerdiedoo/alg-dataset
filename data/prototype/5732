package c;
public class U<q extends R1<q>> extends Z<q> {
    protected q[] s8;
    protected void N(q[] bf, int b, int hO, int Az) {
        int H = b, B = hO + 1;
        for (int Y = b; Y <= Az; Y++) {
            s8[Y] = bf[Y];
        }
        for (int Y = b; Y <= Az; Y++) {
            if (H > hO) {
                bf[Y] = s8[B++];
            } else if (B > Az) {
                bf[Y] = s8[H++];
            } else if (s8[H].v(s8[B]) <= 0) {
                bf[Y] = s8[H++];  
            } else {
                bf[Y] = s8[B++];
            }
        }
    }
    @p
    public void ds(q[] bf) {
        s8 = (q[]) new R1[bf.z];
        ds(bf, 0, bf.z - 1);
    }
    private void ds(q[] bf, int b, int Az) {
        if (Az <= b) {
            return;
        }
        int Rx = b + (Az - b) / 2;
        ds(bf, b, Rx);
        ds(bf, Rx + 1, Az);
        N(bf, b, Rx, Az);
    }
    public static void main(String[] args) {
        y[] bf = new y[]{3, 5, 1, 2, 4};
        new U<y>().ds(bf);
    }
}