function mergeSort (arrData) {
  'use strict'
  const dataMax = arrData.length
  function merge (arrA, arrB) {
    let arrC = []
    while (arrA.length && arrB.length) {
      if (arrA[0] > arrB[0]) {
        arrC.push(arrB.shift())
      } else {
        arrC.push(arrA.shift())
      }
    }
    return arrC.concat(arrA).concat(arrB)
  }
  console.log('Initial:', arrData.join(), `[Count:${dataMax}]`)
  if (dataMax > 1) {
    let indexA = Math.floor(dataMax / 2)
    let indexB = arrData.slice(0, indexA)
    let indexC = arrData.slice(indexA)
    console.log('Final:', arrData.join())
    return merge(mergeSort(indexB), mergeSort(indexC))
  } else {
    console.log('Cycle:', arrData.join())
    return arrData
  }
}