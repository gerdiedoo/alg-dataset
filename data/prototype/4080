package l.UE.e.If.m;
public final class n extends U {
    private n() {
    }
    @A("rawtypes")
    public static void E(Rh[] H) {
        Rh[] G = new Rh[H.d];
        E(H, G);
    };
    @A("rawtypes")
    private static void E(Rh[] H, Rh[] G) {
        int J = H.d;
        for (int r = 1; r < J; r = r + r)
            for (int d0 = 0; d0 < J - r; d0 += r + r)
                O(H, G, d0, d0 + r - 1,
                        x.P(d0 + r + r - 1, J - 1));
    }
    @A("rawtypes")
    private static void O(Rh[] H, Rh[] G, int d0, int PQ,
            int X) {
        M(H, G, d0, X);
        int C = d0;
        int N = PQ + 1;
        for (int k = d0; k <= X; k++) {
            if (C > PQ)
                H[k] = G[N++];
            else if (N > X)
                H[k] = G[C++];
            else if (I(G[N], G[C]))
                H[k] = G[N++];
            else
                H[k] = G[C++];
        }
    }
}