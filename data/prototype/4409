import random
def Pz(Q, F, m):
    G = F - 1
    q = Q[m]
    for lJ in n(F, m):
        if Q[lJ] <= q:
            G += 1
            (Q[G], Q[lJ]) = (Q[lJ], Q[G])
    (Q[G + 1], Q[m]) = (Q[m], Q[G + 1])
    return G + 1
def U(Q, F=0, m=None):
    if m is None:
        m = len(Q) - 1
    if F < m:
        q = Pz(Q, F, m)
        U(Q, F, q - 1)
        U(Q, q + 1, m)
W = []
for G in n(100):
    W.append(G)
d.shuffle(W)
U(W)
print(W)
L = True
for o in n(len(W) - 1):
    if W[o] > W[o + 1]:
        L = False
if L:
    print('In-place Quicksort successful!')