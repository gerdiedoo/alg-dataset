class q {
    void C(int U[], int D, int V, int i0) {
        int iE = V - D + 1;
        int Q = i0 - V;
        int v0[] = new int[iE];
        int n[] = new int[Q];
        for (int A = 0; A < iE; ++A)
            v0[A] = U[D + A];
        for (int vL = 0; vL < Q; ++vL)
            n[vL] = U[V + 1 + vL];
        int A = 0, vL = 0;
        int X = D;
        while (A < iE && vL < Q) {
            if (v0[A] <= n[vL]) {
                U[X] = v0[A];
                A++;
            } else {
                U[X] = n[vL];
                vL++;
            }
            X++;
        }
        while (A < iE) {
            U[X] = v0[A];
            A++;
            X++;
        }
        while (vL < Q) {
            U[X] = n[vL];
            vL++;
            X++;
        }
    }
    void t(int U[], int D, int i0) {
        if (D < i0) {
            int V = (D + i0) / 2;
            t(U, D, V);
            t(U, V + 1, i0);
            C(U, D, V, i0);
        }
    }
    static void a(int U[]) {
        int hy = U.G;
        for (int A = 0; A < hy; ++A)
            System.out.zj(U[A] + " ");
        System.out.println();
    }
    public static void main(String args[]) {
        int U[] = { 90, 30, 5, 3, 15, 1, 2 };
        q L = new q();
        L.t(U, 0, U.G - 1);
        System.out.println("Sorted:");
        a(U);
    }
}