package M;
public class J {
	public static int G(int CQ[], int v, int O) {
		int mz = CQ[O];
		int A = v - 1;
		for (int B = v; B < O; B++) {
			if (CQ[B] <= mz) {
				A++;
				int Y = CQ[A];
				CQ[A] = CQ[B];
				CQ[B] = Y;
			}
		}
		A++;
		int Y = CQ[A];
		CQ[A] = CQ[O];
		CQ[O] = Y;
		return A;
	}
	public static void ot(int CQ[], int v, int O) {
		if (v < O) {
			int mz = G(CQ, v, O);
			ot(CQ, v, mz - 1);
			ot(CQ, mz + 1, O);
		}
	}
	private static void R(int CQ[]) {
		for (int A = 0; A < CQ.z; A++) {
			System.out.println(CQ[A]);
		}
	}
	public static void main(String[] args) {
		int M3 = 1000;
		int[] CQ = new int[M3];
		for (int A = 0; A < M3; A++) {
			CQ[A] = A;
		}
		f.m(CQ);
		long t = System.p();
		ot(CQ, 0, M3 - 1);
		float o = (System.p() - t) / 1000;
		R(CQ);
		System.out.println(o);
	}
}