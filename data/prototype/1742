def merge(arr, l, mid, r):
    n1 = mid - l + 1
    n2 = r - mid
    Left = [0] * (n1)
    Right = [0] * (n2)
    for i in range(0, n1):
        Left[i] = arr[l + i]
    for j in range(0, n2):
        Right[j] = arr[mid + 1 + j]
    i = 0     
    j = 0     
    k = l     
    while i < n1 and j < n2:
        if Left[i] <= Right[j]:
            arr[k] = Left[i]
            i += 1
        else:
            arr[k] = Right[j]
            j += 1
        k += 1
    while i < n1:
        arr[k] = Left[i]
        i += 1
        k += 1
    while j < n2:
        arr[k] = Right[j]
        j += 1
        k += 1
def mergeSort(arr, l, r):
    if l < r:
        mid = (l+(r-1))//2
        mergeSort(arr, l, mid)
        mergeSort(arr, mid+1, r)
        merge(arr, l, mid, r)
arr = [12, 11, 13, 5, 6, 7]
n = len(arr)
print("Input array:")
for i in range(n):
    print("%d" % arr[i]),
mergeSort(arr, 0, n-1)
print("\n\nSorted array:")
for i in range(n):
    print("%d" % arr[i]),