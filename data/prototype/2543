import K.Y.*;
import K.GM.*;
import K.B.*;
class s
{
public static void main(String args[])throws YZ
{
	BB J2=new BB(new c(System.d));
	int x;
	do
	{
	System.out.println("\n1.Linear s\n2.Binary s\n3.Binary s with recursion\n4.Exit");
	x=lQ.I(J2.gj());
	if(x==4)
		return;
	System.out.println("Enter the number of terms");
	int o=lQ.I(J2.gj());
	int Ya[]=new int[o];
	for(int h=0;h<o;h++)
		{
			System.out.println("Enter "+(h+1)+"th term");
			Ya[h]=lQ.I(J2.gj());
		}
		System.out.println("Enter number to be searched");
		int n=lQ.I(J2.gj());
		switch(x)
		{
			case 1:
				z(Ya,o,n);
				break;
			case 2:
				J(Ya,o,n);
				break;
			case 3:
				int k=0;
				int EY=o;
				C(Ya,o,n,k,EY);
				break;
		}
	}
	while(x!=4);
}
public static void z(int Ya[],int o,int n)
{
	for(int h=0;h<o;h++)
	{
		if(Ya[h]==n)
		{
			System.out.println(n+" found at "+(h+1)+"th position");
			return;
		}
	}
	System.out.println(n+" not found");
}
public static void J(int Ya[],int o,int n)
{
	int k=0;
	int EY=o;
	int S=(k+EY)/2;
	while(k!=EY)
	{
		if(Ya[S]==n)
			{
			System.out.println(n+" found at "+(S+1)+"th position");
			return;
			}
		if(Ya[S]<n)
			{
				k=S+1;
				EY=o;
				 S=(k+EY)/2;
			}
		else
			{
				k=0;
				EY=S-1;
				 S=(k+EY)/2;
			}
	}
		System.out.println(n+" not found");
}
public static void C(int Ya[],int o,int n,int k, int EY)
{
	if(k>EY)
	{
		System.out.println(n+" not found");
		return;
	}
		int S=(k+EY)/2;
		try{
		if(Ya[S]==n)
			{
			System.out.println(n+" found at "+(S+1)+"th position");
			return;
			}
		if(Ya[S]<n)
			{
				C( Ya, o, n, S+1, EY);
			}
		if(Ya[S]>n)
			{
				C( Ya, o, n, k,  S-1);
			}
		}
		catch(g Yk) {
				System.out.println(n+" not found");
			}
}
}