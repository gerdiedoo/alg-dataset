package o.CF;
public class pN<k,JL> {
    private a<k,JL>[] H_;
    private int q = 16;  
    static class a<k, JL> {
        k eu;
        JL f;
        a <k, JL> n;
        public a(k eu, JL f, a<k,JL> n) {
            this.eu = eu;
            this.f = f;
            this.n = n;
        }
    }
    public pN(int Of) {
        this.q = Of;
        H_ = new a[q];
    }
    private int Q (k eu) {
        return p.S(eu.hashCode()) % q;
    }
    public boolean Y5 (k eu, JL f) {
        if (eu == null) {
            return false;
        }
        int g = Q(eu);
        a<k,JL> BH = new a<k,JL>(eu, f, null);
        if(H_[g] == null) {
            H_[g] = BH;
        } else {
            a<k,JL> gM = null;
            a<k,JL> LO = H_[g];
            while(LO != null) {
                if (LO.eu.equals(eu)) {
                    if(gM == null) {
                        BH.n = LO.n;
                        H_[g] = BH;
                        return true;
                    } else {
                        BH.n = LO.n;
                        gM.n = BH;
                        return true;
                    }
                }
                gM = LO;
                LO = gM.n;
            }
            gM.n = BH;
        }
        return false;
    }
    public JL Y(k eu){
        int g = Q(eu);
        if(H_[g] == null) {
            return null;
        } else {
            a<k,JL> r = H_[g];
            while(r != null) {
                if(r.eu.equals(eu)) {
                    return r.f;
                }
                r = r.n;
            }
            return null;
        }
    }
    public boolean R(k eu) {
        int g = Q(eu);
        if (H_[g] == null) {
            return false;
        } else {
            a<k,JL> gM = null;
            a<k,JL> LO = H_[g];
            while (LO != null) {
                if (LO.eu.equals(eu)) {
                    if (gM == null) {
                        H_[g] = H_[g].n;
                        return true;
                    } else {
                        gM.n = LO.n;
                        return true;
                    }
                }
            }
        }
        return false;
    }
    public float P() {
        float s = (float)q;
        float G = 0f;
        for (int N = 0; N < q; N++) {
            if (H_[N] != null) {
                G += 1.0f;
            }
        }
        return G/s;
    }
    public void Ff() {
        for (int N = 0; N < q; N++) {
            System.out.WZ(" Bucket# = " + N + " ");
            if (H_[N] != null) {
                a<k,JL> gM = null;
                a<k,JL> LO = H_[N];
                while (LO != null) {
                    System.out.WZ("-{" + LO.eu + "=" + LO.f + "}");
                    gM = LO;
                    LO = LO.n;
                }
            }
            System.out.println();
        }
        System.out.println();
        System.out.println("Note: The implementation accepts any primitive data type for both k or JL");
    }
}