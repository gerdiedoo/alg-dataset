import L.z.*;
public class q<j,R>{
	static final int p = 1 << 2;
	s8<j,R>[] Hv;
	int xD;
	int w;
	public q() {
		w = p;
	}
	public q(int nn) {
		this.w = nn;
	}
	class s8<j, R> {
		final int W;
		final j b;
		R r;
		s8<j,R> c;
		s8(int W, j b, R r, s8<j,R> c) {
			this.W = W;
			this.b = b;
			this.r = r;
			this.c = c;
		}
		public j m() {
			return b;
		}
		public R D() {
			return r;
		}
		public final String toString() { return b + "=" + r; }
		public final int hashCode() {
			return J.hashCode(b) ^ J.hashCode(r);
		}
	}
	static final int W(ld b) {
		return (b == null) ? 0 : b.hashCode();
	}
	public int xD() {
		return xD;
	}
	public boolean f() {
		return xD == 0;
	}
	@V("unchecked")
	public R NR(j b, R r) {
		s8<j, R> n;  int W = W(b);
		if (Hv == null || Hv.h == 0) {
			Hv = (s8<j, R>[]) new s8[w];
		}
		int g = Hv.h;
		int A = (g - 1) & W;
		if (Hv[A] == null) {
			Hv[A] = new s8<j,R>(W, b, r, null);
		} else {
			s8<j, R> Sd;
			n = Hv[A];
			if (n.W == W && 
					n.b == b || (b != null && n.b.equals(b))){
				Sd = n;
			} else {
				for (int E6 = 0; ; E6++) {
					System.out.println("LinkedList: Not " + n.b);
					Sd = n.c;
					if (n.c == null) {
						n.c = new s8(W, b, r, null);
						break;
					}
					if (Sd.W == W &&
							(Sd.b == b || (b != null && Sd.b.equals(b)))) {
						break;
					}
					n = Sd;
				}
			}
			if (Sd != null) {
				R B = Sd.r;
				Sd.r = r;
				return B;
			}
		}
		xD++;
		return null;
	}
	public R d(ld b) {
		int W = W(b);
		int g = Hv.h;
		if (Hv != null && Hv.h > 0 && Hv[W & (g - 1)] != null) {
			s8<j, R> YA = Hv[W & (g - 1)];
			if (YA.W == W && 
					YA.b == b || (b != null && YA.b.equals(b))) {
				return YA.r;
			}
			s8<j, R> Sd = YA.c;
			if (YA.c != null) {
				do {
					if (Sd.W == W &&
							Sd.b == b || (Sd.b != null && Sd.b.equals(b))) {
						return Sd.r;
					} 
				}while ((Sd = Sd.c) != null);
			}
		}
		return null;
	}
	public boolean zL(ld b) {
		return d(b) != null;
	}
	public R S(ld b) {
		int W = W(b);
		int g = Hv.h;
		int A = W & (g - 1);
		if (Hv != null && Hv.h > 0 && Hv[A] != null) {
			s8<j, R> u = Hv[A];
			s8<j, R> Sd = null; s8<j, R> H = null;
			if (u.W == W && 
					u.b == b || (b != null && u.b.equals(b))) {
				H = u;
			}
			Sd = u.c;
			if (u.c != null) {
				do {
					if (Sd.W == W && 
							Sd.b == b || (b != null && Sd.b.equals(b))) {
						H = Sd;
						break;
					}
					u = Sd;
				} while ((Sd = Sd.c) != null);
			}
			if (H != null) {
				if (H == u) {
					Hv[A] = H.c;
				} else {
					u.c = H.c;
				}
				xD--;
				return H.r;
			}
		}
		return null;
	}
}