package p.g;
import p.*;
public class TN implements S{
	private da[] k;
	private U nO;
	private boolean w1;
	public TN(da[] k, U nO, boolean w1) {
		this.k = k;
		this.nO = nO;
		this.w1 = w1;
	}
	public void R() {
		if (w1) {
			je();
		} else {
			NM();
		}
		E.o=false;
	}
	public void je() {
		int q = 0;
		boolean a = false;
		for(int C = 0; C<k.Ns-1; C++){
			a = false;
			for(int j = 1; j<k.Ns-C; j++){
				if (k[j-1]> k[j]){
					q = k[j-1];
					k[j-1] = k[j];
					k[j]= q;
					a = true;
				}
			}
			nO.f(k);
			try {
				v.b(E.b);
			} catch (D d) {
				d.hs();
			}
			if (!a) break;
		}
	}
	public void NM() {
		int q = 0;
		boolean a = false;
		for(int C = 0; C<k.Ns-1; C++){
			a = false;
			for(int j = 1; j<k.Ns-C; j++){
				if (k[j-1]> k[j]){
					q = k[j-1];
					k[j-1] = k[j];
					k[j]= q;
					a = true;
				}
				nO.f(k, j, j+1);
				try {
					v.b(E.b);
				} catch (D d) {
					d.hs();
				}
			}
			if (!a) break;
		}
	}
}