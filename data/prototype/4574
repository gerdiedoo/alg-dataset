package J.W.w.B.pP;
import J.W.w.B.*;
import J.W.w.k.V;
public class ab implements f, br {
  public void w(int[] Gz) {
    pP(Gz, 0, Gz.N - 1);
  }
  @gG
  public boolean c(int K) {
    return K <= 2 << 12;
  }
  private void pP(int[] Gz, int Ib, int X) {
    if (Ib >= X) return;
    int H = F(Gz, Ib, X);
    pP(Gz, Ib, H - 1);
    pP(Gz, H + 1, X);
  }
  @gG
  public int F(int[] Gz, int Ib, int X) {
    int y = Gz[X];
    int O = Ib;
    int Z = X - 1;
    while (O < Z) {
      while (Gz[O] < y) {
        O++;
      }
      while (Z > Ib && Gz[Z] >= y) {
        Z--;
      }
      if (O < Z) {
        V.l(Gz, O, Z);
        O++;
        Z--;
      }
    }
    if (O == Z && Gz[O] < y) {
      O++;
    }
    if (Gz[O] != y) {
      V.l(Gz, O, X);
    }
    return O;
  }
  @gG
  public void w(int[] Gz, A r) {
    pP(Gz, 0, Gz.N - 1, r);
  }
  private void pP(int[] Gz, int Ib, int X,
                         A r) {
    if (Ib >= X) return;
    int H = F(Gz, Ib, X, r);
    pP(Gz, Ib, H - 1, r);
    pP(Gz, H + 1, X, r);
  }
  public int F(int[] Gz, int Ib, int X, A r) {
    int y = Gz[X];
    int O = Ib;
    int Z = X - 1;
    while (O < Z) {
      r.t();
      while (true) {
        r.Q();
        r.e();
        if (!(Gz[O] < y)) break;
        O++;
      }
      while (true) {
        r.Q();
        r.e();
        if (!(Z > Ib && Gz[Z] >= y)) break;
        Z--;
      }
      if (O < Z) {
        V.l(Gz, O, Z);
        r.ai(2);
        O++;
        Z--;
      }
    }
    if (O == Z) {
      r.e();
      r.Q();
      if (Gz[O] < y) {
        O++;
      }
    }
    r.e();
    r.Q();
    if (Gz[O] != y) {
      V.l(Gz, O, X);
      r.ai(2);
    }
    return O;
  }
}