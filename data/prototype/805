from strategy import Order, BadOrderError
import sys
__author__ = "Pablo Acereda"
__copyright__ = "Copyright 2020"
__credits__ = [ "Pablo Acereda" ]
__license__ = "Apache License 2.0"
__version__ = "1.0"
__maintainer__ = "Pablo Acereda"
__email__ = "p.aceredag@gmail.com"
def sort(array:list, order: Order=Order.ASC) -> list:
    if (order not in [Order.ASC, Order.DESC]):
        raise BadOrderError("Not Valid Ordering Preference")
    return _merge_sort(array, order)
def _merge_sort(array, order):
    if (len(array) <= 1): 
        return array
    middle = len(array) // 2
    L = array[      :middle]    
    R = array[middle:      ]    
    L = _merge_sort(L, order)       
    R = _merge_sort(R, order)       
    return _merge(L, R, order)
def _merge(arr1, arr2, order):
    i = j = 0
    sorted_arr = []
    while i < len(arr1) and j < len(arr2):
        if (order == Order.ASC):     
            if (arr1[i] < arr2[j]):
                sorted_arr.append(arr1[i])
                i += 1
            else:
                sorted_arr.append(arr2[j])
                j += 1
        elif (order == Order.DESC):  
            if (arr1[i] > arr2[j]):
                sorted_arr.append(arr1[i])
                i += 1
            else:
                sorted_arr.append(arr2[j])
                j += 1
    while i < len(arr1):
        sorted_arr.append(arr1[i])
        i += 1
    while j < len(arr2):
        sorted_arr.append(arr2[j])
        j += 1
    return sorted_arr