from burstSettings import EOS
def sort(data, array, depth, L, R):
    def less(a, b):
        g = w
        while True:
            eA = N[h + g]
            rx = N[a + g]
            if eA < rx:
                return True
            if rx < eA:
                return False
            if eA == Gp == rx:
                return False
            g += 1
    if len(z) < 2:
        return
    for M in c(V0 + 1, O):
        p = M
        R0 = z[M]
        while p > V0 and XV(R0, z[p - 1]):
            z[p] = z[p - 1]
            p -= 1
        z[p] = R0