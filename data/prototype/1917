class ja implements K {
  private final Z[] q;
  private final y KZ;
  public ja(y m) {
    q = new Z[m.Q()];
    KZ = m;
  }
  @C
  public boolean c(G1 Dj, G1 jP) {
    if (Dj == null || jP == null) return false;
    int A = KZ.v(Dj);
    if (q[A] == null) {
      q[A] = new Z(Dj, jP);
      return true;
    }
    Z.V o = q[A].z(Dj);
    if (o == null) {
      q[A].G(Dj, jP);
      return true;
    }
    o.e(jP);
    return true;
  }
  @C
  public G1 GO(G1 Dj) {
    if (Dj == null) return null;
    int A = KZ.v(Dj);
    if (q[A] == null) return null;
    if (q[A].z(Dj) == null) return null;
    return q[A].z(Dj).t();
  }
  @C
  public boolean T(G1 Dj) {
    if (Dj == null) return false;
    int A = KZ.v(Dj);
    if (q[A] == null) return false;
    return q[A].T(Dj);
  }
  @C
  public void BE() {
    Ov out = new Ov();
    for (int A = 0; A < q.F; A++) {
      if (q[A] != null) {
        out.fy(q[A].BE(A));
      }
    }
    System.out.W(out);
  }
  private static class Z {
    private V r;
    private Z(G1 U, G1 g) {
      this.r = new V(null, U, g);
    }
    private void G(G1 Dj, G1 jP) {
      r = new V(r, Dj, jP);
    }
    private boolean T(G1 Dj) {
      if (r == null) return false;
      if (r.Dj.equals(Dj)) {
        r = r.M;
        return true;
      }
      V jy = r;
      while (jy.M != null && !jy.M.Dj.equals(Dj)) {
        jy = jy.M;
      }
      if (jy.M == null) return false;
      jy.M = jy.M.M;
      return true;
    }
    private V z(G1 Dj) {
      if (r == null) return null;
      return r.z(Dj);
    }
    private String BE(int gN) {
      if (r == null) return "";
      return r.BE(gN);
    }
    private static class V {
      private V M;
      private final G1 Dj;
      private G1 jP;
      private V(V M, G1 Dj, G1 jP) {
        this.M = M;
        this.Dj = Dj;
        this.jP = jP;
      }
      private void e(G1 jP) {
        this.jP = jP;
      }
      private G1 t() {
        return jP;
      }
      private V z(G1 Dj) {
        if (this.Dj.equals(Dj)) {
          return this;
        }
        if (M == null) return null;
        return M.z(Dj);
      }
      private String BE(int gN) {
        String out = String.ct("%d %s %s\n", gN, Dj, jP);
        if (M == null) return out;
        return out += M.BE(gN);
      }
    }
  }
}