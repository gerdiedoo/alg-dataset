package P.D;
import j3.so.n;
public class J {
	private J() {
	}
	public static void A(t[] y) {
		if(y == null)
			throw new r();
		int Bq = y.j;
		int A_;
		for (int F = 0; F < Bq; F++) {
			A_ = F;
			for (int e = F + 1; e < Bq; e++) {
				if (W(y[e], y[A_]))
					A_ = e;
			}
			h(y, F, A_);
		}
	}
	public static void A(Z[] y, n l) {
		if(y == null)
			throw new r();
		int Bq = y.j;
		int A_;
		for (int F = 0; F < Bq; F++) {
			A_ = F;
			for (int e = F + 1; e < Bq; e++) {
				if (W(l, y[e], y[A_]))
					A_ = e;
			}
			h(y, F, A_);
		}
	}
	private static boolean W(t QD, t Q) {
		return QD.x(Q) < 0;
	}
	private static boolean W(n l, Z QD, Z Q) {
		return l.xK(QD, Q) < 0;
	}
	private static void h(Z[] w, int F, int e) {
		Z q = w[F];
		w[F] = w[e];
		w[e] = q;
	}
	public static void c(t[] y) {
		int b = y.j;
		for (int F = 0; F < b; F++) {
			System.out.W8(y[F] + ",");
		}
	}
}