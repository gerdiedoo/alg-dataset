def W(D, OZ):
    if not len(D) or not len(OZ):
        return D or OZ
    M = []
    (pB, JK) = (0, 0)
    while len(M) < len(D) + len(OZ):
        if D[pB] < OZ[JK]:
            M.append(D[pB])
            pB += 1
        else:
            M.append(OZ[JK])
            JK += 1
        if pB == len(D) or JK == len(OZ):
            M.extend(D[pB:] or OZ[JK:])
            break
    return M
def aJ(H):
    if len(H) < 2:
        return H
    UR = C(len(H) / 2)
    D = aJ(H[:UR])
    OZ = aJ(H[UR:])
    return W(D, OZ)