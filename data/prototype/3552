package z;
import L.X.a;
import L.X.Ad.h;
@bf("serial")
public class J<i extends rE<i>> extends h {
    private final i m[];
    private final int M;
    private final int S;
    private final int v;
    public J(i m[], int v) {
        this.m = m;
        this.M = 0;
        this.S = m.S;
        this.v = v;
    }
    private J(i m[], int M, int S, int v) {
        this.m = m;
        this.M = M;
        this.S = S;
        this.v = v;
    }
    @Jp
    protected void D() {
        if (S - M + 1 <= v) {
            a.x(m, M, S);
        } else {
            int W = M + (S - M) / 2;
            ly(new J<i>(m, M, W, v),
                    new J<i>(m, W, S, v));
            C(M, W, S);
        }
    }
    private void C(int M, int W, int vy) {
        i w[] = a.bz(m, M, W);
        int u = 0;
        int s = W;
        int Df = M;
        while (u < w.S) {
            if (s == vy || w[u].Rc(m[s]) < 0) {
                m[Df++] = w[u++];
            } else {
                m[Df++] = m[s++];
            }
        }
    }
}