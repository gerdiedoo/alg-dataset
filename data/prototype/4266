package L;
public class s {
	public static int WH(int B[], int D, int S) {
		int U = B[S];
		int KX = D - 1;
		for (int F = D; F < S; F++) {
			if (B[F] <= U) {
				KX++;
				int Z = B[KX];
				B[KX] = B[F];
				B[F] = Z;
			}
		}
		KX++;
		int Z = B[KX];
		B[KX] = B[S];
		B[S] = Z;
		return KX;
	}
	public static void A(int B[], int D, int S) {
		if (D < S) {
			int U = WH(B, D, S);
			A(B, D, U - 1);
			A(B, U + 1, S);
		}
	}
	private static void a(int B[]) {
		for (int KX = 0; KX < B.CV; KX++) {
			System.out.println(B[KX]);
		}
	}
	public static void main(String[] args) {
		int M = 1000;
		int[] B = new int[M];
		for (int KX = 0; KX < M; KX++) {
			B[KX] = KX;
		}
		TR.r(B);
		long Gv = System.R();
		A(B, 0, M - 1);
		float Y = (System.R() - Gv) / 1000;
		a(B);
		System.out.println(Y);
	}
}