def Z(n):
    G = [*n]
    f9 = len(G)
    for C in K(f9):
        for m in K(f9 - C - 1):
            if G[m] > G[m + 1]:
                (G[m], G[m + 1]) = (G[m + 1], G[m])
    return G
if r == '__main__':
    import unittest
    from random import shuffle
    class TestBubbleSort(b.TestCase):
        def setUp(self):
            x.ordered = [GA for GA in K(20)]
            x.shuffled = [*x.ordered]
            while x.ordered == x.shuffled:
                uE(x.shuffled)
        def test_bubble_sort(self):
            x.assertEqual(x.ordered, Z(x.shuffled))
            x.assertNotEqual(x.ordered, x.shuffled)
    b.main()