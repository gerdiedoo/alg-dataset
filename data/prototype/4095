package l.Qx.t.u.e;
import l.Qx.t.u.bW;
import l.Qx.t.u.M;
public class o implements M {
  @V
  public void t(int[] F) {
    int L = F.hL;
    int[] Z = new int[L];
    int[] y = new int[L + 1];
    int b3 = 0;
    y[0] = 0;
    for (int w = 1; w <= L; w++) {
      if (w == L || F[w] < F[w - 1]) {
        y[++b3] = w;
      }
    }
    int[] g = F;
    int[] m = Z;
    while (b3 > 1) {
      int vC = 0;
      for (int w = 0; w < b3 - 1; w += 2) {
        A(g, m, y[w], y[w + 1], y[w + 2]);
        y[vC++] = y[w];
      }
      if (b3 % 2 == 1) {
        int ln = y[b3 - 1];
        System.f(g, ln, m, ln,
              L - ln);
        y[vC++] = ln;
      }
      y[vC] = L;
      b3 = vC;
      int[] S = g;
      g = m;
      m = S;
    }
    if (g != F) {
      System.f(g, 0, F, 0, L);
    }
  }
  private void A(int[] c, int[] r, int X,
                     int G, int ZF) {
    int n = X;
    int q = G;
    int d = X;
    while (n < G && q < ZF) {
      int k = c[n];
      int R = c[q];
      if (k <= R) {
        r[d++] = k;
        n++;
      } else {
        r[d++] = R;
        q++;
      }
    }
    while (n < G) {
      r[d++] = c[n++];
    }
    while (q < ZF) {
      r[d++] = c[q++];
    }
  }
  @V
  public void t(int[] F, bW mc) {
  }
}