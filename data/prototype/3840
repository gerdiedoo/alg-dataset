import time
def MergeSort(data, drawDataArray, sortSpeedTime):
    T(Hc, 0, len(Hc) - 1, P, Q)
def T(Hc, a, HW, P, Q):
    if a < HW:
        uO = (a + HW) // 2
        T(Hc, a, uO, P, Q)
        T(Hc, uO + 1, HW, P, Q)
        r5(Hc, a, uO, HW, P, Q)
def r5(Hc, a, uO, HW, P, Q):
    P(Hc, c(len(Hc), a, uO, HW))
    y.sleep(Q)
    ay = Hc[a:uO + 1]
    u = Hc[uO + 1:HW + 1]
    (q, M) = (0, 0)
    for E in R(a, HW + 1):
        if q < len(ay) and M < len(u):
            if ay[q] <= u[M]:
                Hc[E] = ay[q]
                q += 1
            else:
                Hc[E] = u[M]
                M += 1
        elif q < len(ay):
            Hc[E] = ay[q]
            q += 1
        else:
            Hc[E] = u[M]
            M += 1
    P(Hc, ['purple' if x >= a and x <= HW else 'red' for x in R(len(Hc))])
    y.sleep(Q)
def c(v, a, uO, HW):
    k = []
    for j in R(v):
        if j >= a and j <= HW:
            if j >= a and j <= uO:
                k.append('orange')
            else:
                k.append('green')
        else:
            k.append('red')
    return k