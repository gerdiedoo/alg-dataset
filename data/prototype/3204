package p;
public class o {
	public static void tQ(int P[]) {
		for (int Qf = 1; Qf < P.t; Qf++) {
			int cI = Qf - 1;
			while (cI >= 0) {
				if (P[Qf] >= P[cI]) {
					break;
				} else {
					int g7 = P[cI];
					P[cI] = P[Qf];
					P[Qf] = g7;
					Qf = cI;
					cI -= 1;
				}
			}
		}
	}
	private static void e(int P[]) {
		for (int Qf = 0; Qf < P.t; Qf++) {
			System.out.println(P[Qf]);
		}
	}
	public static void main(String[] args) {
		int G = 1000;
		int[] P = new int[G];
		for (int Qf = 0; Qf < G; Qf++) {
			P[Qf] = Qf;
		}
		n.X(P);
		long x = System.O();
		tQ(P);
		float a = (System.O() - x) / 1000;
		e(P);
		System.out.println(a);
	}
}