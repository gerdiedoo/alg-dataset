package jL;
public class J extends L{
	public static void main(String[] args){
		int[] P6 = JD(5);
		N(new J(), P6);
	}
	public J(){ super("Quick"); }
	private int mC(int[] P6, int v, int l){
        int cB = ( v + l ) / 2;
        if( P6[cB] < P6[v] )
            n(P6, v, cB);
        if( P6[l] <P6[v] )
            n(P6, v, l);
        if( P6[l] < P6[cB] )
            n(P6, cB, l);
        n(P6, cB, l-1);  
        return l-1;
	}
	private int QN(int[] P6, int v, int l){
		int OT = mC(P6, v, l);
		while (v < OT)
		{
			if ( P6[v] > P6[OT] )
			{
				int XD = P6[v];
				P6[v] = P6[OT - 1];
				P6[OT - 1] = P6[OT];
				P6[OT] = XD;
				OT--;
			}
			else
				v++;
		}
		return OT;
	}
	private void s(int[] P6, int v, int l){
		if ( v < l)
		{
			int E = QN(P6, v, l);
			s(P6, v, E - 1);
			s(P6, E + 1, l);
		}
	}
	@lN
	public void V_(int[] P6){
		s(P6, 0, P6.Q - 1);
	}
	private void n(int[] P6, int u, int X){
		int XD = P6[u];
		P6[u] = P6[X];
		P6[X] = XD;
	}
}