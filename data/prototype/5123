import L.q.*;
public class k<cU,R>{
	static final int E = 1 << 2;
	i<cU,R>[] u4;
	int zk;
	int xj;
	public k() {
		xj = E;
	}
	public k(int y0) {
		this.xj = y0;
	}
	class i<cU, R> {
		final int X5;
		final cU J;
		R Hp;
		i<cU,R> uc;
		i(int X5, cU J, R Hp, i<cU,R> uc) {
			this.X5 = X5;
			this.J = J;
			this.Hp = Hp;
			this.uc = uc;
		}
		public cU Y() {
			return J;
		}
		public R D() {
			return Hp;
		}
		public final String toString() { return J + "=" + Hp; }
		public final int hashCode() {
			return Vo.hashCode(J) ^ Vo.hashCode(Hp);
		}
	}
	static final int X5(j J) {
		return (J == null) ? 0 : J.hashCode();
	}
	public int zk() {
		return zk;
	}
	public boolean b() {
		return zk == 0;
	}
	@A("unchecked")
	public R P(cU J, R Hp) {
		i<cU, R> y;  int X5 = X5(J);
		if (u4 == null || u4.h == 0) {
			u4 = (i<cU, R>[]) new i[xj];
		}
		int G = u4.h;
		int C = (G - 1) & X5;
		if (u4[C] == null) {
			u4[C] = new i<cU,R>(X5, J, Hp, null);
		} else {
			i<cU, R> c;
			y = u4[C];
			if (y.X5 == X5 && 
					y.J == J || (J != null && y.J.equals(J))){
				c = y;
			} else {
				for (int x = 0; ; x++) {
					System.out.println("LinkedList: Not " + y.J);
					c = y.uc;
					if (y.uc == null) {
						y.uc = new i(X5, J, Hp, null);
						break;
					}
					if (c.X5 == X5 &&
							(c.J == J || (J != null && c.J.equals(J)))) {
						break;
					}
					y = c;
				}
			}
			if (c != null) {
				R B = c.Hp;
				c.Hp = Hp;
				return B;
			}
		}
		zk++;
		return null;
	}
	public R r(j J) {
		int X5 = X5(J);
		int G = u4.h;
		if (u4 != null && u4.h > 0 && u4[X5 & (G - 1)] != null) {
			i<cU, R> l = u4[X5 & (G - 1)];
			if (l.X5 == X5 && 
					l.J == J || (J != null && l.J.equals(J))) {
				return l.Hp;
			}
			i<cU, R> c = l.uc;
			if (l.uc != null) {
				do {
					if (c.X5 == X5 &&
							c.J == J || (c.J != null && c.J.equals(J))) {
						return c.Hp;
					} 
				}while ((c = c.uc) != null);
			}
		}
		return null;
	}
	public boolean I(j J) {
		return r(J) != null;
	}
	public R O(j J) {
		int X5 = X5(J);
		int G = u4.h;
		int C = X5 & (G - 1);
		if (u4 != null && u4.h > 0 && u4[C] != null) {
			i<cU, R> u = u4[C];
			i<cU, R> c = null; i<cU, R> H = null;
			if (u.X5 == X5 && 
					u.J == J || (J != null && u.J.equals(J))) {
				H = u;
			}
			c = u.uc;
			if (u.uc != null) {
				do {
					if (c.X5 == X5 && 
							c.J == J || (J != null && c.J.equals(J))) {
						H = c;
						break;
					}
					u = c;
				} while ((c = c.uc) != null);
			}
			if (H != null) {
				if (H == u) {
					u4[C] = H.uc;
				} else {
					u.uc = H.uc;
				}
				zk--;
				return H.Hp;
			}
		}
		return null;
	}
}