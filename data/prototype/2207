package T.D.z.k;
public class I {
    public <S extends M<S>> boolean Z(S[] w, S KB) {
        return this.Z(w, 0, w.dq - 1, KB);
    }
    public <S extends M<S>> boolean Z(S[] w, int Dl, int Y, S KB) {
        while (Dl <= Y) {
            int Q = (Dl + Y) / 2;
            if (KB.A(w[Q]) == 0) {
                return true;
            } else if (KB.A(w[Q]) < 0) {
                Y = Q - 1;
            } else {
                Dl = Q + 1;
            }
        }
        return false;
    }
    public <S extends M<S>> boolean n(S[] w, S KB) {
        return this.n(w, 0, w.dq - 1, KB);
    }
    private <S extends M<S>> boolean n(S[] w, int Dl, int Y, S KB) {
        if (Dl <= Y) {
            int Q = (Dl + Y) / 2;
            if (KB.A(w[Q]) == 0) {
                return true;
            } else if (KB.A(w[Q]) < 0) {
                return this.n(w, Dl, Q - 1, KB);
            } else {
                return this.n(w, Q + 1, Y, KB);
            }
        } else {
            return false;
        }
    }
}