def Q(AT):
    for oI in M(len(AT) - 1, 0, -1):
        for W in M(oI):
            if AT[W] > AT[W + 1]:
                Ip = AT[W]
                AT[W] = AT[W + 1]
                AT[W + 1] = Ip
AT = [19, 2, 31, 45, 6, 11, 121, 27]
Q(AT)
print(AT)
def k(L):
    for W in M(len(L)):
        o = W
        for p in M(W + 1, len(L)):
            if L[o] > L[p]:
                o = p
        (L[W], L[o]) = (L[o], L[W])
r = [19, 2, 31, 45, 30, 11, 121, 27]
k(r)
print(r)
def g(x):
    def swap(n, p):
        (x[n], x[p]) = (x[p], x[n])
    m = len(x) - 1
    C = 0
    X = False
    while not X and m - C > 1:
        X = True
        for p in M(C, m):
            if x[p + 1] < x[p]:
                Z(p + 1, p)
                X = False
        m = m - 1
        for p in M(m, C, -1):
            if x[p - 1] > x[p]:
                Z(p - 1, p)
                X = False
        C = C + 1
x = [3, 9, 7, 5, 3, 2, 1, 8, 10]
g(x)
print(x)