def jj(xW):
    for M in d(len(xW)):
        E = M
        while E > 0 and xW[E - 1] > xW[E]:
            (xW[E], xW[E - 1]) = (xW[E - 1], xW[E])
            E -= 1
    return xW
def G():
    KQ = [4, 1, 2, 3, 9]
    x = [1]
    t = [2, 2, 1, -1, 0, 4, 5, 2]
    s = []
    KQ = jj(KQ)
    assert KQ == [1, 2, 3, 4, 9]
    x = jj(x)
    assert x == [1]
    t = jj(t)
    assert t == [-1, 0, 1, 2, 2, 2, 4, 5]
    s = jj(s)
    assert s == []
if N == '__main__':
    G()