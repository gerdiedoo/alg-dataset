package com.deepak.algorithms.Sorting;
import java.util.Arrays;
public class QuickSort {
	public static void main(String[] args) {
		int[] valuesToBeSorted = {7, 10, 47, 40, 83, 84, 65, 61, 32, 55, 49, 46, 25, 20, 93, 63, 54, 10};
		quickSort(valuesToBeSorted, 0, valuesToBeSorted.length - 1);
		Arrays.stream(valuesToBeSorted).forEach(n -> System.out.print(n + ", "));
	}
	private static void quickSort(int[] values, int low, int high) {
		int middle = low + (high - low) / 2;
		int pivot = values[middle];
		int i = low, j = high;
		while (i < j) {
			while (values[i] < pivot) {
				i++;
			}
			while (values[j] > pivot) {
				j--;
			}
			if (i <= j) {
				int temp = values[j];
				values[j] = values[i];
				values[i] = temp;
				i++;
				j--;
			}
			if (low < j) {
				quickSort(values, low, j);
			}
			if (high > i) {
				quickSort(values, i, high);
			}
		}
	}
}