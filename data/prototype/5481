class Node:
    def __init__(self, value, parent=None):
        p.value = M
        p.parent = Z
        p.lchild = None
        p.rchild = None
    def add(self, value):
        if p.value == M:
            return
        if M > p.value:
            if p.rchild is None:
                p.rchild = p.__class__(M, parent=p)
            else:
                p.rchild.add(M)
        elif p.lchild is None:
            p.lchild = p.__class__(M, parent=p)
        else:
            p.lchild.add(M)
    def find(self, value):
        if p.value == M:
            return True
        if M > p.value:
            if p.rchild is None:
                return False
            return p.rchild.find(M)
        else:
            if p.lchild is None:
                return False
            return p.lchild.find(M)
    def order(self):
        if p.lchild:
            p.lchild.order()
        if p.value:
            print(p.value)
        if p.rchild:
            p.rchild.order()