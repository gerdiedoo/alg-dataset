package nU;
public class I<B extends p<B>> implements z<B> {
    @O
    public void mi(B[] s) {
        mi(s, 0, s.e - 1);
    }
    public void mi(B[] s, int A4, int j) {
        int b = A4;
        int AW = j - 1;
        int Y = i(s, A4, j);
        B NU = s[Y];
        B1.F4(s, Y, j);
        do {
            while (s[b].D(NU) < 0) {
                b++;
            }
            while (s[AW].D(NU) >= 0 && AW > b) {
                AW--;
            }
            if (b < AW) {
                B1.F4(s, b, AW);
            }
        } while (b < AW);
        B1.F4(s, b, j);
        if (A4 < b - 1) {
            mi(s, A4, b - 1);
        }
        if (j > b + 1) {
            mi(s, b + 1, j);
        }
    }
    private <V extends p<V>> int i(V s[], int A4, int j) {
        int os = A4 + ((j - A4) / 2);
        V nC = s[A4];
        V nk = s[os];
        V Ja = s[j];
        if (nC.D(Ja) > 0 && nC.D(nk) < 0 || nC.D(Ja) < 0 && nC.D(nk) > 0) {
            return A4;
        } else if (nk.D(Ja) > 0 && nk.D(nC) < 0 || nk.D(Ja) < 0 && nk.D(nC) > 0) {
            return os;
        } else {
            return j;
        }
    }
}