import Ey.c.u9;
import Ey.c.O;
import Ey.c.Y;
import Ey.c.tg;
import Ey.c.W0;
import Ey.c.e;
public class n<q, Z3> implements y<q, Z3> {
    private e<l<q, Z3>>[] L3;
    private int Lz;
    public n() {
        L3 = new e[S];
        Lz = 0;
    }
    public n(int D) {
        L3 = new e[D];
        Lz = 0;
    }
    @Mh
    public Z3 P(q MD, Z3 B) {
        if (MD == null || B == null) {
            throw new oC("Input data cannot be null.");
        }
        if ((double) (Lz + 1) / L3.HW > g) {
            N_(L3.HW * 2 + 1);
        }
        int h = R.Rl(MD.hashCode()) % L3.HW;
        if (L3[h] == null) {
            L3[h] = new e<>();
        } else {
            for (l<q, Z3> iS : L3[h]) {
                if (iS.o() == MD) {
                    Z3 m = iS.mS();
                    iS.v(B);
                    return m;
                }
            }
        }
        L3[h].t(new l<>(MD, B));
        ++Lz;
        return null;
    }
    @Mh
    public Z3 x(q MD) {
        if (MD == null) {
            throw new oC("Input MD is null");
        }
        int h = R.Rl(MD.hashCode()) % L3.HW;
        l<q, Z3> x6;
        if (L3[h] != null) {
            Y<l<q, Z3>> C = L3[h].D6();
            while (C.A()) {
                x6 = C.b();
                if (x6.o() == MD) {
                    Z3 m = x6.mS();
                    C.x();
                    --Lz;
                    return m;
                }
            }
        }
        throw new Ey.c.V("Key does not exist");
    }
    @Mh
    public Z3 Uv(q MD) {
        if (MD == null) {
            throw new oC("Input MD is null");
        }
        int h = R.Rl(MD.hashCode()) % L3.HW;
        l<q, Z3> x6;
        if (L3[h] != null) {
            Y<l<q, Z3>> C = L3[h].D6();
            while (C.A()) {
                x6 = C.b();
                if (x6.o() == MD) {
                    return x6.mS();
                }
            }
        }
        throw new Ey.c.V("Key does not exist");
    }
    @Mh
    public boolean I(q MD) {
        if (MD == null) {
            throw new oC("Input MD is null");
        }
        int h = R.Rl(MD.hashCode()) % L3.HW;
        l<q, Z3> x6;
        if (L3[h] != null) {
            Y<l<q, Z3>> C = L3[h].D6();
            while (C.A()) {
                x6 = C.b();
                if (x6.o() == MD) {
                    return true;
                }
            }
        }
        return false;
    }
    @Mh
    public void H6() {
        L3 = new e[S];
        Lz = 0;
    }
    @Mh
    public int Lz() {
        return Lz;
    }
    @Mh
    public W0<q> jd() {
        W0<q> SD = new O<>();
        for (int bY = 0; bY < L3.HW; ++bY) {
            if (L3[bY] != null) {
                for (l<q, Z3> iS : L3[bY]) {
                    SD.T(iS.o());
                }
            }
        }
        return SD;
    }
    @Mh
    public tg<Z3> bv() {
        tg<Z3> B5 = new u9<>();
        for (int bY = 0; bY < L3.HW; ++bY) {
            if (L3[bY] != null) {
                for (l<q, Z3> iS : L3[bY]) {
                    B5.T(iS.mS());
                }
            }
        }
        return B5;
    }
    @Mh
    public void N_(int HW) {
        if (HW <= 0) {
            throw new oC("Input HW cannot be "
                    + "negative");
        }
        e<l<q, Z3>>[] cC = new e[HW];
        for (int bY = 0; bY < L3.HW; ++bY) {
            if (L3[bY] != null) {
                for (l<q, Z3> iS : L3[bY]) {
                    int h = R.Rl(iS.o().hashCode()) % HW;
                    if (cC[h] == null) {
                        cC[h] = new e<>();
                    }
                    cC[h].t(iS);
                }
            }
        }
        L3 = cC;
    }
    @Mh
    public e<l<q, Z3>>[] hK() {
        return L3;
    }
}