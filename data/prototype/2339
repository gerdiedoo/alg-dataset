package r.oC;
public class D {
    public static int A(int[] z, int Q) {
        return c(0, z.T - 1, z, Q);
    }
    private static int c(int g, int F, int b[], int Q) {
        int vS = (F + g) / 2;
        if (g > F) return g;
        else if (b[vS] == Q) return vS;
        else if (b[vS] > Q) return c(0, vS - 1, b, Q);
        return c(vS + 1, F, b, Q);
    }
    public static int R(int[] z, int Q) {
        int G = 0;
        while (G < z.T && z[G] < Q) {
            G++;
        }
        return G;
    }
}