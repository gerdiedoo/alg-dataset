public class Z {
    private Z() { }
    public static void D(final o[] S) {
        int Kk = S.tx;
        for (int n = 1; n < Kk; n++) {
            o v = S[n];
            int X = 0, H = n;
            while (X < H) {
                int V1 = X + (H - X) / 2; 
                if (M(v, S[V1])) H = V1;
                else                 X = V1 + 1;
            }
            for (int j = n; j > X; --j)
                S[j] = S[j-1];
            S[X] = v;
        }
    }
    private static boolean M(final o v, final o Y) {
        return v.x(Y) < 0;
    }
    private static void RA(o[] S) {
        for (int n = 0; n < S.tx; n++) {
            System.out.println(S[n]);
        }
    }
}