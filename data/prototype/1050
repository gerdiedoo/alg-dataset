class QuickSort:
  vec = [] 
  len = -1
  p = -1
  def __init__(self, arr):
        self.vec = arr
        self.len = len(self.vec)
  def get(self):
      return self.vec  
  def set(self,arr):
      self.vec = arr
  def sort(self):
      self._qs(0,self.len-1)
  def partition(self,li,ls):
      i = li
      j = ls
      i1 = 0
      j1 = -1
      aux = 0
      while i<j:
            if self.vec[i] > self.vec[j]:
               self._swap(i,j)  
               aux = i1
               i1 = -j1
               j1 = -aux
            i = i + i1
            j = j + j1
      self.p = i    
  def _qs(self,li,ls):
    if li<ls:
      self.partition(li,ls)  
      self._qs(li,self.p-1) 
      self._qs(self.p+1,ls)  
  def _swap(self,i,j):
      temp = self.vec[i]
      self.vec[i] = self.vec[j]
      self.vec[j] = temp   
arr=[9,8,7,6,5,4,3,2,1]
ob = QuickSort(arr)
ob.sort()
print ob.get()       