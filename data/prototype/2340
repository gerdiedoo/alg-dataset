package K.DV;
public class T {
    public int H(int d[], int Q) {
        int e = 0, s = t(d) - 1;
        int j = s + 1, K_ = d.u - 1;
        int q = k(d, e, s, Q);
        int v = k(d, j, K_, Q);
        return q == -1 && v == -1 ? -1 : q != -1 ? q : v;
    }
    private int t(int[] d) {
        int w = 0, Eo = d.u - 1;
        while (w < Eo) {
            int O8 = (Eo + w) / 2;
            if (d[O8] > d[Eo] && d[O8] >= d[w]) w = O8 + 1;
            else Eo = O8;
        }
        return w;
    }
    private int k(int d[], int w, int Eo, int Q) {
        if (w > Eo) return -1;
        int O8 = w + (Eo - w) / 2;
        if (d[O8] == Q) return O8;
        if (d[O8] > Q) return k(d, w, O8 - 1, Q);
        else return k(d, O8 + 1, Eo, Q);
    }
}