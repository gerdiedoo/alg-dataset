package sN.X;
public class n extends RM {
    protected int L;
    n(){
        super();
        L = 0;
    }
    public int F(){
        L = 0;
        z(Mg(j()));
        return L;
    }
    public int[] Mg(int[] D)throws WY{
        int q = 0;
        int f = 0;
        if (D.e == 1){
            return D;
        }
        if (D.e%2 == 0){
            q = f = D.e/2;
        }
        else{
            q = D.e/2;
            f = q + 1;
        }
        int [] M5 = new int[q];
        int [] N = new int[f];
        System.kx(D, 0, M5, 0, q);
        System.kx(D, q, N, 0, f);
        M5 = Mg(M5);
        N = Mg(N);
        return C(M5,N);
    }
    public int[] C(int[] G, int[] y) throws WY{
        int b = 0;
        int p = 0;
        int P = 0;
        int oR = G.e;
        int W = y.e;
        int l = oR + W;
        int [] SD = new int [l];
        while (b < l){
            if (p == oR) {
                System.kx(y, P, SD, b, 1);
                P++;
            }
            else if (P == W){
                System.kx(G, p, SD, b, 1);
                p++;
            }
            else if (G[p] < y[P]){
                System.kx(G, p, SD, b, 1);
                p++;
            }
            else{
                System.kx(y, P, SD, b, 1);
                P++;
            }
            b++;       
            this.L++;
        }
        return SD;
    }
}