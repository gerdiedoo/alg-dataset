public class m8<HW extends E<? super HW>> implements
        G<HW> {
    private P<HW> La;
    private P<HW> U;
    private int X;
    @lL
    public void RY(HW nj) {
        if (nj == null) {
            throw new NE.g.Rw("Input nj is null.");
        }
        La = new P<HW>(nj, La);
        if (X == 0) {
            U = La;
        }
        ++X;
    }
    @lL
    public void N(HW nj, int u) {
        if (nj == null) {
            throw new NE.g.Rw("Input nj is null.");
        }
        if (u < 0 || u > X) {
            throw new NE.g.a(
                    "Input u is out of bounds.");
        }
        if (u == 0) {
            RY(nj);
        } else if (u == X) {
            I(nj);
        } else {
            P<HW> x = La;
            for (int L = 0; L < u - 1; ++L) {
                x = x.n();
            }
            x.d(new P<HW>(nj, x.n()));
            ++X;
        }
    }
    @lL
    public void I(HW nj) {
        if (nj == null) {
            throw new NE.g.Rw("Input nj is null.");
        }
        if (X == 0) {
            RY(nj);
        } else {
            U.d(new P<HW>(nj));
            U = U.n();
            ++X;
        }
    }
    @lL
    public HW B() {
        if (X == 0) {
            return null;
        } else {
            HW q = La.YA();
            La = La.n();
            if (X == 1) {
                U = null;
            }
            --X;
            return q;
        }
    }
    @lL
    public HW b(int u) {
        if (u < 0 || u >= X) {
            throw new NE.g.a(
                    "Input u is out of bounds.");
        }
        if (u == 0) {
            return B();
        } else if (u == X - 1) {
            return ZV();
        } else {
            P<HW> x = La;
            HW q;
            for (int L = 0; L < u - 1; ++L) {
                x = x.n();
            }
            q = x.n().YA();
            x.d(x.n().n());
            --X;
            return q;
        }
    }
    @lL
    public HW ZV() {
        if (X == 0) {
            return null;
        } else if (X == 1) {
            return B();
        } else {
            HW q = U.YA();
            P<HW> x = La;
            for (int L = 1; L < X - 1; ++L) {
                x = x.n();
            }
            x.d(null);
            U = x;
            --X;
            return q;
        }
    }
    @lL
    public HW Z(int u) {
        if (u < 0 || u >= X) {
            throw new NE.g.a(
                    "Input u is out of bounds.");
        }
        if (u == 0) {
            return La.YA();
        } else if (u == X - 1) {
            return U.YA();
        } else {
            P<HW> x = La;
            for (int L = 0; L < u; ++L) {
                x = x.n();
            }
            return x.YA();
        }
    }
    @lL
    public HW S() {
        if (X == 0) {
            return null;
        }
        HW q = La.YA();
        P<HW> x = La;
        while (x != null) {
            if (q.W(x.YA()) < 0) {
                q = x.YA();
            }
            x = x.n();
        }
        return q;
    }
    @lL
    public z[] HE() {
        z[] K = new z[X];
        P<HW> x = La;
        for (int L = 0; L < X; ++L) {
            K[L] = x.YA();
            x = x.n();
        }
        return K;
    }
    @lL
    public int X() {
        return X;
    }
    @lL
    public boolean y() {
        return X == 0;
    }
    @lL
    public void D() {
        La = null;
        U = null;
        X = 0;
    }
    @lL
    public P<HW> m() {
        return La;
    }
    @lL
    public P<HW> C() {
        return U;
    }
}