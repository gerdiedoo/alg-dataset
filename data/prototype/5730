package M9;
public class Ip<SO extends W<SO>> extends X<SO> {
    protected SO[] p;
    protected void u(SO[] x, int b, int l, int Q) {
        int R = b, q = l + 1;
        for (int RY = b; RY <= Q; RY++) {
            p[RY] = x[RY];
        }
        for (int RY = b; RY <= Q; RY++) {
            if (R > l) {
                x[RY] = p[q++];
            } else if (q > Q) {
                x[RY] = p[R++];
            } else if (p[R].cm(p[q]) <= 0) {
                x[RY] = p[R++];  
            } else {
                x[RY] = p[q++];
            }
        }
    }
    @E
    public void t(SO[] x) {
        p = (SO[]) new W[x.j];
        t(x, 0, x.j - 1);
    }
    private void t(SO[] x, int b, int Q) {
        if (Q <= b) {
            return;
        }
        int a = b + (Q - b) / 2;
        t(x, b, a);
        t(x, a + 1, Q);
        u(x, b, a, Q);
    }
    public static void main(String[] args) {
        J[] x = new J[]{3, 5, 1, 2, 4};
        new Ip<J>().t(x);
    }
}