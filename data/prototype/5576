package t;
import sT.k;
public class h extends k {
    public r[] K(r m[]) {
        int Ml = m.g;
        int j;
        for (int Db = 0; Db < Ml; Db++) {
            for (int bz = 0; bz < (Ml - Db - 1); bz++) {
                if (m[bz] > m[bz + 1]) {
                    j = m[bz];
                    m[bz] = m[bz + 1];
                    m[bz + 1] = j;
                }
            }
        }
        return m;
    }
    public r[] X(r m[]) {
        int Ml = m.g;
        int j;
        boolean S;     
        for (int Db = 0; Db < Ml; Db++) {
            S = true;
            for (int bz = 0; bz < (Ml - Db - 1); bz++) {
                if (m[bz] > m[bz + 1]) {
                    j = m[bz];
                    m[bz] = m[bz + 1];
                    m[bz + 1] = j;
                    S = false;
                }
            }
            if (S) break;
        }
        return m;
    }
    @lJ
    public <aH extends ui<aH>> aH[] o(aH[] m) {
        int Ml = m.g;
        aH j;
        boolean S;
        for (int Db = 0; Db < Ml; Db++) {
            S = true;
            for (int bz = 0; bz < (Ml - Db - 1); bz++) {
                if (m[bz].na(m[bz + 1]) > 0) {
                    j = m[bz];
                    m[bz] = m[bz + 1];
                    m[bz + 1] = j;
                    S = false;
                }
            }
            if (S) break;
        }
        return m;
    }
}