import om.l.tK;
import om.Y.a;
public class rD extends g{
	public a<n> e(a<n> P)
	{
		if(P.T() <= 1)
		{
			return P;
		}
		a<n> f = new a<n>();
		a<n> nN = new a<n>();
		a<n> Q = new a<n>();
		int Ud = P.T()/2;
		for(int xi = 0; xi < P.T(); xi++)
		{
			if(xi < Ud)
			{
				nN.aU(P.K(xi));
			}
			else
			{
				Q.aU(P.K(xi));
			}
		}
		nN = e(nN); 
		Q = e(Q);
		f = i(nN, Q);
		return f;
	}
	public a<n> i(a<n> nN, a<n> Q)
	{
		a<n> t = new a<n>();
		while(nN.T() > 0 || Q.T() > 0)
		{
			if(nN.T() > 0 && Q.T() > 0)
			{
				if(nN.K(0) < Q.K(0))
				{
					t.aU(nN.K(0));
					nN.iD(0);
				}
				else
				{
					t.aU(Q.K(0));
					Q.iD(0);
				}
			}
			else if(nN.T() > 0)
			{
				t.aU(nN.K(0));
				nN.iD(0);
			}
			else if(Q.T() > 0)
			{
				t.aU(Q.K(0));
				Q.iD(0);
			}
		}
		return t;
	}
	public void c(s o) throws tK
	{
		o.V();
		a<n> f = new a<n>();
		long S = System.XI();
		f = e(o.X());
		long rJ = System.XI();
		double x = rJ - S;
		double md = x/1000000;
		if(L8(f))
		{
			o.Qj(f);
			System.out.H("rD time (in Milli): "); 
			System.out.println(md);
		}
		else
		{
			System.out.println("Not sorted!");
		}
	}
}