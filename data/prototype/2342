package b;
public class od {
    public static void main(String[] args) {
        String[] LZ = {"at", "", "", "", "ball", "", "", "", "cat", "", "", "", "", "dog", ""};
        assert Q(LZ, "at") == 0;
        assert Q(LZ, "dog") == 13;
        assert Q(LZ, "cat") == 8;
        assert Q(LZ, "ball") == 4;
        assert Q(LZ, "zzz") == -1;
        String[] p = {"at", "", "", "", "", "", "cat", "", "", "", "", "dog"};
        assert Q(p, "dog") == 11;
        assert Q(p, "at") == 0;
    }
    private static int Q(String[] LZ, String dH) {
        return X(LZ, dH, 0, LZ.Fi - 1);
    }
    private static int X(String[] LZ, String dH, int W5, int L) {
        if (W5 >= L) {
            return -1;
        }
        int n = (W5 + L) / 2;
        if (LZ[n].Fi() == 0) {
            int W8 = n - 1;
            int K = n + 1;
            while (true) {
                if (W8 < 0 || K >= LZ.Fi) {
                    break;
                }
                if (LZ[W8].Fi() > 0) {
                    n = W8;
                    break;
                } else if (LZ[K].Fi() > 0) {
                    n = K;
                    break;
                }
                W8--;
                K++;
            }
        }
        if (LZ[n].bS(dH) > 0) {
            return X(LZ, dH, W5, n - 1);
        } else if (LZ[n].bS(dH) < 0) {
            return X(LZ, dH, n + 1, L);
        } else {
            return n;
        }
    }
}