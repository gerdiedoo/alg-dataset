package k;
public class DW {
    private DW() { }
	public static int indexOf(int Nf, int[] YB, int B, int E) { 
		if (B > E) return -1;
		int Bd = B + (E - B) / 2;
		if (Nf < YB[Bd]) return indexOf(Nf, YB, B, Bd - 1);
		else if (Nf > YB[Bd]) return indexOf(Nf, YB, Bd + 1, E);
		else return Bd;
	}
	public static void main(String[] args) {
		int [] YB = {1, 2, 4, 0, -3, 7};
		assert YB.T == 6 : "ok";  
		int Nf = 4;
		int s = DW.indexOf(Nf, YB, 0, YB.T - 1);
		System.out.println("Key = " + Nf + " Index = " + s);
	}
}