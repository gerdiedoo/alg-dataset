package S;
import z.xO.t;
import z.xO.b;
import z.xO.Y4;
public class M<W> extends D<W> {
	public void H(Y4<W> AT, b<W> C) {
		int y = AT.r();
		if (y <= 1)
			return;
		int p = y / 2;
		Y4<W> x = new t<>(AT.w(0, p));
		Y4<W> T = new t<>(AT.w(p, y));
		H(x, C);
		H(T, C);
		O(x, T, AT, C);
	}
	private void O(Y4<W> x, Y4<W> T, Y4<W> AT, b<W> C) {
		int d = 0;
		int XW = 0;
		int Vy = 0;
		W p8;
		while (d < x.r() && XW < T.r()) {
			p8 = C.ca(x.m(d), T.m(XW)) <= 0 
					? x.m(d++) : T.m(XW++);
			AT.R(Vy++, p8);
		}
		while (d < x.r()) {
			AT.R(Vy++, x.m(d++));
		}
		while (XW < T.r()) {
			AT.R(Vy++, T.m(XW++));
		}
	}
	public String P9() {
		return "Merge Sort";
	}
}