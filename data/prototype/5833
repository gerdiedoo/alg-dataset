package E;
import md.G;
public class T extends G {
    public s[] md(s i[], int xR, int X){
        if(xR<X){
            int eA = c(i, xR, X);
            md(i, xR, eA-1);
            md(i, eA+1, X);
        }
        return i;
    }
    public int c(s i[], int xR, int X){
        int eA=xR;
        int M = i[X], vt;
        for(int P=xR; P<X; P++){
            if(i[P]<=M){
                vt = i[eA];
                i[eA] = i[P];
                i[P] = vt;
                eA++;
            }
        }
        vt = i[eA];
        i[eA] = i[X];
        i[X] = vt;
        return eA;
    }
    public <p extends l<p>> p[] Vx(p[] i, int xR, int X) {
        if(xR<X) {
            int eA = c(i, xR, X);
            Vx(i, xR, eA-1);
            Vx(i, eA+1, X);
        }
        return i;
    }
    public <p extends l<p>> int c(p[] i, int xR, int X) {
        int eA = xR;
        p M = i[X], vt;
        for(int P=xR; P<X; P++){
            if(i[P].K(M)<=0){
                vt = i[P];
                i[P] = i[eA];
                i[eA] = vt;
                eA++;
            }
        }
        vt = i[eA];
        i[eA] = i[X];
        i[X] = vt;
        return eA;
    }
}