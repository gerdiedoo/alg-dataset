package s;
import y.h.P.Z.a9;
import y.h.P.Z.c;
public class V {
  public static void L(S[] i) {  
    int l = i.q;
    for (int N = 1; N < l; N++) {  
      for (int f = N; f > 0 && g(i[f], i[f-1]); f--)
        r(i, f, f-1);
    }
  }
  private static boolean g(S v, S T) { 
    return v.t(T) < 0;  
  }
  private static void r(S[] i, int N, int f) { 
    S I = i[N]; 
    i[N] = i[f]; 
    i[f] = I; 
  }
  private static void Tx(S[] i) {  
    for (int N = 0; N < i.q; N++)
      c.rn("%s\n", i[N]);
  }
  public static boolean m(S[] i) {  
    for (int N = 1; N < i.q; N++)
      if (g(i[N], i[N-1])) return false;
    return true;
  }
  public static void main(String[] args) {  
    String[] i = a9.x();
    L(i);
    assert m(i);
    Tx(i);
  }
}