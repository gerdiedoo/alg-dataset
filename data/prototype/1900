import B.xk.*;
public class Y<m,p>{
	static final int V = 1 << 2;
	d<m,p>[] S;
	int K;
	int G;
	public Y() {
		G = V;
	}
	public Y(int A) {
		this.G = A;
	}
	class d<m, p> {
		final int a;
		final m s;
		p sY;
		d<m,p> iu;
		d(int a, m s, p sY, d<m,p> iu) {
			this.a = a;
			this.s = s;
			this.sY = sY;
			this.iu = iu;
		}
		public m PY() {
			return s;
		}
		public p D() {
			return sY;
		}
		public final String toString() { return s + "=" + sY; }
		public final int hashCode() {
			return J.hashCode(s) ^ J.hashCode(sY);
		}
	}
	static final int a(SN s) {
		return (s == null) ? 0 : s.hashCode();
	}
	public int K() {
		return K;
	}
	public boolean n() {
		return K == 0;
	}
	@C("unchecked")
	public p U(m s, p sY) {
		d<m, p> o;  int a = a(s);
		if (S == null || S.M == 0) {
			S = (d<m, p>[]) new d[G];
		}
		int X = S.M;
		int F = (X - 1) & a;
		if (S[F] == null) {
			S[F] = new d<m,p>(a, s, sY, null);
		} else {
			d<m, p> l;
			o = S[F];
			if (o.a == a && 
					o.s == s || (s != null && o.s.equals(s))){
				l = o;
			} else {
				for (int W = 0; ; W++) {
					System.out.println("LinkedList: Not " + o.s);
					l = o.iu;
					if (o.iu == null) {
						o.iu = new d(a, s, sY, null);
						break;
					}
					if (l.a == a &&
							(l.s == s || (s != null && l.s.equals(s)))) {
						break;
					}
					o = l;
				}
			}
			if (l != null) {
				p f = l.sY;
				l.sY = sY;
				return f;
			}
		}
		K++;
		return null;
	}
	public p c(SN s) {
		int a = a(s);
		int X = S.M;
		if (S != null && S.M > 0 && S[a & (X - 1)] != null) {
			d<m, p> wD = S[a & (X - 1)];
			if (wD.a == a && 
					wD.s == s || (s != null && wD.s.equals(s))) {
				return wD.sY;
			}
			d<m, p> l = wD.iu;
			if (wD.iu != null) {
				do {
					if (l.a == a &&
							l.s == s || (l.s != null && l.s.equals(s))) {
						return l.sY;
					} 
				}while ((l = l.iu) != null);
			}
		}
		return null;
	}
	public boolean h(SN s) {
		return c(s) != null;
	}
	public p q(SN s) {
		int a = a(s);
		int X = S.M;
		int F = a & (X - 1);
		if (S != null && S.M > 0 && S[F] != null) {
			d<m, p> QG = S[F];
			d<m, p> l = null; d<m, p> H = null;
			if (QG.a == a && 
					QG.s == s || (s != null && QG.s.equals(s))) {
				H = QG;
			}
			l = QG.iu;
			if (QG.iu != null) {
				do {
					if (l.a == a && 
							l.s == s || (s != null && l.s.equals(s))) {
						H = l;
						break;
					}
					QG = l;
				} while ((l = l.iu) != null);
			}
			if (H != null) {
				if (H == QG) {
					S[F] = H.iu;
				} else {
					QG.iu = H.iu;
				}
				K--;
				return H.sY;
			}
		}
		return null;
	}
}