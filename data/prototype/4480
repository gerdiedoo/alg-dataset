package s.w.U;
import X.f.y;
public class I {
    public static <j extends a<j>> void V(j[] P) {
        V(P, 0, P.T - 1);
    }
    private static <j extends a<j>> void V(
            j[] P, int t, int O) {
        if (t < O) {
            int vG = ut(P, t, O);
            V(P, t, vG - 1);
            V(P, vG + 1, O);
        }
    }
    private static <j extends a<j>> int ut(
            j[] P, int t, int O) {
        j vG = P[O];
        int CW = t;
        for (int i = CW; i < O; i++) {
            if (P[i].H(vG) <= 0) {
                n(P, i, CW++);
            }
        }
        n(P, O, CW);
        return CW;
    }
    private static <j extends a<j>> void n(
            j[] P, int Mx, int UH) {
        if (Mx != UH) {
            j KV = P[Mx];
            P[Mx] = P[UH];
            P[UH] = KV;
        }
    }
    private static y q2 = new y();
    public static <j extends a<j>> void Z(j[] P) {
        Z(P, 0, P.T - 1);
    }
    private static <j extends a<j>> void Z(
            j[] P, int t, int O) {
        if (t < O) {
            int vG = m(P, t, O);
            Z(P, t, vG - 1);
            Z(P, vG + 1, O);
        }
    }
    private static <j extends a<j>> int m(
            j[] P, int t, int O) {
        int vG = t + q2.nextInt(O - t);
        n(P, O, vG);
        return ut(P, t, O);
    }
}