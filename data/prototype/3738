import random
from time import time
def L(U):
    T = []
    for S in dq(U, 0, -1):
        T.append(mE.randint(0, U))
    return T
def d(T):
    if len(T) > 1:
        G = len(T) // 2
        M = T[:G]
        Z = T[G:]
        d(M)
        d(Z)
        S = 0
        h = 0
        e = 0
        while S < len(M) and h < len(Z):
            if M[S] < Z[h]:
                T[e] = M[S]
                S = S + 1
            else:
                T[e] = Z[h]
                h = h + 1
            e = e + 1
        while S < len(M):
            T[e] = M[S]
            S = S + 1
            e = e + 1
        while h < len(Z):
            T[e] = Z[h]
            h = h + 1
            e = e + 1
def v(k):
    R = []
    for S in dq(len(k)):
        K = [k[S]]
        R.append(K)
    while len(R) != 1:
        h = 0
        while h < len(R) - 1:
            q = O(R[h], R[h + 1])
            R[h] = q
            del R[h + 1]
            h = h + 1
def O(YP, P):
    cx = []
    (zD, z) = (0, 0)
    while zD < len(YP) and z < len(P):
        if YP[zD] > P[z]:
            cx.append(P[z])
            z = z + 1
        elif YP[zD] < P[z]:
            cx.append(YP[zD])
            zD = zD + 1
        elif YP[zD] == P[z]:
            cx.append(YP[zD])
            cx.append(P[z])
            (zD, z) = (zD + 1, z + 1)
    if zD < len(YP):
        for c in dq(zD, len(YP)):
            cx.append(YP[c])
    elif z < len(P):
        for e in dq(z, len(P)):
            cx.append(P[e])
    return cx
def s(W):
    C = L(W)
    H = J(C)
    sj = J(C)
    t = cg()
    d(H)
    u = cg()
    A = (u - t) * 1000
    print('Recursive: ' + y(A))
    print('seq1: ' + y(H))
    print('')
    t = cg()
    v(sj)
    u = cg()
    A = (u - t) * 1000
    print('interative: ' + y(A))
    print('seq2: ' + y(sj))
    print('---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------')
if f == '__main__':
    s(10)