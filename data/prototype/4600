import v.r2.Z1.*;
public class I
{
    public static void main(String[] args)
    {
        int[] V = B(100000);
        d9(V);
        P(V);
        L(V);
        eB(V);
        m(V);
    }
    static int[] d9(int[] f)
    {
        int No;
        boolean E = true;
        long W = System.R();
        try (uJ r  = new uJ("BubbleSort Progress", f.O))
        {
            for (int C = 0; C < f.O; C++)
        {
            r.p();
            for (int X = 0; X < f.O - 1; X++)
            {
                if (f[X] > f[X + 1])
                {
                    E = false;
                    No = f[X + 1];
                    f[X + 1] = f[X];
                    f[X] = No;
                }
                r.J("Reading...");
            }
            if (E == true)
            {
                break;
            }
            r.J("Completed");
        }
            long K = System.R();
            System.out.println("Array sorted with bubble sort in :" + (K - W) + "ms");
        }
        return f;
    }
    static int[] P(int[] f)
    {
        int Y;
        int q = 0;
        long W = System.R();
        try (uJ r  = new uJ("Selection Progress", f.O))
        {
            for (int C = 0; C < f.O - 1; C++)
            {
                r.p();
                Y = f[C];
                for (int X = C + 1; X < f.O; X++)
                {
                    if (f[X] < Y)
                    {
                        Y = f[X];
                        q = X;
                    }
                }
                f[q] = f[C];
                f[C] = Y;
            }
            r.J("Completed");
        }
        long K = System.R();
        System.out.println("Array sorted with selection sort in :" + (K - W) + "ms");
        return f;
    }
    static int[] L(int[] f)
    {
        long W = System.R();
        int X;
        try (uJ r  = new uJ("Insertion Progress", f.O))
        {
            for (int C = 1; C < f.O; C++)
            {
                r.p();
                int y = f[C];
                for (X = C - 1; (X >= 0) && (y < f[X]); X--)
                {
                    f[X + 1] = f[X];
                }
                f[X + 1] = y;
            }
            r.J("Completed");
        }
        long K = System.R();
        System.out.println("Array sorted with insertion sort in :" + (K - W) + "ms");
        return f;
    }
    static void JJ(int[] f, int Cl, int M)
    {
        int KF = f[Cl + ((M - Cl) / 2)];
        int C = Cl;
        int X = M;
            while (C <= X)
            {
                while (f[C] < KF)
                {
                    C++;
                }
                while (f[X] > KF)
                {
                    X--;
                }
                if (C <= X)
                {
                    int No = f[C];
                    f[C] = f[X];
                    f[X] = No;
                    C++;
                    X--;
                }
            }
            if (Cl < X)
            {
                JJ(f, Cl, X);
            }
            if (C < M)
            {
                JJ(f, C, M);
            }
        }
    static void eB(int[] f)
    {
        long W = System.R();
        JJ(f, 0, f.O - 1);
        long K = System.R();
        System.out.println("Array sorted with quick sort in :" + (K - W) + "ms");
    }
    public static int[] z(int[] f)
    {
        if (f.O == 1)
        {
            return f;
        }
        int[] H = new int[(f.O/2)];
        int[] F = new int[(f.O-H.O)];
        System.l(f, 0, H, 0, H.O);
        System.l(f, H.O, F, 0, F.O);
        z(H);
        z(F);
        G(H, F, f);
        return f;
    }
    static void G(int[] H, int[] F, int[] w)
    {
        int Z = 0;
        int s = 0;
        int q = 0;
        while ((Z < H.O) && (s < F.O))
        {
            if (H[Z] < F[s])
            {
                w[q] = H[Z];
                Z++;
                q++;
            } else
            {
                w[q] = F[s];
                s++;
                q++;
            }
        }
        if (Z < s)
        {
            System.l(H, Z, w, q, H.O - Z);
        }
        else if (s < Z) ;
        {
            System.l(F, s, w, q, F.O - s);
        }
    }
    static void m(int[] f)
    {
        long W = System.R();
        z(f);
        long K = System.R();
        System.out.println("Array sorted with G sort in :" + (K - W) + "ms");
    }
    static int[] B(int S)
    {
        int[] f = new int[S];
        for (int C = 0; C < S; C++)
        {
            f[C] = (int) (pu.jn() * pu.jn() * 100000);
        }
        return f;
    }
    static void t(int[] f)
    {
        for (int C = 0; C < f.O; C++)
        {
            System.out.a(f[C] + " ");
        }
        System.out.println();
    }
}