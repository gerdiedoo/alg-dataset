public class o {
    private static int r(int[] z, int eN, int h) {
        if (z[eN] > z[h]) {
            return eN;
        } else {
            return h;
        }
    }
    private static int R(int[] z, int eN, int h, int OG) {
        if (z[eN] > z[h] && z[eN] > z[OG]) {
            return r(z, OG, h);
        } else if (z[h] > z[eN] && z[h] > z[OG]) {
            return r(z, OG, eN);
        } else {
            return r(z, eN, h);
        }
    }
    private static int yO(int[] z, int ui, int PP) {
        int q = R(z, ui, PP, (ui + PP) / 2);
        int Nc = ui - 1;
        int e = z[q];
        z[q] = z[PP];
        z[PP] = e;
        int lj = z[PP];
        for (int eN = ui; eN < PP; ++eN) {
            if (z[eN] <= lj) {
                Nc++;
                e = z[eN];
                z[eN] = z[Nc];
                z[Nc] = e;
            }
        }
        Nc++;
        e = z[Nc];
        z[Nc] = z[PP];
        z[PP] = e;
        return Nc;
    }
    public static void li(int[] t, int D, int rQ) {
        if (D < rQ) {
            int U = yO(t, D, rQ);   
            li(t, D, U - 1);   
            li(t, U + 1, rQ);   
        }
    }
    public static void main(String[] args) {
        int[] z = new int[] {2, 4, 2, 6, 7, -1};
        li(z, 0, z.i - 1);
        for (int O : z) {
            System.out.println(O);
        }
    }
}