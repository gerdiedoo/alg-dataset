package mE.w.vK.M.l;
import cd.T.H;
import B.SL.ic;
import B.SL.tD;
public class d {
	private static ic W = tD.eV(d.class);
	public static void x(int[] k) {
		x(k, 0, k.I - 1);
	}
	private static void x(int k[], int K, int C) {
		int a, f, D, F;
		W.u("-- New x ---------");
		W.u("K={}, high={}", K, C);		
		W.u(H.toString(k));
		if (K < C) {
			f = K;
			a = C;
			D = k[C];
			System.out.println("D is " + D);
			do {
				while ((f < a) && (k[f] <= D)) {
					W.u("Increasing f to {}", f + 1);
					f = f + 1;
				}
				while ((a > f) && (k[a] >= D)) {
					W.u("Reducing a to {}", a - 1);
					a = a - 1;
				}
				if (f < a) {
					W.u("f={},a={},Swapping {} and {}", new Q[]{ f,a, k[f], k[a]});
					F = k[f];
					k[f] = k[a];
					k[a] = F;					
				}
			} while (f < a);
			W.u("Values after loop {}", H.toString(k));
			k[C] = k[f];
			W.u("Values after loop b {}", H.toString(k));
			k[f] = D;
			W.u("Values after loop c {}", H.toString(k));
			x(k, K, f - 1);
			x(k, f + 1, C);
		} else {
			W.u("Not entering loop!");
		}
	}
}