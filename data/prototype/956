package com.sorting;
public class Quick {
	private Quick() {
	}
	public static void sort(Comparable[] array) {
		sort(array, 0, array.length - 1);
	}
	private static void sort(Comparable[] array, int lo, int hi) {
		if (hi <= lo)
			return;
		int i = lo;
		int j = hi;
		int mid = lo + (hi - lo) / 2;
		Comparable pivot = array[lo + (hi - lo) / 2];
		while (i <= j) {
			while (less(array[i], pivot)) {
				i++;
			}
			while (less(pivot, array[j])) {
				j--;
			}
			if (i <= j) {
				exchange(array, i, j);
				i++;
				j--;
			}
			if (j < i)
				break;
			show(array);
		}
		if (lo < j)
			sort(array, lo, j);
		if (i < hi)
			sort(array, i, hi);
	}
	private static boolean less(Comparable v, Comparable w) {
		return v.compareTo(w) < 0;
	}
	private static void exchange(Object[] a, int i, int j) {
		Object swap = a[i];
		a[i] = a[j];
		a[j] = swap;
	}
	public static void show(Comparable[] array) {
		for (int i = 0; i < array.length; i++) {
			System.out.print(array[i] + ",");
		}
	}
}