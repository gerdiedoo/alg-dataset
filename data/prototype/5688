def Y(c):
    H = len(c)
    if H > 1:
        w = H // 2
        D = c[:w]
        h = c[w:]
        Y(D)
        Y(h)
        o(D, h, c)
    return c
def o(D, h, c):
    VY = 0
    p = 0
    r = 0
    while VY < len(D) and p < len(h):
        if D[VY] <= h[p]:
            c[r] = D[VY]
            VY += 1
        else:
            c[r] = h[p]
            p += 1
        r += 1
    while VY < len(D):
        c[r] = D[VY]
        VY += 1
        r += 1
    while p < len(h):
        c[r] = h[p]
        p += 1
        r += 1