import S4.Z.*;
public class k<r,t>{
	static final int H = 1 << 2;
	wZ<r,t>[] C;
	int L;
	int YJ;
	public k() {
		YJ = H;
	}
	public k(int a5) {
		this.YJ = a5;
	}
	class wZ<r, t> {
		final int rP;
		final r N5;
		t z;
		wZ<r,t> mI;
		wZ(int rP, r N5, t z, wZ<r,t> mI) {
			this.rP = rP;
			this.N5 = N5;
			this.z = z;
			this.mI = mI;
		}
		public r DQ() {
			return N5;
		}
		public t sK() {
			return z;
		}
		public final String toString() { return N5 + "=" + z; }
		public final int hashCode() {
			return J.hashCode(N5) ^ J.hashCode(z);
		}
	}
	static final int rP(rM N5) {
		return (N5 == null) ? 0 : N5.hashCode();
	}
	public int L() {
		return L;
	}
	public boolean fh() {
		return L == 0;
	}
	@CE("unchecked")
	public t n(r N5, t z) {
		wZ<r, t> P;  int rP = rP(N5);
		if (C == null || C.X == 0) {
			C = (wZ<r, t>[]) new wZ[YJ];
		}
		int h = C.X;
		int IH = (h - 1) & rP;
		if (C[IH] == null) {
			C[IH] = new wZ<r,t>(rP, N5, z, null);
		} else {
			wZ<r, t> m;
			P = C[IH];
			if (P.rP == rP && 
					P.N5 == N5 || (N5 != null && P.N5.equals(N5))){
				m = P;
			} else {
				for (int fK = 0; ; fK++) {
					System.out.println("LinkedList: Not " + P.N5);
					m = P.mI;
					if (P.mI == null) {
						P.mI = new wZ(rP, N5, z, null);
						break;
					}
					if (m.rP == rP &&
							(m.N5 == N5 || (N5 != null && m.N5.equals(N5)))) {
						break;
					}
					P = m;
				}
			}
			if (m != null) {
				t AV = m.z;
				m.z = z;
				return AV;
			}
		}
		L++;
		return null;
	}
	public t e(rM N5) {
		int rP = rP(N5);
		int h = C.X;
		if (C != null && C.X > 0 && C[rP & (h - 1)] != null) {
			wZ<r, t> AJ = C[rP & (h - 1)];
			if (AJ.rP == rP && 
					AJ.N5 == N5 || (N5 != null && AJ.N5.equals(N5))) {
				return AJ.z;
			}
			wZ<r, t> m = AJ.mI;
			if (AJ.mI != null) {
				do {
					if (m.rP == rP &&
							m.N5 == N5 || (m.N5 != null && m.N5.equals(N5))) {
						return m.z;
					} 
				}while ((m = m.mI) != null);
			}
		}
		return null;
	}
	public boolean I(rM N5) {
		return e(N5) != null;
	}
	public t j(rM N5) {
		int rP = rP(N5);
		int h = C.X;
		int IH = rP & (h - 1);
		if (C != null && C.X > 0 && C[IH] != null) {
			wZ<r, t> K = C[IH];
			wZ<r, t> m = null; wZ<r, t> W = null;
			if (K.rP == rP && 
					K.N5 == N5 || (N5 != null && K.N5.equals(N5))) {
				W = K;
			}
			m = K.mI;
			if (K.mI != null) {
				do {
					if (m.rP == rP && 
							m.N5 == N5 || (N5 != null && m.N5.equals(N5))) {
						W = m;
						break;
					}
					K = m;
				} while ((m = m.mI) != null);
			}
			if (W != null) {
				if (W == K) {
					C[IH] = W.mI;
				} else {
					K.mI = W.mI;
				}
				L--;
				return W.z;
			}
		}
		return null;
	}
}