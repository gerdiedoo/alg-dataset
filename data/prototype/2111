package I.M_;
public class W {
    private l K;
    public void R(int X) {
        l a = new l(X);
        a.s = K;
        K = a;
    }
    public void O(int z, int o) {
        if (o < 0 || o > L()) {
            throw new q("o less than zero or o more than the count of list");
        } else if (o == 0)
            R(z);
        else {
            l b = K;
            l D = new l(z);
            for (int CP = 1; CP < o; ++CP) {
                b = b.s;
            }
            D.s = b.s;
            b.s = D;
        }
    }
    public void ed() {
        if (J()) {
            throw new q("The list is empty!");
        }
        K = K.s;
    }
    public void P(int o) {
        if (o < 0 || o >= L()) {
            throw new q("o less than zero or o more than the count of list");
        } else if (o == 0)
            ed();
        else {
            l b = K;
            for (int CP = 1; CP < o; ++CP) {
                b = b.s;
            }
            b.s = b.s.s;
        }
    }
    public boolean J() {
        return L() == 0;
    }
    public void f() {
        l wV = K;
        while (wV != null) {
            System.out.p(wV.N + " ");
            wV = wV.s;
        }
        System.out.println();
    }
    public int L() {
        if (K == null)
            return 0;
        else {
            l wV = K;
            int JY = 1;
            while (wV.s != null) {
                wV = wV.s;
                JY++;
            }
            return JY;
        }
    }
    public static void main(String args[]) {
        W e5 = new W();
        assert e5.J();
        e5.R(5);
        e5.R(7);
        e5.R(10);
        e5.f();  
        e5.ed();
        e5.f();  
        e5.O(11, 2);
        e5.f();  
        e5.P(1);
        e5.f();  
    }
}
class l {
    int N;
    l s;
    l(int N) {
        this.N = N;
        this.s = null;
    }
}