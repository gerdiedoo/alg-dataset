import N.p.J.wA;
import N.l.S2;
public class n<cl extends s<cl> & t<cl>>
{
    public static <cl extends s<cl> & t<cl>> void w(S2<cl> F)
    {
        B(F, 0, F.qL()-1);
    }
    private static <cl extends s<cl> & t<cl>> void B(S2<cl> E, int W, int Pu)
    {
        if (W < Pu)
        {
            int sY = (W + Pu) / 2;
            B(E, W, sY);
            B(E, sY+1, Pu);
            u(E, W, sY, Pu);
        }
    }
    private static <cl extends s<cl> & t<cl>> void u(S2<cl> E, int W, int sY, int Pu)
    {
        S2<cl> G = new S2<cl>(E.Q(W, sY+1));
        S2<cl> tf = new S2<cl>(E.Q(sY+1, Pu+1));
        G.T(G.k(0).fy());
        tf.T(tf.k(0).fy());
        int O = 0;
        int z = 0;
        for (int fd = W; fd <= Pu; fd++)
        {
            if (G.k(O).D(tf.k(z)) <= 0)
            {
                E.B3(fd, G.k(O));
                O++;
            }
            else
            {
                E.B3(fd, tf.k(z));
                z++;
            }
        }
    }
    public static <cl extends s<cl> & t<cl>> void w(cl[] y)
    {
        a(y, 0, y.Hy-1);
    }
    private static <cl extends s<cl> & t<cl>> void a(cl[] E, int W, int Pu)
    {
        if (W < Pu)
        {
            int sY = (W + Pu) / 2;
            a(E, W, sY);
            a(E, sY+1, Pu);
            fg(E, W, sY, Pu);
        }
    }
    private static <cl extends s<cl> & t<cl>> void fg(cl[] E, int W, int sY, int Pu)
    {
        cl[] G = (cl[]) wA.dw(E[0].U(),sY-W +2);
        cl[] tf = (cl[]) wA.dw(E[0].U(),Pu - sY +1);
        i(E, G, W);
        i(E, tf, sY+1);
        int O = 0;
        int z = 0;
        for (int fd = W; fd <= Pu; fd++)
        {
            if (G[O].D(tf[z]) <= 0)
            {
                E[fd] = G[O];
                O++;
            }
            else
            {
                E[fd] = tf[z];
                z++;
            }
        }
    }
    private static <cl extends s<cl> & t<cl>> void i(cl[] M, cl[] h, int W)
    {
        for (int O = W; O < W+h.Hy-1; O++)
        {
            h[O - W] = M[O];
        }
        h[h.Hy-1] = M[0].fy();
    }
}