import time 
def MergeSort(data, drawDataArray, sortSpeedTime):
    MergeSort2(data,0, len(data)-1, drawDataArray, sortSpeedTime)
def MergeSort2(data, left, right, drawDataArray, sortSpeedTime):
    if left < right: 
        middle = (left + right) // 2
        MergeSort2(data, left, middle, drawDataArray, sortSpeedTime)
        MergeSort2(data, middle+1, right, drawDataArray, sortSpeedTime)
        Merge(data, left, middle, right, drawDataArray, sortSpeedTime)
def Merge(data, left, middle, right, drawDataArray, sortSpeedTime):
    drawDataArray(data, getColorArray(len(data), left, middle, right))
    time.sleep(sortSpeedTime)
    leftHalf = data[left:middle+1]
    rightHalf = data[middle+1: right+1]
    leftIndex, rightIndex = 0, 0
    for dataIndex in range(left, right+1):
        if leftIndex < len(leftHalf) and rightIndex < len(rightHalf):
            if leftHalf[leftIndex] <= rightHalf[rightIndex]:
                data[dataIndex] = leftHalf[leftIndex]
                leftIndex += 1
            else: 
                data[dataIndex] = rightHalf[rightIndex]
                rightIndex += 1
        elif leftIndex < len(leftHalf):
            data[dataIndex] = leftHalf[leftIndex]
            leftIndex += 1
        else: 
            data[dataIndex] = rightHalf[rightIndex]
            rightIndex += 1
    drawDataArray(data, ["purple" if x >= left and x <= right else "red" for x in range(len(data))])
    time.sleep(sortSpeedTime)
def getColorArray(leght, left, middle, right):
    colorArray = []
    for i in range(leght):
        if i >= left and i <= right:
            if i >= left and i <= middle:
                colorArray.append("orange") 
            else: 
                colorArray.append("green") 
        else:
            colorArray.append("red") 
    return colorArray