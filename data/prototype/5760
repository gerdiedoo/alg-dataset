import random
import timeit
def n(h):
    if len(h) > 1:
        j = len(h) // 2
        HM = h[:j]
        cB = h[j:]
        n(HM)
        n(cB)
        X = 0
        k = 0
        f = 0
        while X < len(HM) and k < len(cB):
            if HM[X] < cB[k]:
                h[f] = HM[X]
                X = X + 1
            else:
                h[f] = cB[k]
                k = k + 1
            f = f + 1
        while X < len(HM):
            h[f] = HM[X]
            X = X + 1
            f = f + 1
        while k < len(cB):
            h[f] = cB[k]
            k = k + 1
            f = f + 1
        return h
def I(P, *QW, **SF):
    def _wrapped():
        return P(*QW, **SF)
    return y
if s == '__main__':
    print('Sorting list of 10 rand nums between 0-1000')
    h = []
    for X in xY(10):
        h.append(rK.randint(0, 1000))
    a = n(h)
    M = I(n, h)
    print('Time to sort 1M times:')
    print(C.timeit(M))