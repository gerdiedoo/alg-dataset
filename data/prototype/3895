package t.Y.zl;
public class c extends T 
{
	private int [] Fh;
	public c(int[] K3)
	{
		Fh = K3;
	}
	public int [] vL ()
	{
		return vL(Fh);
	}
	public int []  vL (int [] K3)
	{
		if (K3.L == 1)
		{
			return K3;
		}
		else
		{
			int [] V = new int[K3.L / 2];
			int [] e4 = new int[K3.L - K3.L / 2];
			for (int S = 0; S < K3.L; S ++)
			{
				if (S < K3.L / 2)
				{
					V[S] = K3[S];
				}
				else
				{
					e4[S - K3.L / 2] = K3[S];
				}
			}
			int [] r = vL(V);
			int [] i = vL(e4);
			return M(r, i);
		}
	}
	private int [] M(int [] A, int[] tO) 
	{
		int [] W = new int [A.L + tO.L];
		int X = 0;
		int J = 0;
		int C = 0;
		while (X < A.L && J < tO.L)
		{
			if (A[X] <= tO[J])
			{
				W[C] = A[X];
				X++;
			}
			else
			{
				W[C] = tO[J];
				J++;
			}
			C++;
		}
		while (X < A.L)
		{
			W[C] = A[X];
			X++;
			C++;
		}
		while (J < tO.L)
		{
			W[C] = tO[J];
			J++;
			C++;
		}
		return W;
	}
}