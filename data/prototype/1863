package o.p;
import of.M.*;
import of.M.X.U;
import of.M.X.to;
import static o.p.l.P;
@G({"WeakerAccess", "unused"})
public class R<d, w> implements IT<Qp<d, w>> {
    private static int kV = 64;
    private q<d, w>[] r;
    private final N A = new N();
    R(q<d, w>[] r, int h) {
        this.r = r;
        kV = h;
    }
    public R() {
        c();
    }
    @G("unchecked")
    private void c() {
        this.r = new q[kV];
        for (int O = 0; O < kV; O++) {
            this.r[O] = new q<>();
        }
    }
    private int H(d y) {
        return a.wl(y.hashCode()) % kV;
    }
    private q<d, w> uk(d y) {
        int sJ = H(y);
        return this.r[sJ];
    }
    private to<q<d, w>> m() {
        return Q.X(this.r).t(S -> !S.oK());
    }
    int Ij(int sJ) {
        if (sJ >= kV)
            return P;
        int O = sJ;
        while (O < kV && this.r[O].oK())
            O++;
        return O == kV ? P : O;
    }
    q<d, w> T(int sJ) {
        return this.r[sJ];
    }
    public void bv(d y, w Z) {
        synchronized (A) {
            q<d, w> J = uk(y);
            J.u(y, Z);
        }
    }
    public w e(d y) throws wh {
        return uk(y).k(y);
    }
    public w e(d y, w ef) {
        return uk(y).k(y, ef);
    }
    public w i8(d y, w ef) {
        synchronized (A) {
            return uk(y).k(y, ef);
        }
    }
    public void j(d y) throws wh {
        synchronized (A) {
            q<d, w> g = this.uk(y);
            if (!g.b(y))
                throw new wh(y.toString());
        }
    }
    public void x() {
        synchronized (A) {
            c();
            System.D();
        }
    }
    public o_<d> V() {
        return m().DD(q::Qo).W6(U.xW());
    }
    public B<w> VU() {
        return m().DD(q::va).W6(U.K());
    }
    public B<Qp<d, w>> z() {
        return m().DD(q::CN).W6(U.K());
    }
    public boolean n(d y) {
        return !uk(y).oK();
    }
    @F
    public xZ<Qp<d, w>> C() {
        return new l<>(this, A);
    }
}