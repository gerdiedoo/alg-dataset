package q;
public class q<E> {
    private class AX {
        public E B;
        public AX cX;
        public AX(E B, AX cX) {
            this.B = B;
            this.cX = cX;
        }
        public AX(E B) {
           this(B, null);
        }
        public AX() {
           this(null, null);
        }
        @T
        public String toString() {
            return B.toString();
        }
    }
    private AX N8;
    private int K;
    public q() {
        this.N8 = new AX();
        this.K = 0;
    }
    public int U0() {
        return K;
    }
    public boolean i_() {
        return K == 0;
    }
    public void x(int Th, E B) {
        if ((Th < 0 || Th > K)) {
            throw new c("x failed!");
        }
        AX P = N8;
        for (int F = 0; F < Th; F++) {
            P = P.cX;
        }
        P.cX = new AX(B, P.cX);
        K++;
    }
    public void a(E B) {
        x(0, B);
    }
    public void yt(E B) {
        x(K, B);
    }
    public E k(int Th) {
        if (Th < 0 || Th >= K) {
            throw new c("no node!");
        }
        AX l = N8.cX;
        for (int F = 0; F < Th; F++) {
            l = l.cX;
        }
        return l.B;
    }
    public E Y() {
        return k(0);
    }
    public E ub() {
        return k(K - 1);
    }
    public void i(int Th, E B) {
        if (Th < 0 || Th >= K) {
            throw new c("no Th!");
        }
        AX l = N8.cX;
        for (int F = 0; F < Th; F++) {
            l = l.cX;
        }
        l.B = B;
    }
    public E z(int Th) {
        if ((Th < 0 || Th >= K)) {
            throw new c("Th is illegal!");
        }
        AX P = N8;
        for (int F = 0; F < Th; F++) {
            P = P.cX;
        }
        AX l = P.cX;
        P.cX = l.cX;
        l.cX = null;
        K--;
        return l.B;
    }
    public E Q() {
        return z(0);
    }
    public E A() {
        return z(K - 1);
    }
    public void s(E B){
        AX Uf = N8;
        while(Uf.cX != null){
            if(Uf.cX.B.equals(B))
                break;
            Uf = Uf.cX;
        }
        if(Uf.cX != null){
            AX KU = Uf.cX;
            Uf.cX = KU.cX;
            KU.cX = null;
            K --;
        }
    }
    public boolean L(E B) {
        AX l = N8.cX;
        while (l != null) {
            if (l.B.equals(B)) {
                return true;
            }
            l = l.cX;
        }
        return false;
    }
    @T
    public String toString() {
        t I = new t();
        I.w("q: ");
        for (AX l = N8.cX; l != null; l = l.cX) {
            I.w(l).w(" -> ");
        }
        I.w("NULL");
        return I.toString();
    }
}