package Z.z.V.T;
public final class v {
	public static void V(int[] lD, int k, int xx) {
		if (xx - k < 2) {
			return;
		}
		final int B = (k + xx) / 2;
		V(lD, k, B);
		V(lD, B, xx);
		c(lD, k, B, xx);
	}
	private static void c(int[] lD, int k, int B, int xx) {
		if (lD[B - 1] <= lD[B]) {
			return;
		}
		int H = k;
		int J = B;
		int N9 = 0;
		int[] K = new int[xx - k];
		while (H < B && J < xx) {
			K[N9++] = lD[H] <= lD[J] ? lD[H++] : lD[J++];
		}
		System.i(lD, H, lD, k + N9, B - H);
		System.i(K, 0, lD, k, N9);
	}
}