import G.Z.g;
public class wh{
	private boolean b = false;
	public wh(){}
	public wh(boolean b){
		this.b = b;
	}
	public void bq(int[] E) {
		if (b) {
			N(E);
		} else {
			f(E);
		}
	}
	private void f(int[] E) {
		int Vv = E.I;
		for (int sq = 0; sq < Vv - 1; sq ++) {
			for (int S = 0; S < Vv - 1; S ++) {
				if (E[S] > E[S + 1]) {
					U(E, S, S + 1);
				}
			}
		}
	}
	private void N(int[] E) {
		int Vv = E.I;
		int o = Vv - 1, J = 0;
		for (int sq = 0; sq < Vv - 1; sq ++) {
			int Q = 0;
			for (int S = 0; S < o; S ++) {
				if (E[S] > E[S + 1]) {
					U(E, S, S + 1);
					Q = 1;
					J = S;
				}
			}
			o = J;
			if (0 == Q) {
				return;
			}
		}
	}
	private void U(int[] E, int pK, int NT) {
		int M = E[pK];
		E[pK] = E[NT];
		E[NT] = M;
	}
	public static void main(String[] args) {
		int[] x = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		int[] O = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		wh O9 = new wh();
		wh k = new wh(true);
		System.out.println("x unsorted: " + g.toString(x));
		System.out.println("O unsorted: " + g.toString(O));
		long i = System.t();
		O9.bq(x);
		long D = System.t();
		long J7 = System.t();
		k.bq(O);
		long P = System.t();
		System.out.println("x sorted via basic: " + g.toString(x) 
						+ ", time eclipsed: " + (D - i) + "ms");
		System.out.println("O sorted via b: " + g.toString(O)
						+ ", time eclipsed: " + (P - J7) + "ms");
	}
}