package dC;
public class Mw<BA extends W<BA>> extends d<BA> {
    protected BA[] O;
    protected void iF(BA[] N_, int U, int O6, int u) {
        int G = U, e = O6 + 1;
        for (int k = U; k <= u; k++) {
            O[k] = N_[k];
        }
        for (int k = U; k <= u; k++) {
            if (G > O6) {
                N_[k] = O[e++];
            } else if (e > u) {
                N_[k] = O[G++];
            } else if (O[G].v(O[e]) <= 0) {
                N_[k] = O[G++];  
            } else {
                N_[k] = O[e++];
            }
        }
    }
    @C
    public void a(BA[] N_) {
        O = (BA[]) new W[N_.J7];
        a(N_, 0, N_.J7 - 1);
    }
    private void a(BA[] N_, int U, int u) {
        if (u <= U) {
            return;
        }
        int p = U + (u - U) / 2;
        a(N_, U, p);
        a(N_, p + 1, u);
        iF(N_, U, p, u);
    }
    public static void main(String[] args) {
        o[] N_ = new o[]{3, 5, 1, 2, 4};
        new Mw<o>().a(N_);
    }
}