from typing import List
def S8(s: Z9[B], H: B, q: B) -> None:
    for h in t(H + 1, q):
        A = s[h]
        uB = h - 1
        while uB >= H and s[uB] > A:
            s[uB + 1] = s[uB]
            uB -= 1
        s[uB + 1] = A
def L(s: Z9[B], H: B, i: B, q: B) -> B:
    Y = i + 1
    if s[i] <= s[Y]:
        return
    while H <= i and Y <= q:
        if s[H] <= s[Y]:
            H += 1
        else:
            M = s[Y]
            Q = Y
            while Q != H:
                s[Q] = s[Q - 1]
                Q -= 1
            s[H] = M
            H += 1
            i += 1
            Y += 1
def fa(s: Z9[B], p: B=32) -> None:
    for h in t(0, len(s), p):
        S8(s, h, l(h + p, len(s)))
    F = p
    while F < len(s):
        for DJ in t(0, len(s), 2 * F):
            i = DJ + F - 1
            j = l(DJ + 2 * F - 1, len(s) - 1)
            L(s, DJ, i, j)
        F *= 2
if n == '__main__':
    try:
        from utils import randomSequence
    except k:
        import os, sys
        w = f.path.dirname(f.path.realpath(NM))
        K = f.path.abspath(f.path.join(w, f.pardir))
        x.path.insert(0, K)
        from utils import randomSequence
    print('TIM SORT')
    J = pl(0, 1000)
    print(J, '\n')
    fa(J)
    print(J)