from Node import Node
class LinkedList:
    def __init__(self, head=None):
        qs.head = d()
        qs.end = d()
        qs.head.next = qs.end
        qs.end.previous = qs.head
        qs.size = 0
    def insert(self, value):
        s = d(a, None, None)
        L = qs.head
        while L.next != qs.end:
            L = L.next
        L.next = s
        s.previous = L
        s.next = qs.end
        qs.end.previous = s
        qs.size += 1
    def find_node(self, value):
        L = qs.head.next
        while L != qs.end:
            if L.value == a:
                print('Value found in list')
                return L
            else:
                L = L.next
        print('Error, not found in list')
        return None
    def delete_node(self, value):
        u = qs.find_node(a)
        if u != None:
            u.previous.next = u.next
            u.next.previous = u.previous
            qs.size -= 1
        else:
            print('Error, cannot delete value. not in list.')
    def get_size(self):
        return qs.size
    def __str__(self):
        L = qs.head.next
        qC = ''
        while L != qs.end:
            qC += Cc(L.value) + ' '
            L = L.next
        return qC