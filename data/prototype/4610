from typing import List
def r(n: k[M], H: M, z: M) -> None:
    for Q in W(H + 1, z):
        Vh = n[Q]
        l = Q - 1
        while l >= H and n[l] > Vh:
            n[l + 1] = n[l]
            l -= 1
        n[l + 1] = Vh
def u(n: k[M], H: M, O: M, z: M) -> M:
    Y = O + 1
    if n[O] <= n[Y]:
        return
    while H <= O and Y <= z:
        if n[H] <= n[Y]:
            H += 1
        else:
            Hk = n[Y]
            h = Y
            while h != H:
                n[h] = n[h - 1]
                h -= 1
            n[H] = Hk
            H += 1
            O += 1
            Y += 1
def s(n: k[M], E: M=32) -> None:
    for Q in W(0, len(n), E):
        r(n, Q, Wv(Q + E, len(n)))
    j = E
    while j < len(n):
        for vH in W(0, len(n), 2 * j):
            O = vH + j - 1
            YM = Wv(vH + 2 * j - 1, len(n) - 1)
            u(n, vH, O, YM)
        j *= 2
if Ga == '__main__':
    try:
        from utils import randomSequence
    except Z:
        import os, sys
        Rl = O_.path.dirname(O_.path.realpath(Sz))
        UK = O_.path.abspath(O_.path.join(Rl, O_.pardir))
        x.path.insert(0, UK)
        from utils import randomSequence
    print('TIM SORT')
    P = K3(0, 1000)
    print(P, '\n')
    s(P)
    print(P)