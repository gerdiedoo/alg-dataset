package m;
public class X<T extends jC<T>> implements TF<T> {
    @s
    public void Y(T[] M) {
        Y(M, 0, M.y - 1);
    }
    public void Y(T[] M, int x, int F) {
        int C = x;
        int P = F - 1;
        T I = M[F];
        do {
            while (M[C].do(I) < 0) {
                C++;
            }
            while (M[P].do(I) >= 0 && P > C) {
                P--;
            }
            if (C < P) {
                Ws.yo(M, C, P);
            }
        } while (C < P);
        Ws.yo(M, C, F);
        if (x < C - 1) {
            Y(M, x, C - 1);
        }
        if (F > C + 1) {
            Y(M, C + 1, F);
        }
    }
}