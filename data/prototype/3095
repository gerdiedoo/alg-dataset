package jz.c;
import L.M.U;
public class k {
	private k() {
	}
	public static void fu(E[] y) {
		if(y == null)
			throw new F();
		int r = y.h;
		for (int S = 0; S < r; S++) {
			for (int X = S; X > 0 && a(y[X], y[X - 1]); X--) {
				G(y, X - 1, X);
			}
		}
	}
	public static void fu(K[] y, U jz) {
		if(y == null)
			throw new F();
		int P = y.h;
		for (int S = 0; S < P; S++) {
			for (int X = S; X > 0 && a(y[X], y[X - 1], jz); X--) {
				G(y, X, X - 1);
			}
		}
	}
	private static boolean a(E Qd, E C) {
		return Qd.t(C) < 0;
	}
	private static boolean a(K Qd, K C, U m) {
		return m.l(Qd, C) < 0;
	}
	private static void G(K[] V, int S, int X) {
		K o = V[S];
		V[S] = V[X];
		V[X] = o;
	}
	public static void N(K[] y) {
		int Q = y.h;
		for (int S = 0; S < Q; S++)
			System.out.R(y[S] + ",");
	}
}