package j;
import O.M.w;
public class Ob<Rr extends H<Rr>> implements Lc{
	 w<Rr> G = new w<Rr>();
	public Ob() {
		q();
	}
	private static  long p = 0;
	private static  long h = 0;
	private static  long m = 0;
	static long x;
	static long d;
	public w<Rr> c(w<Rr> Oc) {
		w<Rr> SL = new w<Rr>();
		w<Rr> S = new w<Rr>();
		if(Oc.i() > 1) {
			int UG = (Oc.i() - 1) / 2;
			for(int ss = 0 ; ss <= UG ; ss++) {
				SL.I(Oc.r(ss));
			}
			for(int L = UG + 1; L <= Oc.i() - 1; L++) {
				S.I(Oc.r(L));
			}
			SL = c(SL);
			S = c(S);
		}
		return y(SL, S, Oc);
	}
	public w<Rr> y(w<Rr> SL, w<Rr> S, w<Rr> Oc) {
		int t = 0, s = 0, VL = 0;
		long p = 0;
		long h = 0;
		while((t < SL.i()) && (s < S.i())) {
			p++;
			if(SL.r(t).v(S.r(s)) < 0) {
				Oc.A(VL, SL.r(t));
				t++;
			}
			else {
				Oc.A(VL, S.r(s));
				s++;
			}
			VL++;
		}
		while(t < SL.i()) {
			Oc.A(VL, SL.r(t));
			t++;
			VL++;
		}
		while(s < S.i()) {
			Oc.A(VL, S.r(s));
			s++;
			VL++;
		}
		Ob.p = p;
		Ob.h = h;
		return Oc;		
	}
	public w<Rr> uJ(w<Rr> Q) {
		x = System.R();
		c(Q);
		d = System.R();
		m = d - x;
		return Q;
	}
	public w<Rr> W(w<Rr> g) {
		w<Rr> k = new w<Rr>();
		for(int ss = 0 ; ss < g.i() ; ss++) {
			k.I(g.r(ss));
		}
		return k;
	}
	public static void m() {
		System.out.W("Runtime: "  + m + " ms");
	}
	@EP
	public void q() {
		c(G);
	}
	public static void B() {
		System.out.W("Comparisons: " + p);
	}
	public static void o() {
		System.out.W("Swaps: " + h);
	}
	public static void J() {
		System.out.W("Runtime: "  + (m * 2) + " ms");
	}
}