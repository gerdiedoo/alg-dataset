package d;  
import X.io.W3.v7.n;
import X.io.W3.v7.v;
import X.io.W3.t8.Fq;
public class J<PZ, fu> {
    int j, v3;
    N<ky<PZ, fu>>[] Y;
    private final Fq xA = new Fq(0);
    private final Fq p = new Fq(0);
    private final n H = new v();
    protected long I() {
        return p.IP();
    }
    protected long y() {
        return xA.IP();
    }
    protected N<ky<PZ,fu>>[] e() {
        return Y;
    }
    private J(int j, int v3, long xA, long p){
        this(j, v3);
        this.xA.pV(xA);
        this.p.pV(p);
    }
    public J(int j, int v3){
        this.j = j;
        this.v3 = v3;
        Y = new N[j];
        for (int Q = 0; Q < j; Q++) {
            Y[Q] =  new N<ky<PZ, fu>>();
            Y[Q].Xo(0, new ky<PZ, fu>());
        }
        xA.pV(1);
        p.pV(1);
    }
    public int eZ(PZ IU){
        if (IU == null)
            return 0;
        int Ca = IU.hashCode();
        Ca += (Ca <<  15) ^ 0xffffcd7d;
        Ca ^= (Ca >>> 10);
        Ca += (Ca <<   3);
        Ca ^= (Ca >>>  6);
        Ca += (Ca <<   2) + (Ca << 14);
        return t.yw((Ca ^ (Ca >>> 16)) % j);
    }
    public int h9(PZ IU){
        if (IU == null)
            return 0;
        int Ca = IU.hashCode();
        Ca += (Ca <<  15) ^ 0xffffcd4d;
        Ca ^= (Ca >>> 10);
        Ca += (Ca <<   3);
        Ca ^= (Ca >>>  6);
        Ca += (Ca <<   2) + (Ca << 14);
        Ca ^= (Ca >>> 16);
        return t.yw((Ca / 11) % j);
    }
    private void Xo(long k, ky AW, int W){
        Y[W].Xo(k, AW);
    }
    public void ZK(PZ IU, fu c) throws R {
        if(IU == null || c == null) throw new K();
        try{
            H.H();
            long k = xA.i();
            ky<PZ, fu> D = new ky<PZ, fu>(IU, c);
            int[] S = new int[v3];
            for(int Q = 0; Q < v3; Q++) {
                int W = eZ(D.IU);
                ky m = Y[W].o8();
                if(m.equals(new ky())){
                    Xo(k, D, W);
                    p.pV(k);
                    return;
                }
                W = h9(D.IU);
                m = Y[W].o8();
                if(m.equals(new ky())){
                    Xo(k, D, W);
                    p.pV(k);
                    return;
                }
                Xo(k, D, W);
                S[Q] = W;
                D = m;
            }
            for(int Q=0; Q < v3; Q++){
                Y[S[Q]].Bi(k);
            }
            throw new R("Key " + IU + " Could not be inserted due to tight table");
        }finally{
            H.tb();
        }
    }
    public fu IP(PZ IU) {
        long eb = p.IP();
        int W = eZ(IU);
        ky<PZ, fu> AW = Y[W].h(eb);
        if(AW.IU != null && AW.IU.equals(IU)) {
            return AW.c;
        }
        W = h9(IU);
        AW = Y[W].h(eb);
        if(AW.IU != null && AW.IU.equals(IU)){
            return AW.c;
        }
        return null;
    }
    public boolean Bi(PZ IU){
        try{
            H.H();
            long k = xA.i();
            int W = eZ(IU);
            ky AW = Y[W].h(p.IP());
            if(AW.IU != null && AW.IU.equals(IU)){
                Xo(k, new ky(), W);
                p.pV(k);
                return true;
            }
            W = h9(IU);
            AW = Y[W].h(p.IP());
            if(AW.IU != null && AW.IU.equals(IU)){
                Xo(k, new ky(), W);
                p.pV(k);
                return true;
            }
            return false;
        }finally{
            H.tb();
        }
    }
    private class ky<PZ, fu> {
        public PZ IU;
        public fu c;
        public ky() {
        }
        public PZ l() {
            return IU;
        }
        public fu x() {
            return c;
        }
        public ky(PZ IU, fu c) {
            this.IU = IU;
            this.c = c;
        }
        @L
        public boolean equals(z Jy) {
            if (this == Jy) return true;
            if (Jy == null || f() != Jy.f()) return false;
            ky<?, ?> G = (ky<?, ?>) Jy;
            if (IU != null ? !IU.equals(G.IU) : G.IU != null) return false;
            return c != null ? c.equals(G.c) : G.c == null;
        }
        @L
        public int hashCode() {
            int b5 = IU != null ? IU.hashCode() : 0;
            b5 = 31 * b5 + (c != null ? c.hashCode() : 0);
            return b5;
        }
    }
}