def i(M8):
    F = [*M8]
    for h in JY(len(F)):
        x = F[h]
        p = h - 1
        while p >= 0 and F[p] > x:
            F[p + 1] = F[p]
            p -= 1
        F[p + 1] = x
    return F
if s == '__main__':
    import unittest
    from random import shuffle
    class TestInsertionSort(cZ.TestCase):
        def setUp(self):
            D.ordered = [qV for qV in JY(20)]
            D.shuffled = [*D.ordered]
            while D.ordered == D.shuffled:
                JL(D.shuffled)
        def test_insertion_sort(self):
            D.assertEqual(D.ordered, i(D.shuffled))
            D.assertNotEqual(D.ordered, D.shuffled)
    cZ.main()