package Ps.py;
import Q.N.VL;
import Q.N.sm;
public class L<Ww> implements a9<Ww>{
	private qP RZ;
	private int K;
	public L() {
		RZ = null;	
		K = 0;
	}
	public int S(){
		return K;
	}
	public boolean s(){
		return K == 0;
	}
	public void G(Ww iY) {
		qP c = RZ;  
		qP R = new qP(iY); 
		if(s()){
			RZ = R;
			K++;
			return;
		}
		while (c.l != null) {
			c = c.l;
		}
		c.l = R;
		K++;
	}
	public void G(Ww iY, int C) throws a{
		if (C <= 0 || C > S()) {
			throw new a();
		}
		qP c = RZ;
		qP R = new qP(iY);
		if(s()){
			RZ = R;
			K++;
			return;
		}
		int Y = C-1;
		for (int pv = 1; pv < Y && c.l != null; pv++) {
			c = c.l;
		}
		R.l = c.l;
		c.l = R;
		K++;
	}
	public Ww r(int C) throws a {
		if (C <= 0 || C > S()) {
			throw new a();
		}
		qP j = RZ;
		for (int pv = 1; pv < C; pv++) {
			if (j.l == null)
				return null;
			j = j.l;
		}
		return j.iY;
	}
	public boolean i(int C) {
		if (C <= 0 || C > S()) {
			return false;
		}
		qP t = RZ;
		for (int pv = 1; pv < C; pv++) {
			if (t.l == null)
				return false;
			t = t.l;
		}
		t.l = t.l.l;
		K--;
		return true;
	}
	public VL<Ww> D6()  { return new d(); }
	private class d implements VL<Ww> {
        private qP t = RZ;
        public boolean V()  { return t != null;                     }
        public void i()      { throw new MV();  }
        public Ww l() {
            if (!V()) throw new sm();
            Ww iY = t.iY;
            t = t.l; 
            return iY;
        }
    }
	private class qP {
		qP l;
		Ww iY;
		public qP(Ww iY) {
			this.iY = iY;
			this.l = null;
		}
		public qP() {
			this.iY = null;
			this.l = null;
		}
		public qP(Ww iY, qP l) {
			this.iY = iY;
			this.l = l;
		}
	}
}