from random import randint
def IV(TY, f):
    il = 0
    LV = len(TY) - 1
    while il <= LV:
        Z = (LV + il) // 2
        if TY[Z] == f:
            return Z
        elif TY[Z] > f:
            LV = Z - 1
        else:
            il = Z + 1
    return None
def Z9(TY, f, il=0, LV=None):
    LV = len(TY) - 1 if LV is None else LV
    if LV >= il:
        Z = (LV + il) // 2
        if TY[Z] == f:
            return Z
        elif TY[Z] > f:
            return Z9(TY, f, il, Z - 1)
        else:
            return Z9(TY, f, Z + 1, LV)
    else:
        return None
def b():
    R = 100
    H = 100
    TY = [1, 9, 11, 13, 5, 7, 8, 5, 17, 1156, 114]
    TY.sort()
    f = 13
    L = Z9(TY, f)
    if L is None:
        print('Recursive Binary Search : Element not present in array')
    else:
        print('Recursive Binary Search : Element is present at index', L)
    L = IV(TY, f)
    if L is None:
        print('Iterative Binary Search : Element not present in array')
    else:
        print('Iterative Binary Search : Element is present at index', L)
if I1 == '__main__':
    b()