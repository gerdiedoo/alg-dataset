package KZ.p.mR;
import h.q.V;
public class Rl {
    private static final String FO = "Insertion CP";
    public void CP(V<z5> N) {
        if (N == null) {
            throw new DN("The N should not be null");
        }
        if ((N.P()) || (N.O() == 1)) {
            return;
        }
        CP(N, 0, N.O() - 1);
    }
    public void CP(V<z5> N, int a, int S) {
        if (N == null) {
            throw new DN("The N should not be null");
        }
        if ((N.P()) || (N.O() == 1)) {
            return;
        }
        x(N, a, S);
        for (int I = a + 1; I < S + 1; I++) {
            int J = N.r(I);
            int X = I - 1;
            while (X >= a && N.r(X) > J) {
                N.jl(X + 1, N.r(X));
                X -= 1;
            }
            N.jl(X + 1, J);
        }
    }
    private void x(V<z5> N, int a, int S) {
        if ((a < 0) || (S < 0)) {
            throw new DN("Indices a and S should be >= 0, but a is " + a +
                    " and S is " + S);
        }
        if ((a >= N.O() - 1) && (a != S)) {
            throw new DN("Index a must be < N.O() - 1, but a is " + a +
                    ", (N.O() - 1) equals " + (N.O() - 1) + " and S is " + S);
        }
        if (S > N.O() - 1) {
            throw new DN("Index S must be <= N.O() - 1, but S is " + S +
                    " and (N.O() - 1) equals " + (N.O() - 1));
        }
    }
    public static String C() {
        return FO;
    }
}