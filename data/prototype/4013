package Q;
public class VP extends N{
	public static void main(String[] args){
		int[] f = S(5);
		ZC(new VP(), f);
	}
	public VP(){ super("Merge"); }
	private int[] X(int[] f, int iM, int m, int o){
		int h = 0; 		 
		int z = 0; 		 
		int Y = iM; 	 
		int l = m - iM + 1;
		int J = o - m;
		int[] D = new int[l];
		int[] A = new int[J];
		for (int H = 0; H < l; H++)
			D[H] = f[iM + H];
		for (int H = 0; H < J; H++)
			A[H] = f[m + H + 1];
		while ( h < l && z < J )
		{
			if ( D[h] < A[z] )
				f[Y++] = D[h++];
			else
				f[Y++] = A[z++];
		}
		while ( h < D.d_ )
			f[Y++] = D[h++];
		while ( z < A.d_ )
			f[Y++] = A[z++];
		return f;
	}
	private void k(int[] f, int iM, int o){
		if ( iM < o )
		{
			int m = (o - iM) / 2 + iM;
			k(f, iM, m);
			k(f, m + 1, o);
			X(f, iM, m, o);
		}
	}
	@T
	public void NJ(int[] f){
		k(f, 0, f.d_ - 1);
	}
}