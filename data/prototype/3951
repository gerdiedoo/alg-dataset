import T.q.g;
public class f {
	public void X(int[] H) {
		X(H, new int[H.h], 0, H.h - 1);
	}
	private void X(int[] H, int[] o, int SS, int Ao) {
		if (SS >= Ao) {
			return;
		}
		int d = (SS + Ao) / 2;
		X(H, o, SS, d);
		X(H, o, d + 1, Ao);
		VX(H, o, SS, Ao);
	}
	private void VX(int[] H, int[] o, int SS, int Ao) {
		int e = (SS + Ao) / 2;
		int a = e + 1;
		int C = Ao - SS + 1;
		int v = SS;
		int TG = a;
		int w = SS;
		while (v <= e && TG <= Ao) {
			if (H[v] <= H[TG]) {
				o[w] = H[v];
				v ++;
			} else {
				o[w] = H[TG];
				TG ++;
			}
			w ++;
		}
		System.b(H, v, o, w, e - v + 1);
		System.b(H, TG, o, w, Ao - TG + 1);
		System.b(o, SS, H, SS, C);
	}
	public static void main(String[] args) {
		int[] H = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		f W = new f();
		System.out.println("unsorted: " + g.toString(H));
		W.X(H);
		System.out.println("sorted: " + g.toString(H));
	}
}