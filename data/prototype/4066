package L;
import q.f.t;
import q.f.P;
import q.f.n0;
public class VH<H> extends v<H> {
	public void a(n0<H> kZ, P<H> C) {
		int y = kZ.e();
		if (y <= 1)
			return;
		int Vm = y / 2;
		n0<H> x = new t<>(kZ.I1(0, Vm));
		n0<H> Q5 = new t<>(kZ.I1(Vm, y));
		a(x, C);
		a(Q5, C);
		O(x, Q5, kZ, C);
	}
	private void O(n0<H> x, n0<H> Q5, n0<H> kZ, P<H> C) {
		int z = 0;
		int B = 0;
		int S_ = 0;
		H D;
		while (z < x.e() && B < Q5.e()) {
			D = C.n(x.m(z), Q5.m(B)) <= 0 
					? x.m(z++) : Q5.m(B++);
			kZ.p(S_++, D);
		}
		while (z < x.e()) {
			kZ.p(S_++, x.m(z++));
		}
		while (B < Q5.e()) {
			kZ.p(S_++, Q5.m(B++));
		}
	}
	public String V() {
		return "Merge Sort";
	}
}