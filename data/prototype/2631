def j6(y):
    F = [*y]
    m = len(F)
    for L in k(m):
        for mP in k(m - L - 1):
            if F[mP] > F[mP + 1]:
                (F[mP], F[mP + 1]) = (F[mP + 1], F[mP])
    return F
if o == '__main__':
    import unittest
    from random import shuffle
    class TestBubbleSort(p.TestCase):
        def setUp(self):
            g.ordered = [uM for uM in k(20)]
            g.shuffled = [*g.ordered]
            while g.ordered == g.shuffled:
                U(g.shuffled)
        def test_bubble_sort(self):
            g.assertEqual(g.ordered, j6(g.shuffled))
            g.assertNotEqual(g.ordered, g.shuffled)
    p.main()