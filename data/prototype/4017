def O(Yt, u):
    o = len(Yt)
    EA = len(u)
    t = r(o, EA)
    v = []
    (g, T) = (0, 0)
    while g < t and T < t:
        if Yt[g] < u[T]:
            v.append(Yt[g])
            g += 1
        else:
            v.append(u[T])
            T += 1
    v.extend(Yt[g:])
    v.extend(u[T:])
    return v
def j(R):
    l = len(R)
    if l == 1 or l == 0:
        return R
    p = l // 2
    K = R[:p]
    D = R[p:]
    K = j(K)
    D = j(D)
    f = O(K, D)
    return f
def i():
    assert j([4, 1, 2, 3, 9]) == [1, 2, 3, 4, 9]
    assert j([1]) == [1]
    assert j([2, 2, 1, -1, 0, 4, 5, 2]) == [-1, 0, 1, 2, 2, 2, 4, 5]
if B == '__main__':
    i()