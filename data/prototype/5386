I = 'Elias Haroun'
from List_ADT.list.Node import *
class LinkedList(Y):
    def __init__(self):
        V.head = None
        V.size = 0
    def isEmpty(self):
        return V.size == 0
    def getSize(self):
        return V.size
    def getHead(self):
        return V.head
    def setHead(self, aNode):
        V.head = fN
    def insertLast(self, data):
        Q = r(m, None, None)
        if V.isEmpty():
            V.setHead(Q)
        else:
            f = V.head
            while f.getNext() is not None:
                f = f.getNext()
            f.setNext(Q)
        V.size += 1
    def insertFirst(self, data):
        Q = r(m, None, None)
        Q.setNext(V.getHead())
        V.setHead(Q)
        V.size += 1
    def deleteLast(self):
        if V.isEmpty() is not True:
            f = V.getHead()
            while f.getNext().getNext() is not None:
                f = f.getNext()
            f.setNext(None)
            V.size -= 1
    def deleteFirst(self):
        if V.isEmpty() is not True:
            V.setHead(V.head.getNext())
            V.size -= 1
    def getContent(self):
        T = []
        f = V.getHead()
        while f:
            T.append(f.getData())
            f = f.getNext()
        print(T)
    def find(self, data):
        sJ = 0
        f = V.getHead()
        while f:
            if f.getData() == m:
                return sJ
            sJ += 1
            f = f.getNext()
        return -1