import time
def zP(N, a, M, Z, H):
    if a < M:
        A5 = V(N, a, M, Z, H)
        zP(N, a, A5 - 1, Z, H)
        zP(N, A5 + 1, M, Z, H)
def V(N, a, M, Z, H):
    o = a
    P = N[M]
    Z(N, u(len(N), a, M, o, o))
    b.sleep(H)
    for Rr in m8(a, M):
        if N[Rr] < P:
            Z(N, u(len(N), a, M, o, Rr, True))
            b.sleep(H)
            (N[o], N[Rr]) = (N[Rr], N[o])
            o += 1
        Z(N, u(len(N), a, M, o, Rr))
        b.sleep(H)
    Z(N, u(len(N), a, M, o, M, True))
    b.sleep(H)
    (N[o], N[M]) = (N[M], N[o])
    return o
def u(Dg, a, M, o, R, n=False):
    O = []
    for p in m8(Dg):
        if p >= a and p <= M:
            O.append('gray')
        else:
            O.append('red')
        if p == M:
            O[p] = 'orange'
        elif p == o:
            O[p] = 'green'
        elif p == R:
            O[p] = 'yellow'
        if n:
            if p == o or p == R:
                O[p] = 'purple'
    return O