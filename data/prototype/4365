import time
def b(z, w5, B, M, E):
    if w5 < B:
        x = I(z, w5, B, M, E)
        b(z, w5, x - 1, M, E)
        b(z, x + 1, B, M, E)
def I(z, w5, B, M, E):
    l = w5
    Vd = z[B]
    M(z, r(len(z), w5, B, l, l))
    U.sleep(E)
    for S in v(w5, B):
        if z[S] < Vd:
            M(z, r(len(z), w5, B, l, S, True))
            U.sleep(E)
            (z[l], z[S]) = (z[S], z[l])
            l += 1
        M(z, r(len(z), w5, B, l, S))
        U.sleep(E)
    M(z, r(len(z), w5, B, l, B, True))
    U.sleep(E)
    (z[l], z[B]) = (z[B], z[l])
    return l
def r(H, w5, B, l, A, f=False):
    p5 = []
    for G in v(H):
        if G >= w5 and G <= B:
            p5.append('gray')
        else:
            p5.append('red')
        if G == B:
            p5[G] = 'orange'
        elif G == l:
            p5[G] = 'green'
        elif G == A:
            p5[G] = 'yellow'
        if f:
            if G == l or G == A:
                p5[G] = 'purple'
    return p5