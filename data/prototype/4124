package o;
import Q.T.M;
import Yu.h;
import Yu.Y;
public class Ul {
	public static void l3(byte[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(byte[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(byte[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		byte c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(byte[] H, int A, int O) {
		byte F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(char[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(char[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(char[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		char c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(char[] H, int A, int O) {
		char F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(short[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(short[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(short[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		short c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(short[] H, int A, int O) {
		short F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(int[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(int[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(int[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		int c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(int[] H, int A, int O) {
		int F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(long[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(long[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(long[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		long c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(long[] H, int A, int O) {
		long F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(float[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(float[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(float[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		float c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(float[] H, int A, int O) {
		float F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(double[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(double[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	private static int G(double[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		double c = H[aQ];	
		while(e < I) {
			while(H[I] > c) --I;
			while(H[e] <= c && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static void k(double[] H, int A, int O) {
		double F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static <eM> void l3(eM[] H, M<? super eM> d) {
		if(d == null) {
			l3(H);
		}
		else {
			Uq(H, 0, H.i - 1, d);
		}
	}
	public static void l3(L[] H) {
		Uq(H, 0, H.i - 1);
	}
	private static void Uq(L[] H, int e, int I) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I);	
		Uq(H, e, c - 1);
		Uq(H, c + 1, I);
	}
	@w({ "rawtypes", "unchecked" })
	private static int G(L[] H, int aQ, int C) {
		int e = aQ;
		int I = C;
		a c = ((a) H[aQ]);	
		while(e < I) {
			while(c.W(H[I]) < 0) --I;
			while(c.W(H[e]) >= 0 && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static <eM> void Uq(eM[] H, int e, int I, M<? super eM> d) {
		if(e >= I) {
			return;
		}
		int c = G(H, e, I, d);	
		Uq(H, e, c - 1, d);
		Uq(H, c + 1, I, d);
	}
	private static <eM> int G(eM[] H, int aQ, int C, M<? super eM> d) {
		int e = aQ;
		int I = C;
		eM c = H[aQ];
		while(e < I) {
			while(d.z(c, H[I]) < 0) --I;
			while(d.z(H[e], c) <= 0 && e < I) ++e;
			k(H, e, I);
		}
		k(H, aQ, e);
		return e;
	}
	private static <eM> void k(eM[] H, int A, int O) {
		eM F = H[A];
		H[A] = H[O];
		H[O] = F;
	}
	public static void l3(byte[] H, boolean V) {
		if(V) {
			tu[] uY = h.az(H);
			l3(uY, Y.hr());
			h.q(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(char[] H, boolean V) {
		if(V) {
			r[] uY = h.J(H);
			l3(uY, Y.hr());
			h.D(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(short[] H, boolean V) {
		if(V) {
			x[] uY = h.jw(H);
			l3(uY, Y.hr());
			h.u(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(int[] H, boolean V) {
		if(V) {
			B[] uY = h.s(H);
			l3(uY, Y.hr());
			h.NS(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(long[] H, boolean V) {
		if(V) {
			b[] uY = h.wI(H);
			l3(uY, Y.hr());
			h.K(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(float[] H, boolean V) {
		if(V) {
			y[] uY = h.m(H);
			l3(uY, Y.hr());
			h.p(uY, H);
		}
		else {
			l3(H);
		}
	}
	public static void l3(double[] H, boolean V) {
		if(V) {
			v[] uY = h.kC(H);
			l3(uY, Y.hr());
			h.j(uY, H);
		}
		else {
			l3(H);
		}
	}
}