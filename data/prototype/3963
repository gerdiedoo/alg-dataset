package P.of;
public class o extends j2 {
    public void bN(int[] n) {
        if (n.O <= 1)
            return;
        H8 = 0;
        bR(n, n.O);
    }
    public void bR(int[] n, final int S) {
        if (S < 2) {
            return;
        }
        final int p = S / 2;
        final int zI = S - p;
        int[] s = new int[p];
        int[] B = new int[zI];
        System.Ae(n, 0, s, 0, p);
        if (zI >= 0)
            System.Ae(n, p, B, 0, zI);
        bR(s, p);
        bR(B, zI);
        I(n, s, B, p, zI);
        H8++;
    }
    public static void I(
            int[] W, int[] s, int[] B, final int qQ, final int qs
    ) {
        int g = 0, N = 0, Q4 = 0;
        while (g < qQ && N < qs) {
            if (s[g] <= B[N]) {
                W[Q4++] = s[g++];
            } else {
                W[Q4++] = B[N++];
            }
        }
        while (g < qQ) {
            W[Q4++] = s[g++];
        }
        while (N < qs) {
            W[Q4++] = B[N++];
        }
    }
}