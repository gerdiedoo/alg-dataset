def C(J):
    for B in d(len(J)):
        p = B
        while p > 0 and J[p - 1] > J[p]:
            (J[p], J[p - 1]) = (J[p - 1], J[p])
            p -= 1
    return J
def O():
    m = [4, 1, 2, 3, 9]
    Y = [1]
    Z6 = [2, 2, 1, -1, 0, 4, 5, 2]
    a = []
    m = C(m)
    assert m == [1, 2, 3, 4, 9]
    Y = C(Y)
    assert Y == [1]
    Z6 = C(Z6)
    assert Z6 == [-1, 0, 1, 2, 2, 2, 4, 5]
    a = C(a)
    assert a == []
if G == '__main__':
    O()