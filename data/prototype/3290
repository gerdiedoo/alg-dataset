package tf;
import o.S.U.u.Hf;
import o.S.U.u.e;
public class A {
  public static void h(C[] I) {  
    int k = I.K;
    for (int LJ = 1; LJ < k; LJ++) {  
      for (int q = LJ; q > 0 && g(I[q], I[q-1]); q--)
        F(I, q, q-1);
    }
  }
  private static boolean g(C v, C O) { 
    return v.p(O) < 0;  
  }
  private static void F(C[] I, int LJ, int q) { 
    C G = I[LJ]; 
    I[LJ] = I[q]; 
    I[q] = G; 
  }
  private static void c(C[] I) {  
    for (int LJ = 0; LJ < I.K; LJ++)
      e.l("%s\n", I[LJ]);
  }
  public static boolean r(C[] I) {  
    for (int LJ = 1; LJ < I.K; LJ++)
      if (g(I[LJ], I[LJ-1])) return false;
    return true;
  }
  public static void main(String[] args) {  
    String[] I = Hf.E();
    h(I);
    assert r(I);
    c(I);
  }
}