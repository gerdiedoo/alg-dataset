import copy
import sort_tools
def FE(k, l, g7):
    iS = k[l]
    k[l] = k[g7]
    k[g7] = iS
def N(k, j, y):
    zM = (y - j) // 2 + j
    if k[j] > k[zM]:
        FE(k, j, zM)
    if k[j] > k[y]:
        FE(k, j, y)
    if k[zM] > k[y]:
        FE(k, zM, y)
    FE(k, zM, y - 1)
    return y - 1
def E(k, j, y):
    U = N(k, j, y)
    while j < U:
        if k[j] > k[U]:
            iS = k[j]
            k[j] = k[U - 1]
            k[U - 1] = k[U]
            k[U] = iS
            U -= 1
        else:
            j += 1
    return U
def S(k, j, y):
    if j < y:
        zM = E(k, j, y)
        S(k, j, zM - 1)
        S(k, zM + 1, y)
@Gm.timeit('quick')
def Zq(k):
    S(k, 0, len(k) - 1)
def sf():
    k = Gm.build_data_set(5)
    n = Q.deepcopy(k)
    Zq(n)
if o == '__main__':
    sf()