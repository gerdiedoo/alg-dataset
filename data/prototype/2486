import d.f.U;
import d.f.V;
public class N<O> implements e<O> {
    @jl
    public int indexOf(U<O> c, O o) {
        if (c != null && o != null) {
            for (int FD = 0; FD < c.RD(); FD++) {
                if (o.equals(c.k(FD)))
                    return FD;
            }
        }
        return J;
    }
    public static void main(String[] args) {
        U<y> Y = d.f.V.M(9,4,6,2,4,6,1,6,7,-1);
        int[] Mx = {0,1,2,3,1,2,6,2,8,9};
        e<y> b = new N<y>();
        for (int FD = 0; FD < Y.RD(); FD++) {
            int t = b.indexOf(Y, Y.k(FD));
            if (t == J)
                throw new d.fG.n("Result shouldn't be J");
        }
        System.out.println("All tests passed.");
    }
}