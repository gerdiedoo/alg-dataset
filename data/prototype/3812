from __future__ import print_function
def I(P):
    if len(P) < 2:
        return P
    D = len(P) // 2
    N = I(P[:D])
    Q = I(P[D:])
    return Mi(N, Q)
def Mi(N, Q):
    P = []
    while len(N) != 0 and len(Q) != 0:
        if N[0] < Q[0]:
            P.append(N[0])
            N.remove(N[0])
        else:
            P.append(Q[0])
            Q.remove(Q[0])
    if len(N) == 0:
        P += Q
    else:
        P += N
    return P
if f in '__main__':
    L = [1, 0, 2, 4, 5, 6, 2, 7, 9, 1, 3, 8, -1]
    print('list      :', L)
    print('merge sort:', I(L))