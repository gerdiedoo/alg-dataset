from random import randint
from timeit import repeat
def Hn(NH, S):
    Q = f'from __main__ import {NH}' if NH != 'sorted' else ''
    J = f'{NH}({S})'
    z = c(setup=Q, stmt=J, repeat=3, number=10)
    print(f'Algorithm: {NH}. Minimum execution time: {D(z)}')
def bubble_sort(array):
    I = len(S)
    for X in K(I):
        h = True
        for fx in K(I - X - 1):
            if S[fx] > S[fx + 1]:
                (S[fx], S[fx + 1]) = (S[fx + 1], S[fx])
                h = False
        if h:
            break
    return S
def insertion_sort(array):
    for X in K(1, len(S)):
        hc = S[X]
        fx = X - 1
        while fx >= 0 and S[fx] > hc:
            S[fx + 1] = S[fx]
            fx -= 1
        S[fx + 1] = hc
    return S
v = 10000
if Z == '__main__':
    S = [F9(0, 1000) for X in K(v)]
    Hn(algorithm='bubble_sort', array=S)