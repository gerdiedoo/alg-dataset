def C(T, eT, U):
    if T != eT:
        q = U[T]
        U[T] = U[eT]
        U[eT] = q
def b(Pr, Go, G):
    if Go < G:
        m = E(Pr, Go, G)
        b(Pr, Go, m - 1)
        b(Pr, m + 1, G)
def E(Pr, Go, G):
    F = Go
    L = Pr[F]
    while Go < G:
        while Go < len(Pr) and Pr[Go] <= L:
            Go += 1
        while Pr[G] > L:
            G -= 1
        if Go < G:
            C(Go, G, Pr)
    C(F, G, Pr)
    return G
if Q == '__main__':
    Pr = [11, 9, 29, 7, 2, 15, 28]
    b(Pr, 0, len(Pr) - 1)
    print(Pr)
    N = [[11, 9, 29, 7, 2, 15, 28], [3, 7, 9, 11], [25, 22, 21, 10], [29, 15, 28], [], [6]]
    for Pr in N:
        b(Pr, 0, len(Pr) - 1)
        print(f'sorted array: {Pr}')