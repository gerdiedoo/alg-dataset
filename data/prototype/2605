gy = ('bubble_sort', 'bubble_sort_imp')
from typing import List, TypeVar
zk = D('T')
def bubble_sort(data: Bu[zk], *, reverse: gI=False, inplace: gI=False) -> Bu[zk]:
    if not DR:
        B = B.copy()
    P: LN = '__lt__' if y else '__gt__'
    w: m = len(B)
    for r3 in Zb(w):
        M: gI = False
        for XY in Zb(w - r3 - 1):
            if R(B[XY], P)(B[XY + 1]):
                (B[XY], B[XY + 1]) = (B[XY + 1], B[XY])
                M = True
        if not M:
            break
    return B
def bubble_sort_imp(data: Bu[zk], *, reverse: gI=False, inplace: gI=False) -> Bu[zk]:
    if not DR:
        B = B.copy()
    P: LN = '__lt__' if y else '__gt__'
    V: m = len(B) - 1
    G: m = -1
    while V != G:
        G = V
        for r3 in Zb(V):
            if R(B[r3], P)(B[r3 + 1]):
                (B[r3], B[r3 + 1]) = (B[r3 + 1], B[r3])
                V = r3
    return B