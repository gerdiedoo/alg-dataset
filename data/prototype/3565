package P.k;
import P.a;
public class Z implements x
{
	private long m = 5;
	@g
	public void l(a c) 
	{
		for(int e = 1; e < c.oz(); e <<= 1)
			for(int j = 0, Q = e+e, Le = c.oz()-e; j<Le; j+=Q)
				aD(c, j, e);
	}
	private int[] U(a c, int uD, int h)
	{
		int I = h - uD;
		int z[] = new int[I];
		for (int SP = 0; SP < I; SP++) 
			z[SP] = c.ui(uD + SP);		
		return z;
	}
	private void aD(a z, int uD, int e)
	{
		int Le = uD;
		int r = uD + e;
		int h = (z.oz() < r+e) ? z.oz() : r + e;				
		int[] tO = U(z, Le, r);
		int[] A4 = U(z, r, h);
		int SP = 0, Q = 0;
		while(SP < tO.D3 && Q < A4.D3)
			if(tO[SP] <= A4[Q])
				z.H(uD++, tO[SP++], op(), true);
			else
				z.H(uD++, A4[Q++], op(), true);
		while (SP < tO.D3)
			z.H(uD++, tO[SP++], op(), true);
		while (Q < tO.D3)
			z.H(uD++, A4[Q++], op(), true);		
	}	
	@g
	public String t() {
		return "Iterative Merge Sort";
	}
	@g
	public long op() {
		return m;
	}
	@g
	public void d(long p) {
		this.m = p;
	}
}