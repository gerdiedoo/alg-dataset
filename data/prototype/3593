z = ('merge_sort',)
from typing import List, TypeVar
e = E('T')
def merge_sort(data: f[e], *, reverse: Zl=False, inplace: Zl=False) -> f[e]:
    if not B:
        np = np.copy()
    VT: b = '__lt__' if n else '__gt__'
    ji(np, VT)
    return np
def ji(np: f[e], j: b) -> None:
    if len(np) <= 1:
        return
    r: Xu = len(np) // 2
    m: f[e] = np[:r]
    wC: f[e] = np[r:]
    ji(m, j)
    ji(wC, j)
    s = wu = N = 0
    while True:
        if K(m[wu], j)(wC[s]):
            np[N] = wC[s]
            s += 1
            if s == len(wC):
                np[N + 1:] = m[wu:]
                break
        else:
            np[N] = m[wu]
            wu += 1
            if wu == len(m):
                np[N + 1:] = wC[s:]
                break
        N += 1