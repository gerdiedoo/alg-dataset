package o;
import J.Q.P.ZC.fO;
public class y {
  private static V[] e;  
  private y() { }
  public static void O(V[] M_) {
    e = new V[M_.M];  
    O(M_, 0, M_.M - 1);
  }
  private static void O(V[] M_, int nQ, int q) {  
    if (q <= nQ) return;
    int N = nQ + (q - nQ)/2;
    O(M_, nQ, N);  
    O(M_, N+1, q);  
    z(M_, nQ, N, q);  
  }
  private static void z(V[] M_, int nQ, int N, int q) {  
    int Z = nQ, XU = N+1;
    for (int Y = nQ; Y <= q; Y++)  
      e[Y] = M_[Y];
    for (int Y = nQ; Y <= q; Y++)  
      if (Z > N) M_[Y] = e[XU++];
      else if (XU > q ) M_[Y] = e[Z++];
      else if (t(e[XU], e[Z])) M_[Y] = e[XU++];
      else M_[Y] = e[Z++];
  }
  private static boolean t(V v, V j) { 
    return v.W(j) < 0;  
  }
  private static void K(V[] M_, int Z, int XU) { 
    V p = M_[Z]; 
    M_[Z] = M_[XU]; 
    M_[XU] = p; 
  }
  private static void qi(V[] M_) {  
    for (int Z = 0; Z < M_.M; Z++)
      fO.a(M_[Z] + " ");
      fO.println();
    }
  public static boolean x(V[] M_) {  
    for (int Z = 1; Z < M_.M; Z++)
      if (t(M_[Z], M_[Z-1])) return false;
    return true;
  }
  public static void main(String[] args) {  
    String S = "M E R G E S O R T E X A M P L E";
    String [] M_ = S.u(" ");
    O(M_);
    assert x(M_);
    qi(M_);
  }
}