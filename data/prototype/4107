package dr;
import r.Y.*;
public class K <La extends H<La>> implements o<La> {
	public L<La> iv;
	Z[] B;
	public int f(La t, La uN) {
		return t.nh(uN);
	}
	public K(){
		iv = new L<La>();
	}
	@X
	public String toString(){
		String Qs = "";
		Qs += "-->";
		for (int j = 0; j < iv.d(); j++) {
			Qs += iv.k(j) + " ";
		}
		return Qs;
	}
	public void N() {
		int cU = iv.d();
		B = new Z[cU];
		UV(0, cU - 1);
	}
	private void UV(int U2, int l) {
		if (U2 < l) {
			int T = U2 + ((l - U2) / 2);
			UV(U2, T);
			UV(T + 1, l);
			n(U2, T, l);
		}
	}
	@h("unchecked")
	private void n(int U2, int T, int l) {
		for (int j = U2; j <= l; j++) {
			B[j] = iv.k(j);
		}
		int j = U2;
		int z = T + 1;
		int c = U2;
		while ((j <= T) && (z <= l)) {
			if (f((La) B[j], (La) B[z]) > 0) {
				iv.O(c, (La) B[j]);
				j++;
			} else {
				iv.O(c, (La) B[z]);
				z++;
			}
			c++;
		}
		while (j <= T) {
			iv.O(c, (La) B[j]);
			c++;
			j++;
		}
	}
}