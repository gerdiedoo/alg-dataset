import KX.h.R;
public class ok
{
    public static void main(String[] args)
    {
        U[] b = new U[] { 12, 13, 24, 10, 3, 6, 90, 70 };
        n( b, 0, b.I - 1 );
        System.out.println(R.toString(b));
    }
    public static void n(U[] c, int W, int K)
    {
        if (c == null || c.I == 0){
            return;
        }
        if (W >= K){
            return;
        }
        int i = W + (K - W) / 2;
        int s = c[i];
        int g = W, C = K;
        while (g <= C)
        {
            while (c[g] < s)
            {
                g++;
            }
            while (c[C] > s)
            {
                C--;
            }
            if (g <= C)
            {
                l (c, g, C);
                g++;
                C--;
            }
        }
        if (W < C){
            n(c, W, C);
        }
        if (K > g){
            n(c, g, K);
        }
    }
    public static void l (U b[], int x, int y)
    {
        int S = b[x];
        b[x] = b[y];
        b[y] = S;
    }
}