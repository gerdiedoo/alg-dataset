package C;
public class pt extends M{
	public static void main(String[] args){
		int[] n = A(5);
		Mf(new pt(), n);
	}
	public pt(){ super("Merge"); }
	private int[] K(int[] n, int NO, int f, int o){
		int i = 0; 		 
		int VH = 0; 		 
		int YV = NO; 	 
		int NT = f - NO + 1;
		int y = o - f;
		int[] oz = new int[NT];
		int[] p = new int[y];
		for (int iG = 0; iG < NT; iG++)
			oz[iG] = n[NO + iG];
		for (int iG = 0; iG < y; iG++)
			p[iG] = n[f + iG + 1];
		while ( i < NT && VH < y )
		{
			if ( oz[i] < p[VH] )
				n[YV++] = oz[i++];
			else
				n[YV++] = p[VH++];
		}
		while ( i < oz.N )
			n[YV++] = oz[i++];
		while ( VH < p.N )
			n[YV++] = p[VH++];
		return n;
	}
	private void c(int[] n, int NO, int o){
		if ( NO < o )
		{
			int f = (o - NO) / 2 + NO;
			c(n, NO, f);
			c(n, f + 1, o);
			K(n, NO, f, o);
		}
	}
	@j
	public void yj(int[] n){
		c(n, 0, n.N - 1);
	}
}