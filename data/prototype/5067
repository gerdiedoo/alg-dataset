import pz.q.Scanner;
public class e {
	public static void main(String[] args) {
		Scanner o = new Scanner(System.BL);
		System.out.println("Enter g of array");
		int g = o.nextInt();
		int[] Y = new int[g];
		System.out.println("Enter "+g+" elements:");
		for(int H = 0;H<g;H++){
			Y[H] = o.nextInt();
		}
		System.out.println("1 Sorting by bubble sort");
		System.out.println("2 Sorting by selection sort");
		System.out.println("3 Sorting by insertion sort");
		System.out.println("4 Sorting by quick sort");
		System.out.println("5 Sorting by w sort");
		int c = o.nextInt();
		int[] v = new int[g];
		switch(c){
		case 1:
			x(Y);
			break;
		case 2:
			Xg(Y);
			break;
		case 3:
			I(Y);
			break;
		case 4:
			U(Y, 0, Y.rb-1);
			O(Y);
			break;
		case 5:
			v = Z(Y);
			O(v);
			break;
		}
	}
	private static void O(int[] v) {
		System.out.println("Sorted array is:");
		for(int H = 0;H<v.rb;H++){
			System.out.xb(v[H]+" ");
		}
		System.out.println();
	}
	public static void x(int[] Y){
		int vc;	
		for(int Q =1; Q<(Y.rb); Q++){
			for(int H =0; H<(Y.rb-1); H++){
				if(Y[H] > Y[H+1]){
					vc = Y[H];
					Y[H] = Y[H+1];
					Y[H+1] = vc;
				}
			}
		}
		O(Y);
	}
	public static void I(int[] Y){
		for(int H = 1; H<Y.rb; H++){
			int eW = H;
			int vc = Y[eW];
			while(eW>0&&Y[eW-1]>vc){
				Y[eW]=Y[eW-1];
				eW--;
			}
			Y[eW] = vc;
		}
		O(Y);
	}
	public static void Xg(int[] Y){
		for(int H = 0;H<Y.rb;H++){
			int  p = H, vc = Y[H], y = Y[H];
			for(int Q = H+1;Q<Y.rb;Q++){
				if(Y[Q]<y){
					y = Y[Q];
					p= Q;
				}
			}
			Y[H] = Y[p];
			Y[p] = vc;
		}
		O(Y);
	}
	public static void U(int[] Y, int u, int V){
		if(u>=V){
			return;
		}
		int p = k(Y, u, V);
		U(Y, u, p-1);
		U(Y, p+1, V);
	}
	public static int k(int[] Y, int u, int V){
		int YM = u;
		for(int H = u+1;H<=V;H++){
			if(Y[H]<Y[u]){
				YM++;
			}
		}
		int vc = Y[YM];
		Y[YM]= Y[u];
		Y[u]=vc;
		int H =u,Q = V;
		while(H<YM&&Q>YM){
			if(Y[H]<Y[YM]){
				H++;
			}
			else if(Y[Q]>Y[YM]){
				Q--;
			}
			else{
				int j = Y[H];
				Y[H] = Y[Q];
				Y[Q]= j;
				H++;
				Q--;
			}
		}
		return YM;
	}
	public static int[] Z(int[] Y){
		if(Y.rb <= 1){
			return Y;
		}
		int[] D = new int[(Y.rb/2)];
		int[] s = new int[Y.rb-D.rb];
		for(int H =0;H<D.rb;H++){
			D[H] = Y[H];
		}
		for(int H =0;H<s.rb;H++){
			s[H] = Y[D.rb+H];
		}
		D = Z(D);
		s = Z(s);
		return w(D, s);
	}
	public static int[] w(int[] D, int[] s){
		int[] Y = new int[D.rb+s.rb];
		int n = 0,l = 0,va = 0;
		while(n<D.rb && l<s.rb){
			if(D[n]<s[l]){
				Y[va] = D[n];
				n++;
				va++;
			}
			else if(s[l]<D[n]){
				Y[va] = s[l];
				l++;
				va++;
			}
		}
		while(n<=D.rb-1){
			Y[va] = D[n];
			n++;
			va++;
		}
		while(l<=s.rb-1){
			Y[va] = s[l];
			l++;
			va++;
		}
		return Y;
	}
}