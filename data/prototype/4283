import u.d.A;
public class P {
	private int [] DL;
	public P(int [] DL) {
		this.DL = DL.clone();
	}
	public int [] cY(){
		fj(0, this.DL.F - 1);
		return this.DL;
	}
	private void fj(int R, int i){  
		if (R < i){
			int l = G(R, i);
			fj(R, l - 1);
			fj(l + 1, i);
		}
	}
	private int G(int R, int i){  
		int l =  ((int) (E.W() * (i - R)) + R);
		int wh = this.DL[l];
		m(l, i);
		int GV = R;
		for (int C = R; C < i; C++) {
			if (this.DL[C] < wh){
				m(GV, C);
				GV++;
			}
		}
		m(GV, i);
		return GV;
	}
	private void m(int C, int X){  
		int Z = this.DL[C];
		this.DL[C] = this.DL[X];
		this.DL[X] = Z;
	}
	public static void main(String[] args) {
		int b[] = {9,1,0,4,2,-1,5,2, 200, 99, 45, -100};
		P c = new P(b);
		System.out.println("Unsorted Array -> "+ A.toString(b));
		System.out.println("P -> "+ A.toString(c.cY()));  
	}
}