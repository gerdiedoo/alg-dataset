package com.sorting;
import java.util.Comparator;
public class Insertion {
	private Insertion() {
	}
	public static void sort(Comparable[] array) {
		if(array == null)
			throw new NullPointerException();
		int N = array.length;
		for (int i = 0; i < N; i++) {
			for (int j = i; j > 0 && less(array[j], array[j - 1]); j--) {
				exch(array, j - 1, j);
			}
		}
	}
	public static void sort(Object[] array, Comparator com) {
		if(array == null)
			throw new NullPointerException();
		int n = array.length;
		for (int i = 0; i < n; i++) {
			for (int j = i; j > 0 && less(array[j], array[j - 1], com); j--) {
				exch(array, j, j - 1);
			}
		}
	}
	private static boolean less(Comparable v, Comparable w) {
		return v.compareTo(w) < 0;
	}
	private static boolean less(Object v, Object w, Comparator c) {
		return c.compare(v, w) < 0;
	}
	private static void exch(Object[] a, int i, int j) {
		Object swap = a[i];
		a[i] = a[j];
		a[j] = swap;
	}
	public static void show(Object[] array) {
		int len = array.length;
		for (int i = 0; i < len; i++)
			System.out.print(array[i] + ",");
	}
}