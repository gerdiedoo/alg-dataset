from time import sleep
from typing import List
from tkinter import Tk
from animated import Animator
class BubbleSort(Animator):
    def sort(self, array: List[int]) -> None:
        for amt in range(len(array)):
            swaps = 0
            for i in range(len(array) - 1 - amt):  
                if array[i] > array[i + 1]:  
                    array[i], array[i + 1] = array[i + 1], array[i]
                    swaps += 1
                    self.render(array, cur=(i, i + 1))
                    sleep(0.01)
            if swaps == 0:
                break  
def main() -> int:
    try:
        from utils import randomSequence
    except ModuleNotFoundError:
        import os, sys  
        dir_path = os.path.dirname(os.path.realpath(__file__))
        parent_dir_path = os.path.abspath(os.path.join(dir_path, os.pardir))
        sys.path.insert(0, parent_dir_path)
        from utils import randomSequence
    shuffledArray = randomSequence(0, 100)
    root = Tk()
    sorter = BubbleSort(
        root,
        background="black",
        width=root.winfo_screenwidth(),
        height=root.winfo_screenheight(),
    )
    sorter.pack()
    sorter.sort(shuffledArray)
    sorter.finished()
    return 0