package N;
public class N<V> {
    private class no {
        public V q;
        public no m;
        public no(V q, no m) {
            this.q = q;
            this.m = m;
        }
        public no(V q) {
           this(q, null);
        }
        public no() {
           this(null, null);
        }
        @F
        public String toString() {
            return q.toString();
        }
    }
    private no H5;
    private int Qz;
    public N() {
        this.H5 = new no();
        this.Qz = 0;
    }
    public int F7() {
        return Qz;
    }
    public boolean J() {
        return Qz == 0;
    }
    public void u(int O, V q) {
        if ((O < 0 || O > Qz)) {
            throw new M("u failed!");
        }
        no y = H5;
        for (int L = 0; L < O; L++) {
            y = y.m;
        }
        y.m = new no(q, y.m);
        Qz++;
    }
    public void IW(V q) {
        u(0, q);
    }
    public void k(V q) {
        u(Qz, q);
    }
    public V z(int O) {
        if (O < 0 || O >= Qz) {
            throw new M("no node!");
        }
        no F_ = H5.m;
        for (int L = 0; L < O; L++) {
            F_ = F_.m;
        }
        return F_.q;
    }
    public V c() {
        return z(0);
    }
    public V R() {
        return z(Qz - 1);
    }
    public void S(int O, V q) {
        if (O < 0 || O >= Qz) {
            throw new M("no O!");
        }
        no F_ = H5.m;
        for (int L = 0; L < O; L++) {
            F_ = F_.m;
        }
        F_.q = q;
    }
    public V K(int O) {
        if ((O < 0 || O >= Qz)) {
            throw new M("O is illegal!");
        }
        no y = H5;
        for (int L = 0; L < O; L++) {
            y = y.m;
        }
        no F_ = y.m;
        y.m = F_.m;
        F_.m = null;
        Qz--;
        return F_.q;
    }
    public V i() {
        return K(0);
    }
    public V G() {
        return K(Qz - 1);
    }
    public void n(V q){
        no E = H5;
        while(E.m != null){
            if(E.m.q.equals(q))
                break;
            E = E.m;
        }
        if(E.m != null){
            no FW = E.m;
            E.m = FW.m;
            FW.m = null;
            Qz --;
        }
    }
    public boolean Q(V q) {
        no F_ = H5.m;
        while (F_ != null) {
            if (F_.q.equals(q)) {
                return true;
            }
            F_ = F_.m;
        }
        return false;
    }
    @F
    public String toString() {
        OE C = new OE();
        C.gd("N: ");
        for (no F_ = H5.m; F_ != null; F_ = F_.m) {
            C.gd(F_).gd(" -> ");
        }
        C.gd("NULL");
        return C.toString();
    }
}