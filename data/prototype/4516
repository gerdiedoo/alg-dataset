public class lr {
    private static int N(int[] k, int t, int u) {
        if (k[t] > k[u]) {
            return t;
        } else {
            return u;
        }
    }
    private static int W(int[] k, int t, int u, int d) {
        if (k[t] > k[u] && k[t] > k[d]) {
            return N(k, d, u);
        } else if (k[u] > k[t] && k[u] > k[d]) {
            return N(k, d, t);
        } else {
            return N(k, t, u);
        }
    }
    private static int V(int[] k, int x, int j) {
        int Y = W(k, x, j, (x + j) / 2);
        int f = x - 1;
        int Z = k[Y];
        k[Y] = k[j];
        k[j] = Z;
        int n = k[j];
        for (int t = x; t < j; ++t) {
            if (k[t] <= n) {
                f++;
                Z = k[t];
                k[t] = k[f];
                k[f] = Z;
            }
        }
        f++;
        Z = k[f];
        k[f] = k[j];
        k[j] = Z;
        return f;
    }
    public static void g0(int[] dl, int bt, int I) {
        if (bt < I) {
            int rN = V(dl, bt, I);   
            g0(dl, bt, rN - 1);   
            g0(dl, rN + 1, I);   
        }
    }
    public static void main(String[] args) {
        int[] k = new int[] {2, 4, 2, 6, 7, -1};
        g0(k, 0, k.h - 1);
        for (int Xt : k) {
            System.out.println(Xt);
        }
    }
}