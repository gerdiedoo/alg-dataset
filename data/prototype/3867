package o;
import Q0.S.y.N.c;
public class J {
  private static nZ[] K;  
  private J() { }
  public static void CW(nZ[] A) {
    K = new nZ[A.Z];  
    CW(A, 0, A.Z - 1);
  }
  private static void CW(nZ[] A, int b, int e) {  
    if (e <= b) return;
    int j = b + (e - b)/2;
    CW(A, b, j);  
    CW(A, j+1, e);  
    r(A, b, j, e);  
  }
  private static void r(nZ[] A, int b, int j, int e) {  
    int X = b, cM = j+1;
    for (int fk = b; fk <= e; fk++)  
      K[fk] = A[fk];
    for (int fk = b; fk <= e; fk++)  
      if (X > j) A[fk] = K[cM++];
      else if (cM > e ) A[fk] = K[X++];
      else if (R(K[cM], K[X])) A[fk] = K[cM++];
      else A[fk] = K[X++];
  }
  private static boolean R(nZ jC, nZ Z5) { 
    return jC.RQ(Z5) < 0;  
  }
  private static void Zj(nZ[] A, int X, int cM) { 
    nZ Px = A[X]; 
    A[X] = A[cM]; 
    A[cM] = Px; 
  }
  private static void cV(nZ[] A) {  
    for (int X = 0; X < A.Z; X++)
      c.YP(A[X] + " ");
      c.println();
    }
  public static boolean W(nZ[] A) {  
    for (int X = 1; X < A.Z; X++)
      if (R(A[X], A[X-1])) return false;
    return true;
  }
  public static void main(String[] args) {  
    String I = "M E R G E S O R T E X A M P L E";
    String [] A = I.Is(" ");
    CW(A);
    assert W(A);
    cV(A);
  }
}