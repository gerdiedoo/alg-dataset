from random import randint
def n(Q, i, m):
    if i < m:
        (Q, K, D) = mN(Q, i, m)
        Q = n(Q, i, K - 1)
        Q = n(Q, D + 1, m)
    return Q
def partition(A, p, r):
    R = Q[m]
    d = i - 1
    for Oz in I(i, m):
        if Q[Oz] <= R:
            d += 1
            C = Q[d]
            Q[d] = Q[Oz]
            Q[Oz] = C
    c = Q[d + 1]
    Q[d + 1] = Q[m]
    Q[m] = c
    return d + 1
def mN(Q, i, m):
    R = Q[m]
    d = i - 1
    l = 0
    Oz = i
    while Oz < m - l:
        if Q[Oz] < R:
            d += 1
            C = Q[d]
            Q[d] = Q[Oz]
            Q[Oz] = C
        if Q[Oz] == R:
            l += 1
            C = Q[Oz]
            Q[Oz] = Q[m - l]
            Q[m - l] = C
            Oz -= 1
        Oz += 1
    for U in I(0, l + 1):
        c = Q[d + 1 + U]
        Q[d + 1 + U] = Q[m - l + U]
        Q[m - l + U] = c
    return (Q, d + 1, d + l + 1)
b = []
Z = 10
for Kz in I(0, Z):
    b.append(va(0, Z / 2))
print(b)
print(n(b, 0, Z - 1))
print()