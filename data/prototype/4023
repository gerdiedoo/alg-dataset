def WI(qp, H):
    if not len(qp) or not len(H):
        return qp or H
    k = []
    (f, OC) = (0, 0)
    while len(k) < len(qp) + len(H):
        if qp[f] < H[OC]:
            k.append(qp[f])
            f += 1
        else:
            k.append(H[OC])
            OC += 1
        if f == len(qp) or OC == len(H):
            k.extend(qp[f:] or H[OC:])
            break
    return k
def iM(a):
    if len(a) < 2:
        return a
    K = N(len(a) / 2)
    qp = iM(a[:K])
    H = iM(a[K:])
    return WI(qp, H)