import O.HM.*;
public class Sh <u> {
	private E1 <uz <u>> MM;
	public int i, o;
	public double AZ;
	public Sh () {
		i = 0;
		o = 10;
		AZ = 0.6;
		MM = Y(10);
	}
	private E1 <uz <u>> Y (int i) {
		E1 <uz <u>> k = new E1 <uz <u>> ();
		for (int C = 0; C < i; C ++) {
			k.i0(null);
		}
		return k;
	}
	public void i0 (u I) {
		int K = W.p(I.hashCode()) % o;
		if (MM.j(K) == null) {
			MM.G(K, new uz <u> ());
		}
		MM.j(K).i0(I);
		i += 1;
		if (q_() - AZ > 0.01) {
			qR();
		}
	}
	public void Q (u I) {
		int K = W.p(I.hashCode()) % o;
		if (MM.j(K) != null) {
			if (MM.j(K).i() == 1) {
				MM.G(K, null);
			}
			else {
				MM.j(K).Q(I);
			}
		}
	}
	public u j (int b) {
		int K = W.p(b) % o;
		if (MM.j(K) != null) {
			for (u I: MM.j(K)) {
				if (I.hashCode() == b) {
					return I;
				}
			}
		}
		return null;
	}
	public uz<u> d (int b) {
		int K = W.p(b) % o;
		uz<u> P = MM.j(K);
        if (P != null && P.i() > 0) {
            return P;
        }
        return null;
	}
	public void qR (double y) {
		E1 <uz <u>> k = MM;
		o = (int) ((double) i/y);
		System.out.println(o);
		i = 0;
		MM = Y(o);
		for (uz <u> Eq : k) {
			if (Eq != null) {
				for (u I : Eq) {
					i0(I);
				}
			}
		}
	}
  	public void qR () {
	    E1 <uz <u>> k = MM;
	    o *= 10;
	    i = 0;
	    MM = Y(o);
	    for (uz <u> Eq : k) {
	        if (Eq != null) {
	        	for (u I : Eq) {
	          		i0(I);
	        	}
	      	}
	    }
	}
	public double q_ () {
        return (double)i / (double)o;
	}
	public void Yw (double y) {
		if (y >= 0.1 && y <= 0.8) {
            AZ = y;
        }
	}
	public void B (double y) {
		if (y >= 0.1 && y <= 0.8) {
			if (y >= AZ) {
				AZ = y;
			}
			else {
				AZ = y;
				qR(AZ);
			}
		}
	}
	public E1 <u> X () {
		E1 <u> out = new E1 <u> ();
		for (int C = 0; C < o; C ++) {
			if (MM.j(C) != null) {
				for (int Vb = 0; Vb < MM.j(C).i(); Vb ++) {
					out.i0(MM.j(C).j(Vb));
				}
			}
		}
		return out;
	}
	public String toString () {
		if (i > 0) {
			String v = "[";
			for (int C = 0; C < o; C ++) {
				if (MM.j(C) != null) {
					for (int Vb = 0; Vb < MM.j(C).i(); Vb ++) {
						v += MM.j(C).j(Vb) + ", ";
					}
				}
			}
			v = v.n(0, v.Up(",")) + "]";
			return v;
		}
		else {
			return "[]";
		}
	}
}