def quick_sort(array, start=0, end=-1):
    if end == -1:
        end = len(array) - 1
    if start < end:
        array, pivot = _partition(array, start, end)
        array = quick_sort(array, start, pivot - 1)
        array = quick_sort(array, pivot + 1, end)
    return array
def _partition(array, start, end):
    pivot_index = end
    pivot_value = array[pivot_index]
    store_index = start
    for i in range(start, end + 1):
        if array[i] < pivot_value:
            array[i], array[store_index] = array[store_index], array[i]
            store_index += 1
    array[store_index], array[end] = array[end], array[store_index]
    return array, store_index
if __name__ == '__main__':
    print quick_sort.func_doc
    array1 = [3, 2, 1]
    assert quick_sort(array1) == [1, 2, 3]
    array2 = [1, 2, 3, 5, 4]
    assert quick_sort(array2) == [1, 2, 3, 4, 5]
    array3 = range(100, 0, -1)
    assert quick_sort(array3) == range(1, 101)
    array4 = [4, 5, 7, 4, 3, 2]
    assert quick_sort(array4) == [2, 3, 4, 4, 5, 7]
    print "tests pass"