package Ps.p.P;
import j.B.S6;
public class l {
    private static final String m = "Merge V";
    public void V(S6<Ge> M) {
        if (M == null) {
            throw new Y("The M should not be null");
        }
        V(M, 0, M.h() - 1);
    }
    private void V(S6<Ge> M, int E, int bM) {
        if (E < bM) {
            int F = (int) t.Z((double) (E + bM) / 2);
            V(M, E, F);
            V(M, F + 1, bM);
            L(M, E, F, bM);
        }
    }
    public void L(S6<Ge> M, int E, int F, int bM) {
        if (M == null) {
            throw new Y("The M should not be null");
        }
        if ((M.J()) || (M.h() == 1) || (F > M.h() - 1)) {
            return;
        }
        K8(M, E, F, bM);
        S6<Ge> l6 = new S6<>(M.C(E, F + 1));
        S6<Ge> w = new S6<>(M.C(F + 1, bM + 1));
        l6.O(Ge.sY);
        w.O(Ge.sY);
        int G = 0;
        int fi = 0;
        for (int q = E; q < bM + 1; q++) {
            if (l6.K(G) < w.K(fi)) {
                M.bK(q, l6.K(G));
                G++;
            } else {
                M.bK(q, w.K(fi));
                fi++;
            }
        }
    }
    private void K8(S6<Ge> M, int E, int F, int bM) {
        if (E < 0) {
            throw new Y("E must be >= 0 but is " + E);
        }
        if (E > F) {
            throw new Y("E must be <= F, but E is " + E +
                    " and F is " + F);
        }
        if (bM > M.h() - 1) {
            throw new Y("bM must be <= M.h() - 1, but bM is " +
                    bM + " and (M.h() - 1) equals " + (M.h() - 1));
        }
        if (F > bM) {
            throw new Y("F must be <= bM, but F is " + F +
                    " and bM is " + bM);
        }
    }
    public static String Vg() {
        return m;
    }
}