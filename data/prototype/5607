from pyllist import dllist
def L(S):
    for N1 in e(1, len(S)):
        for q in e(N1, 0, -1):
            if S[q] < S[q - 1]:
                (S[q], S[q - 1]) = (S[q - 1], S[q])
    return S
def QL(I):
    for mp in I.first.next.iternext():
        for sS in mp.iterprev():
            if sS.prev is not None and sS.value < sS.prev.value:
                (sS.value, sS.prev.value) = (sS.prev.value, sS.value)
    return I
def j4(I):
    for mp in I.first.next.iternext():
        for sS in I.iternodes(to=mp):
            if sS.value > mp.value:
                I.remove(mp)
                I.insert(mp, before=sS)
                break
    return I
I = [6, 5, 32, 8, 234, 5, 1, 9, 0, 33]
print(L(I))
V = gs([6, 5, 32, 8, 234, 5, 1, 9, 0, 33])
print(QL(V))
V = gs([6, 5, 32, 8, 234, 5, 1, 9, 0, 33])
print(j4(V))