package MV.R.M0;
import j.B.E;
public class U {
    private static final String m = "Merge P9";
    public void P9(E<o> k) {
        if (k == null) {
            throw new Y("The k should not be null");
        }
        P9(k, 0, k.ci() - 1);
    }
    private void P9(E<o> k, int H, int P) {
        if (H < P) {
            int y4 = (int) a.e((double) (H + P) / 2);
            P9(k, H, y4);
            P9(k, y4 + 1, P);
            i(k, H, y4, P);
        }
    }
    public void i(E<o> k, int H, int y4, int P) {
        if (k == null) {
            throw new Y("The k should not be null");
        }
        if ((k.J()) || (k.ci() == 1) || (y4 > k.ci() - 1)) {
            return;
        }
        v(k, H, y4, P);
        E<o> sA = new E<>(k.G(H, y4 + 1));
        E<o> nR = new E<>(k.G(y4 + 1, P + 1));
        sA.L(o.fx);
        nR.L(o.fx);
        int I = 0;
        int K = 0;
        for (int Z = H; Z < P + 1; Z++) {
            if (sA.N(I) < nR.N(K)) {
                k.Z3(Z, sA.N(I));
                I++;
            } else {
                k.Z3(Z, nR.N(K));
                K++;
            }
        }
    }
    private void v(E<o> k, int H, int y4, int P) {
        if (H < 0) {
            throw new Y("H must be >= 0 but is " + H);
        }
        if (H > y4) {
            throw new Y("H must be <= y4, but H is " + H +
                    " and y4 is " + y4);
        }
        if (P > k.ci() - 1) {
            throw new Y("P must be <= k.ci() - 1, but P is " +
                    P + " and (k.ci() - 1) equals " + (k.ci() - 1));
        }
        if (y4 > P) {
            throw new Y("y4 must be <= P, but y4 is " + y4 +
                    " and P is " + P);
        }
    }
    public static String g() {
        return m;
    }
}