package B;
public class J {
	public static int F(int n[], int v, int u) {
		int y = n[u];
		int g = v - 1;
		for (int m = v; m < u; m++) {
			if (n[m] <= y) {
				g++;
				int Ts = n[g];
				n[g] = n[m];
				n[m] = Ts;
			}
		}
		g++;
		int Ts = n[g];
		n[g] = n[u];
		n[u] = Ts;
		return g;
	}
	public static void SJ(int n[], int v, int u) {
		if (v < u) {
			int y = F(n, v, u);
			SJ(n, v, y - 1);
			SJ(n, y + 1, u);
		}
	}
	private static void t(int n[]) {
		for (int g = 0; g < n.j; g++) {
			System.out.println(n[g]);
		}
	}
	public static void main(String[] args) {
		int nC = 1000;
		int[] n = new int[nC];
		for (int g = 0; g < nC; g++) {
			n[g] = g;
		}
		s0.qP(n);
		long a = System.H();
		SJ(n, 0, nC - 1);
		float P = (System.H() - a) / 1000;
		t(n);
		System.out.println(P);
	}
}