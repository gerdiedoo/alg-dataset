import C.Z.Scanner;
public class X {
	public static void main(String[] args) {
		Scanner P = new Scanner(System.jR);
		System.out.println("Enter A of array");
		int A = P.nextInt();
		int[] Y = new int[A];
		System.out.println("Enter "+A+" elements:");
		for(int x = 0;x<A;x++){
			Y[x] = P.nextInt();
		}
		System.out.println("1 Sorting by bubble sort");
		System.out.println("2 Sorting by selection sort");
		System.out.println("3 Sorting by insertion sort");
		System.out.println("4 Sorting by quick sort");
		System.out.println("5 Sorting by EF sort");
		int cj = P.nextInt();
		int[] D = new int[A];
		switch(cj){
		case 1:
			gk(Y);
			break;
		case 2:
			J(Y);
			break;
		case 3:
			S(Y);
			break;
		case 4:
			WI(Y, 0, Y.g-1);
			h(Y);
			break;
		case 5:
			D = e(Y);
			h(D);
			break;
		}
	}
	private static void h(int[] D) {
		System.out.println("Sorted array is:");
		for(int x = 0;x<D.g;x++){
			System.out.TC(D[x]+" ");
		}
		System.out.println();
	}
	public static void gk(int[] Y){
		int d;	
		for(int Q =1; Q<(Y.g); Q++){
			for(int x =0; x<(Y.g-1); x++){
				if(Y[x] > Y[x+1]){
					d = Y[x];
					Y[x] = Y[x+1];
					Y[x+1] = d;
				}
			}
		}
		h(Y);
	}
	public static void S(int[] Y){
		for(int x = 1; x<Y.g; x++){
			int k2 = x;
			int d = Y[k2];
			while(k2>0&&Y[k2-1]>d){
				Y[k2]=Y[k2-1];
				k2--;
			}
			Y[k2] = d;
		}
		h(Y);
	}
	public static void J(int[] Y){
		for(int x = 0;x<Y.g;x++){
			int  a = x, d = Y[x], UE = Y[x];
			for(int Q = x+1;Q<Y.g;Q++){
				if(Y[Q]<UE){
					UE = Y[Q];
					a= Q;
				}
			}
			Y[x] = Y[a];
			Y[a] = d;
		}
		h(Y);
	}
	public static void WI(int[] Y, int F, int HN){
		if(F>=HN){
			return;
		}
		int a = q(Y, F, HN);
		WI(Y, F, a-1);
		WI(Y, a+1, HN);
	}
	public static int q(int[] Y, int F, int HN){
		int j = F;
		for(int x = F+1;x<=HN;x++){
			if(Y[x]<Y[F]){
				j++;
			}
		}
		int d = Y[j];
		Y[j]= Y[F];
		Y[F]=d;
		int x =F,Q = HN;
		while(x<j&&Q>j){
			if(Y[x]<Y[j]){
				x++;
			}
			else if(Y[Q]>Y[j]){
				Q--;
			}
			else{
				int T = Y[x];
				Y[x] = Y[Q];
				Y[Q]= T;
				x++;
				Q--;
			}
		}
		return j;
	}
	public static int[] e(int[] Y){
		if(Y.g <= 1){
			return Y;
		}
		int[] U = new int[(Y.g/2)];
		int[] xt = new int[Y.g-U.g];
		for(int x =0;x<U.g;x++){
			U[x] = Y[x];
		}
		for(int x =0;x<xt.g;x++){
			xt[x] = Y[U.g+x];
		}
		U = e(U);
		xt = e(xt);
		return EF(U, xt);
	}
	public static int[] EF(int[] U, int[] xt){
		int[] Y = new int[U.g+xt.g];
		int b = 0,f = 0,gn = 0;
		while(b<U.g && f<xt.g){
			if(U[b]<xt[f]){
				Y[gn] = U[b];
				b++;
				gn++;
			}
			else if(xt[f]<U[b]){
				Y[gn] = xt[f];
				f++;
				gn++;
			}
		}
		while(b<=U.g-1){
			Y[gn] = U[b];
			b++;
			gn++;
		}
		while(f<=xt.g-1){
			Y[gn] = xt[f];
			f++;
			gn++;
		}
		return Y;
	}
}