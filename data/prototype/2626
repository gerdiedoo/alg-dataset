def O7(M5):
    O = [*M5]
    z = len(O)
    for bQ in si(z):
        for mz in si(z - bQ - 1):
            if O[mz] > O[mz + 1]:
                (O[mz], O[mz + 1]) = (O[mz + 1], O[mz])
    return O
if OR == '__main__':
    import unittest
    from random import shuffle
    class TestBubbleSort(Oq.TestCase):
        def setUp(self):
            f.ordered = [Y for Y in si(20)]
            f.shuffled = [*f.ordered]
            while f.ordered == f.shuffled:
                g(f.shuffled)
        def test_bubble_sort(self):
            f.assertEqual(f.ordered, O7(f.shuffled))
            f.assertNotEqual(f.ordered, f.shuffled)
    Oq.main()