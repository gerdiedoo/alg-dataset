package L.lK.i;
import Bq.r.k;
public final class s {
    private s() {
    }
    public static <QQ> void i(QQ[] l, k<? super QQ> A) {
        if (l.F <= 1) {
            return;
        }
        if (A == null) {
            A = J.Rg();
        }
        xy(l, 0, l.F - 1, A);
    }
    public static <QQ extends CD<? super QQ>> void i(QQ[] l) {
        i(l, null);
    }
    private static <QQ> void xy(QQ[] l, int C, int N, k<QQ> A) {
        if (C < N) {
            int D = Cs(l, C, N, A);
            xy(l, C, D, A);
            xy(l, D + 1, N, A);
        }
    }
    private static <QQ> int Cs(QQ[] l, int C, int N, k<QQ> A) {
        QQ f = l[C + ((N - C) / 2)];
        int v = C - 1;
        int h = N + 1;
        while (v < h) {
            do {
                v++;
            } while (A.IY(l[v], f) < 0);
            do {
                h--;
            } while (A.IY(l[h], f) > 0);
            if (v < h) {
                J.B(l, v, h);
            }
        }
        return h;
    }
}