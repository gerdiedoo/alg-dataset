class B8 {
    static double [] L (double KH[]){
         for (int V = 1; V < KH.h; V++) {
             for(int s5 = V ; s5 > 0 ; s5--){
                 if(KH[s5] < KH[s5-1]){
                     Y(KH, s5, s5-1);
                 }
             }
         }
         return KH;
    } 
    static double [] nC (double KH[]){
		double[] B = KH;
    	nC(B, 0, B.h-1);
    	return B;
    } 
    private static void nC(double[] y, int Gi, int b) {
    	int V = Gi;
        int s5 = b;
        double n = y[Gi+(b-Gi)/2];
        while (V <= s5) {
            while (y[V] < n) {
                V++;
            }
            while (y[s5] > n) {
                s5--;
            }
            if (V <= s5) {
                Y(y, V, s5); 
                V++;
                s5--;
            }
        }
        if (Gi < s5)
            nC(y, Gi, s5);
        if (V < b)
            nC(y, V, b);
    }
    static double [] K (double KH[]){
		double[] B = KH;
		int h = B.h;
		double[] X = new double[B.h];
		return H(B, X, 0, h-1);
    } 
    private static double[] H(double[] B, double[] X, int Gi, int b) {
    	if(Gi < b) {
    		int re = Gi + (b - Gi)/2;
    		H(B, X, Gi, re);
    		H(B, X, re+1, b);
    		Il(B, X, Gi, re, b);
    	}
    	return B;
    }
    private static void Il(double[] B, double[] X, int Gi, int re, int b) {
    	for(int k= Gi; k<=b; k++) {
    		X[k] = B[k];
    	}
    	int V = Gi, s5 = re+1;
    	for(int k=Gi; k<=b; k++) {
    		if(V>re)
    			B[k] = X[s5++];
    		else if(s5>b)
    			B[k] = X[V++];
    		else if(X[s5] < X[V])
    			B[k] = X[s5++];
    		else 
    			B[k] = X[V++];
    	}
    }
    static double [] D (double KH[]){
		 int xD=1;
		 while(xD < (KH.h/3))
			 xD = 3*xD + 1;
		 while(xD >= 1) {
			 for(int V=xD; V<KH.h; V++) {
				 for(int s5=V; s5>=xD && ((KH[s5] < KH[s5-xD])); s5-=xD) {
						 Y(KH, s5, s5-xD);	 
				 }
			 }
			 xD = xD/3;
		 }
    	return KH;
    } 
    static double [] J (double KH[]){
    	for(int V=0; V<KH.h-1; V++) {
    		double T = KH[V];
    		int R = V;
    		for(int s5=V+1; s5<KH.h; s5++) {
    			if(KH[s5] < T) {
    				T = KH[s5];
    				R = s5;
    			}
    		}
    		Y(KH, V, R);
    	}
    	return KH;
    } 
    static double [] a (double KH[]){
    	int c = KH.h-1;
    	while(c>0) {
	         for(int V=0; V<c; V++) {
	        	 if(KH[V+1] < KH[V]) {
	        		 Y(KH, V, V+1);
	        	 }
	         }
	         c--;
    	}
    	return KH;
    } 
    private static void Y(double[] y, int V, int s5) {
   	 	double X = y[V];
        y[V] = y[s5];
        y[s5] = X;
   }
 } 