import T.a.t;
import T.k.B;
public class V<u extends t<u>> implements o<u> {
    @i
    public void p(B<u> K) {
        if (K == null)
            return;
        p(K, 0, K.O() - 1); 
    }
    private void p(B<u> K, int Pb, int h) {
        if (Pb < h) {
            int R = I(K, Pb, h);
            p(K, Pb, R-1);
            p(K, R+1, h);
        }
    }
    private int I(B<u> K, int Pb, int h) {
        u U = K.DK(h);
        int C = Pb - 1;
        for (int De = Pb; De < h; De++) {
            if (oI(K.DK(De), U)) {
                u Z = K.DK(++C);
                K.G4(C, K.DK(De));
                K.G4(De, Z);
            }
        }
        u r = K.DK(C + 1);
        K.G4(C + 1, U);
        K.G4(h, r);
        return C + 1;
    }
    private boolean oI(u e, u b) {
        return (e.x(b) < 0);
    }
    public static void main(String[] args) {
        o<f> Wq = new zG<f>();
        B<f> D = T.k.ti.j(9,5,2,7,3,8,2,1,4,7,5,3,9);
        Wq.p(D);
        for (int C = 0; C < D.O() - 1; C++) {
            if (D.DK(C).x(D.DK(C+1)) > 0) {
                throw new T.a.c("Elems should be sorted.");
            }
        }
        System.out.println("All tests passed.");
    }
}