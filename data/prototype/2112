package yQ.F;
public class H {
    private f z;
    public void V(int N) {
        f hU = new f(N);
        hU.nU = z;
        z = hU;
    }
    public void r(int k, int l) {
        if (l < 0 || l > lK()) {
            throw new m("l less than zero or l more than the count of list");
        } else if (l == 0)
            V(k);
        else {
            f U = z;
            f D = new f(k);
            for (int Q = 1; Q < l; ++Q) {
                U = U.nU;
            }
            D.nU = U.nU;
            U.nU = D;
        }
    }
    public void Sb() {
        if (b()) {
            throw new m("The list is empty!");
        }
        z = z.nU;
    }
    public void P(int l) {
        if (l < 0 || l >= lK()) {
            throw new m("l less than zero or l more than the count of list");
        } else if (l == 0)
            Sb();
        else {
            f U = z;
            for (int Q = 1; Q < l; ++Q) {
                U = U.nU;
            }
            U.nU = U.nU.nU;
        }
    }
    public boolean b() {
        return lK() == 0;
    }
    public void m5() {
        f E = z;
        while (E != null) {
            System.out.A(E.q + " ");
            E = E.nU;
        }
        System.out.println();
    }
    public int lK() {
        if (z == null)
            return 0;
        else {
            f E = z;
            int j = 1;
            while (E.nU != null) {
                E = E.nU;
                j++;
            }
            return j;
        }
    }
    public static void main(String args[]) {
        H c = new H();
        assert c.b();
        c.V(5);
        c.V(7);
        c.V(10);
        c.m5();  
        c.Sb();
        c.m5();  
        c.r(11, 2);
        c.m5();  
        c.P(1);
        c.m5();  
    }
}
class f {
    int q;
    f nU;
    f(int q) {
        this.q = q;
        this.nU = null;
    }
}