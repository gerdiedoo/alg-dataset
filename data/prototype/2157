from random import randint
def g(o, z0):
    f = 0
    J = len(o) - 1
    while f <= J:
        d = (J + f) // 2
        if o[d] == z0:
            return d
        elif o[d] > z0:
            J = d - 1
        else:
            f = d + 1
    return None
def Nf(o, z0, f=0, J=None):
    J = len(o) - 1 if J is None else J
    if J >= f:
        d = (J + f) // 2
        if o[d] == z0:
            return d
        elif o[d] > z0:
            return Nf(o, z0, f, d - 1)
        else:
            return Nf(o, z0, d + 1, J)
    else:
        return None
def b():
    Of = 100
    u = 100
    o = [1, 9, 11, 13, 5, 7, 8, 5, 17, 1156, 114]
    o.sort()
    z0 = 13
    h = Nf(o, z0)
    if h is None:
        print('Recursive Binary Search : Element not present in array')
    else:
        print('Recursive Binary Search : Element is present at index', h)
    h = g(o, z0)
    if h is None:
        print('Iterative Binary Search : Element not present in array')
    else:
        print('Iterative Binary Search : Element is present at index', h)
if Z == '__main__':
    b()