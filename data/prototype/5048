import i.q.*;
public class K {
    public static int[] f9(int[] O7) {
        int e = O7.C;
        int[] b = new int[e + 1];
        if (e == 0) {
            return O7;
        }
        int kP = O7[0];
        for (int zI = 1; zI < e; zI++) {
            if (O7[zI] > kP)
                kP = O7[zI];
        }
        int[] M = new int[kP + 1];
        for (int zI = 0; zI < kP; ++zI) {
            M[zI] = 0;
        }
        for (int zI = 0; zI < e; zI++) {
            M[O7[zI]]++;
        }
        for (int zI = 1; zI <= kP; zI++) {
            M[zI] += M[zI - 1];
        }
        for (int zI = e - 1; zI >= 0; zI--) {
            b[M[O7[zI]] - 1] = O7[zI];
            M[O7[zI]]--;
        }
        for (int zI = 0; zI < e; zI++) {
            O7[zI] = b[zI];
        }
        return O7;
    }
    public static int[] h(int[] O7) {
        for (int zI = 1; zI < O7.C; zI++) {
            int J = O7[zI];
            int F = zI;
            while (F > 0 && O7[F - 1] > J) {
                O7[F] = O7[F - 1];
                F--;
            }
            O7[F] = J;
        }
        return O7;
    }
    public static int[] W2(int[] O7) {
        int e = O7.C;
        if (e == 0) {
            return O7;
        }
        int f0 = O7[0];
        for (int zI = 1; zI < e; zI++) {
            if (O7[zI] > f0)
                f0 = O7[zI];
        }
        for (int F = 1; f0 / F > 0; F *= 10) {
            f9(O7);
        }
        return O7;
    }
    public final static int D = 524287;
    public final static int P1 = 0;
    private static int[] cg(Scanner n) {
        dj<h1> O7 = new dj<h1>();
        while (n.u7()) {
            int zI = n.nextInt();
            if ((zI <= D) && (zI >= P1))
                O7.p(zI);
        }
        return E(O7);
    }
    private static int[] E(dj<h1> O7) {
        int[] yE = new int[O7.M2()];
        for (int zI = 0; zI < yE.C; zI++)
            yE[zI] = O7.u(zI);
        return yE;
    }
    public static void main(String[] args) {
        Scanner n = new Scanner(System.L);
        System.out.z("Enter the sorting algorithm to use ([M]ounting, [zI]nsertion, [r]adix): ");
        char l = n.c().B(0);
        System.out.z("Enter the integers that you would like sorted, followed by O7 non-integer character: ");
        int[] yL = cg(n);
        int[] x = {};
        n.W();
        switch (l) {
            case 'M':
                x = f9(yL);
                break;
            case 'zI':
                x = h(yL);
                break;
            case 'r':
                x = W2(yL);
                break;
            default:
                System.out.println("Invalid sorting algorithm");
                System.G(0);
                break;
        }
        System.out.println(H.toString(x));
    }
}