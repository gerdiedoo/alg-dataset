public class DualPivotQuickSort{
    static void swap(int[] array, int i, int j)
    {
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    static void dualPivotQuickSort(int[] array,int low, int high)
    {
        if (low < high)
        {
            int[] piv;
            piv = partition(array, low, high);
            dualPivotQuickSort(array, low, piv[0] - 1);
            dualPivotQuickSort(array, piv[0] + 1, piv[1] - 1);
            dualPivotQuickSort(array, piv[1] + 1, high);
        }
    }
    static int[] partition(int[] arr, int low, int high)
    {
        if (arr[low] > arr[high])
            swap(arr, low, high);
        int j = low + 1;
        int g = high - 1, k = low + 1,
                p = arr[low], q = arr[high];
        while (k <= g)
        {
            if (arr[k] < p)
            {
                swap(arr, k, j);
                j++;
            }
            else if (arr[k] >= q)
            {
                while (arr[g] > q && k < g)
                    g--;
                swap(arr, k, g);
                g--;
                if (arr[k] < p)
                {
                    swap(arr, k, j);
                    j++;
                }
            }
            k++;
        }
        j--;
        g++;
        swap(arr, low, j);
        swap(arr, high, g);
        return new int[] { j, g };
    }
    public static void main(String[] args)
    {
        int[] arr = { 83, 7, 58, 31, 99, 5, 88, 15 };
        dualPivotQuickSort(arr, 0, 7);
        System.out.print("Sorted array: ");
        for (int i = 0; i < 8; i++)
            System.out.print(arr[i] + " ");
        System.out.println();
    }
}