def O8(c):
    if len(c) < 2:
        return c
    return H(O8(c[:len(c) // 2]), O8(c[len(c) // 2:]))
def H(Ap, DS):
    VC = []
    D = 0
    U = 0
    while D < len(Ap) and U < len(DS):
        if Ap[D] < DS[U]:
            VC.append(Ap[D])
            D += 1
        else:
            VC.append(DS[U])
            U += 1
    VC += Ap[D:]
    VC += DS[U:]
    return VC
k = [8, 3, 1, 7, 0, 10, 2]
o = [21, 4, 1, 3, 9, 20, 25, 22, 17, 2, 8]
k = O8(k)
o = O8(o)
print(k)
print(o)