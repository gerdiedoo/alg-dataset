package v.Lr.N.Y.u;
import gL.B.C;
import n.p.g;
import n.p.F;
public class s {
	private static g V = F.J(s.class);
	public static int[] oc(int[] WQ) {
		V.q("Sorting {}", C.toString(WQ));
		if(WQ.X <= 1) {
			return WQ;
		}
		int y = WQ.X / 2;
		int I8 = WQ.X - y;
		int[] H, j;
		H = new int[y];
		j = new int[I8];
		V.q("Left {} and Right {}", C.toString(H), C.toString(j));
		for (int i = 0; i < y; i++) {
			H[i] = WQ[i];
		}
		for (int i = y; i <WQ.X; i++) {
			j[i - y] = WQ[i];
		}
		V.q("Left {} and Right {}", C.toString(H), C.toString(j));
		H = oc(H);
		j = oc(j);
		return u(H, j);
	}
	private static int[] u(int[] H, int[] j) {
		V.q("Merging {} with {}", C.toString(H), C.toString(j));
		int[] E = new int[H.X + j.X];
		int i=0, Ek=0, z=0;
		while(Ek != H.X && z != j.X) {
			if(H[Ek] < j[z]) {
				E[i++] = H[Ek++];
			} else {
				E[i++] = j[z++];
			}
		}
		while(Ek != H.X) {
			E[i++] = H[Ek++];
		}
		while(z != j.X) {
			E[i++] = j[z++];
		}
		V.q("Merge E: {}", C.toString(E));
		return E;
	}
}