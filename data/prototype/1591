class Node(object):
    def __init__(self, data):
        self.data = data
        self.next = None
class Linkedlist(object):
    def __init__(self):
        self.head = None
        self.length = 0
    def is_empty(self):
        return self.length == 0
    def append(self, data):
        node = Node(data)
        if self.head is None:
            self.head = node
        else:
            tmp_node = self.head
            while tmp_node.next:
                tmp_node = tmp_node.next
            tmp_node.next = node
        self.length += 1
    def insert(self, data, index):
        if type(index) is int:
            if index > self.length:
                print('index out of range')
            else:
                insert_node = Node(data)
                current_node = self.head
                if index == 0:
                    insert_node.next = current_node
                    self.head = insert_node
                else:
                    while index - 1 > 0:
                        current_node = current_node.next
                        index -= 1
                    insert_node.next = current_node.next
                    current_node.next = insert_node
                self.length += 1
        else:
            print('index not int')
    def reverse(self):
        if not self.head or not self.head.next:
            return self.head
        cur = self.head
        pre = None
        nex = None
        while cur:
            nex = cur.next
            cur.next = pre
            pre = cur
            cur = nex
        self.head = pre
    def delete(self, index):
        if type(index) is int:
            if index < self.length:
                if index == 0:
                    self.head = self.head.next
                else:
                    cur = self.head
                    while index - 1 > 0:
                        cur = cur.next
                        index -= 1
                    cur.next = cur.next.next  
                self.length -= 1
            else:
                print("index out of range")
        else:
            print("index not int")
    def swap_pair(self, index):
        if type(index) is not int:
            print('index not int')
            return
        if index < self.length - 1:
            if index == 0:
                node1 = self.head
                node2 = self.head.next
                self.head = node2
                node1.next = node2.next
                node2.next = node1
            else:
                cur = self.head
                while index - 1 > 0:
                    cur = cur.next
                    index -= 1
                node1 = cur.next
                node2 = node1.next
                late = node2.next
                cur.next = node2
                node2.next = node1
                node1.next = late
        else:
            print('index out of range')
    def clear(self):
        self.head = None
        self.length = 0
    def show(self):
        if self.length == 0:
            print("Linkedlist's is None")
        else:
            tmp = self.head  
            while tmp:
                print(tmp.data, end=' ')
                tmp = tmp.next
            print('\n')
if __name__ == "__main__":
    l = Linkedlist()
    l.append(2)
    l.append(3)
    l.append(5)
    l.append(8)
    l.insert(4, 2)
    l.insert(1, 0)
    l.show()
    l.reverse()
    l.show()
    l.delete(4)
    l.show()
    l.swap_pair(0)
    l.show()
    l.clear()
    l.show()