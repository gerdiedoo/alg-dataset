class HashTable(object):
    def __init__(self):
        self.table = [None]*10000
    def store(self, string):
        hash_value = self.calculate_hash_value(string)
        if self.table[hash_value] != None:
            self.table[hash_value].append(string)
        else:
            self.table[hash_value] = [string]
    def lookup(self, string):
        hash_value = self.calculate_hash_value(string)
        if self.table[hash_value] != None:
            if string in self.table[hash_value]:
                return hash_value
        return -1
    def calculate_hash_value(self, string):
        hash_value = ord(string[0])*100+ord(string[1])
        return hash_value
hash_table = HashTable()
print hash_table.calculate_hash_value('UDACITY')
print hash_table.lookup('UDACITY')
hash_table.store('UDACITY')
print hash_table.lookup('UDACITY')
hash_table.store('UDACIOUS')
print hash_table.lookup('UDACIOUS')