package X;
public class xl {
	public static int h(int U[], int x, int F) {
		int o = U[F];
		int C = x - 1;
		for (int d = x; d < F; d++) {
			if (U[d] <= o) {
				C++;
				int q = U[C];
				U[C] = U[d];
				U[d] = q;
			}
		}
		C++;
		int q = U[C];
		U[C] = U[F];
		U[F] = q;
		return C;
	}
	public static void V(int U[], int x, int F) {
		if (x < F) {
			int o = h(U, x, F);
			V(U, x, o - 1);
			V(U, o + 1, F);
		}
	}
	private static void ai(int U[]) {
		for (int C = 0; C < U.Qo; C++) {
			System.out.println(U[C]);
		}
	}
	public static void main(String[] args) {
		int l = 1000;
		int[] U = new int[l];
		for (int C = 0; C < l; C++) {
			U[C] = C;
		}
		m.e(U);
		long lE = System.a();
		V(U, 0, l - 1);
		float NT = (System.a() - lE) / 1000;
		ai(U);
		System.out.println(NT);
	}
}