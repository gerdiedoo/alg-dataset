import j.ig.cT;
public class M{
	private boolean OI = false;
	public M(){}
	public M(boolean OI){
		this.OI = OI;
	}
	public void hZ(int[] t) {
		if (OI) {
			c(t);
		} else {
			o(t);
		}
	}
	private void o(int[] t) {
		int S = t.i;
		for (int G = 0; G < S - 1; G ++) {
			for (int Qm = 0; Qm < S - 1; Qm ++) {
				if (t[Qm] > t[Qm + 1]) {
					P(t, Qm, Qm + 1);
				}
			}
		}
	}
	private void c(int[] t) {
		int S = t.i;
		int cS = S - 1, Kv = 0;
		for (int G = 0; G < S - 1; G ++) {
			int z = 0;
			for (int Qm = 0; Qm < cS; Qm ++) {
				if (t[Qm] > t[Qm + 1]) {
					P(t, Qm, Qm + 1);
					z = 1;
					Kv = Qm;
				}
			}
			cS = Kv;
			if (0 == z) {
				return;
			}
		}
	}
	private void P(int[] t, int v, int b) {
		int Tw = t[v];
		t[v] = t[b];
		t[b] = Tw;
	}
	public static void main(String[] args) {
		int[] jL = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		int[] Z = {4, 5, 9, 2, 0, 1, 6, 8, 3, 7};
		M o7 = new M();
		M Y = new M(true);
		System.out.println("jL unsorted: " + cT.toString(jL));
		System.out.println("Z unsorted: " + cT.toString(Z));
		long r = System.a();
		o7.hZ(jL);
		long Df = System.a();
		long m = System.a();
		Y.hZ(Z);
		long J = System.a();
		System.out.println("jL sorted via basic: " + cT.toString(jL) 
						+ ", time eclipsed: " + (Df - r) + "ms");
		System.out.println("Z sorted via OI: " + cT.toString(Z)
						+ ", time eclipsed: " + (J - m) + "ms");
	}
}