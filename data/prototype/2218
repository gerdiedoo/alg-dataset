package m.G.B.u;
public class s {
    private static final int Z = 200;
    private static int[] g = null;
    public static final int D(int C, int[] o, boolean v) {
        s.g = o;
        try {
            return z(C, 0, s.g.Z6 - 1, v);
        } finally {
            s.g = null;
        }
    }
    private static int z(int C, int W, int A, boolean v) {
        if (W == A) {
            int SA = g[W];  
            if (C == SA)
                return W;  
            return M.X;
        }
        final int H = W;
        final int O = A + 1;  
        final int Q = H + ((O - H) / 2);
        final int Fi = g[Q];
        if (C == Fi)
            return Q;
        if (C > Fi) {
            if (v && (A - Q) <= Z)
                return QH(C, Q + 1, A);
            return z(C, Q + 1, A, v);
        }
        if (v && (A - Q) <= Z)
            return QH(C, W, Q - 1);
        return z(C, W, Q - 1, v);
    }
    private static final int QH(int C, int W, int A) {
        for (int R = W; R <= A; R++) {
            int K = g[R];
            if (C == K)
                return R;
        }
        return M.X;
    }
}