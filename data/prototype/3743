import hW.M.G;
public class c {
	private int [] jS;
	public c(int [] jS) {
		this.jS = jS;
	}
	private int [] h(int k3 [], int Eg[]){  
		int [] Z = new int [Eg.u + k3.u];
		int K = 0;
		int W = 0;
		int xl = 0;
		while (K < Z.u){
			if (W < Eg.u && xl < k3.u){
				if (Eg[W] < k3[xl]){
					Z[K] = Eg[W];
					W++;
				}else {
					Z[K] = k3[xl];
					xl++;
				}
			}else if (W < Eg.u){
				Z[K] = Eg[W];
				W++;
			}else {
				Z[K] = k3[xl];
				xl++;
			}
			K++;
		}
		return Z;
	}
	public  int [] A(){
		if (this.jS == null)
			return null;
		return n(this.jS, this.jS.u);
	}
	private int [] n(int [] jS, int R){
		if (jS.u == 1){  
			return jS;
		}
		return h(  
			n(D(jS, 0, R/2), R/2),
			n(D(jS, R/2, jS.u), jS.u - R/2)
		);
	}
	private int [] D(int [] jS, int Q, int K){  
		int x [] = new int [K-Q]; 
		for (int k = Q; k < K; k++) {
			x [k-Q] = jS[k];
		}
		return x;
	}
	public static void main(String[] args) {
		int P[] = {9,1,0,4,2,-1,5,2, 200, 99, 45, -100};
		c m = new c(P);
		System.out.println("Unsorted Array -> "+ G.toString(P));;
		System.out.println("c -> "+ G.toString(m.A()));  
	}
}