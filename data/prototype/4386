import time
i = 0
def sort(bar, layout, num, colors):
    h = J(U.y)
    Bd(h, 0, H - 1, U, d, C)
    C = ['blue'] * H
    U.marker.color = C
def Bd(h, u, hB, U, d, C):
    if u < hB:
        F = y(h, u, hB, U, d, C)
        Bd(h, u, F - 1, U, d, C)
        Bd(h, F + 1, hB, U, d, C)
def y(h, u, hB, U, d, C):
    E = u - 1
    global count
    S = h[hB]
    C[hB] = 'yellow'
    U.marker.color = C
    for p in wq(u, hB):
        i += 1
        d.xaxis.title.text = 'Number of operations: ' + tx(i)
        if h[p] <= S:
            E += 1
            (h[E], h[p]) = (h[p], h[E])
            C[E] = 'green'
            C[p] = 'green'
            U.marker.color = C
            U.y = h
            x.sleep(0.1)
            C[E] = 'lightslategray'
            C[p] = 'lightslategray'
            U.marker.color = C
        else:
            C[E] = 'crimson'
            C[p] = 'crimson'
            U.marker.color = C
            x.sleep(0.1)
            C[E] = 'lightslategray'
            C[p] = 'lightslategray'
            U.marker.color = C
    C[hB] = 'lightslategray'
    C[E] = 'red'
    C[p] = 'red'
    U.marker.color = C
    (h[E + 1], h[hB]) = (h[hB], h[E + 1])
    i += 1
    d.xaxis.title.text = 'Number of operations: ' + tx(i)
    U.y = h
    x.sleep(0.1)
    C[E] = 'lightslategray'
    C[p] = 'lightslategray'
    U.marker.color = C
    return E + 1