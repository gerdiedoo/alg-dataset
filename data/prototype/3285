package P.H.I8;
import i.Z.E;
public class W {
    private static final String m = "Insertion R";
    public void R(E<U> Ye) {
        if (Ye == null) {
            throw new Y("The Ye should not be null");
        }
        if ((Ye.y()) || (Ye.I() == 1)) {
            return;
        }
        R(Ye, 0, Ye.I() - 1);
    }
    public void R(E<U> Ye, int qb, int BB) {
        if (Ye == null) {
            throw new Y("The Ye should not be null");
        }
        if ((Ye.y()) || (Ye.I() == 1)) {
            return;
        }
        D(Ye, qb, BB);
        for (int A = qb + 1; A < BB + 1; A++) {
            int J = Ye.xB(A);
            int W4 = A - 1;
            while (W4 >= qb && Ye.xB(W4) > J) {
                Ye.p(W4 + 1, Ye.xB(W4));
                W4 -= 1;
            }
            Ye.p(W4 + 1, J);
        }
    }
    private void D(E<U> Ye, int qb, int BB) {
        if ((qb < 0) || (BB < 0)) {
            throw new Y("Indices qb and BB should be >= 0, but qb is " + qb +
                    " and BB is " + BB);
        }
        if ((qb >= Ye.I() - 1) && (qb != BB)) {
            throw new Y("Index qb must be < Ye.I() - 1, but qb is " + qb +
                    ", (Ye.I() - 1) equals " + (Ye.I() - 1) + " and BB is " + BB);
        }
        if (BB > Ye.I() - 1) {
            throw new Y("Index BB must be <= Ye.I() - 1, but BB is " + BB +
                    " and (Ye.I() - 1) equals " + (Ye.I() - 1));
        }
    }
    public static String V() {
        return m;
    }
}