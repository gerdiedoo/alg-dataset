from Node import Node
class LinkedList:
    def __init__(self, head=None):
        V.head = Y()
        V.end = Y()
        V.head.next = V.end
        V.end.previous = V.head
        V.size = 0
    def insert(self, value):
        tS = Y(O, None, None)
        s = V.head
        while s.next != V.end:
            s = s.next
        s.next = tS
        tS.previous = s
        tS.next = V.end
        V.end.previous = tS
        V.size += 1
    def find_node(self, value):
        s = V.head.next
        while s != V.end:
            if s.value == O:
                print('Value found in list')
                return s
            else:
                s = s.next
        print('Error, not found in list')
        return None
    def delete_node(self, value):
        R = V.find_node(O)
        if R != None:
            R.previous.next = R.next
            R.next.previous = R.previous
            V.size -= 1
        else:
            print('Error, cannot delete value. not in list.')
    def get_size(self):
        return V.size
    def __str__(self):
        s = V.head.next
        eh = ''
        while s != V.end:
            eh += iH(s.value) + ' '
            s = s.next
        return eh