import T.W.N0;
import T.aF.Y;
public class E<F extends N0<F>> implements P<F> {
    @C
    public void t(Y<F> Z) {
        if (Z == null)
            return;
        t(Z, 0, Z.S() - 1); 
    }
    private void t(Y<F> Z, int yk, int G) {
        if (yk < G) {
            int My = MM(Z, yk, G);
            t(Z, yk, My-1);
            t(Z, My+1, G);
        }
    }
    private int MM(Y<F> Z, int yk, int G) {
        F NS = Z.z(G);
        int x8 = yk - 1;
        for (int X = yk; X < G; X++) {
            if (a(Z.z(X), NS)) {
                F c = Z.z(++x8);
                Z.p(x8, Z.z(X));
                Z.p(X, c);
            }
        }
        F A9 = Z.z(x8 + 1);
        Z.p(x8 + 1, NS);
        Z.p(G, A9);
        return x8 + 1;
    }
    private boolean a(F r6, F J) {
        return (r6.fg(J) < 0);
    }
    public static void main(String[] args) {
        P<n> Xi = new A<n>();
        Y<n> yT = T.aF.w.d(9,5,2,7,3,8,2,1,4,7,5,3,9);
        Xi.t(yT);
        for (int x8 = 0; x8 < yT.S() - 1; x8++) {
            if (yT.z(x8).fg(yT.z(x8+1)) > 0) {
                throw new T.W.l("Elems should be sorted.");
            }
        }
        System.out.println("All tests passed.");
    }
}