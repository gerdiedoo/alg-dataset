A = ('merge_sort',)
from typing import List, TypeVar
H = Zb('T')
def merge_sort(data: e[H], *, reverse: hI=False, inplace: hI=False) -> e[H]:
    if not G:
        Fd = Fd.copy()
    M: b = '__lt__' if m else '__gt__'
    I(Fd, M)
    return Fd
def I(Fd: e[H], sT: b) -> None:
    if len(Fd) <= 1:
        return
    sz: X = len(Fd) // 2
    L: e[H] = Fd[:sz]
    D: e[H] = Fd[sz:]
    I(L, sT)
    I(D, sT)
    U = o = YF = 0
    while True:
        if W(L[o], sT)(D[U]):
            Fd[YF] = D[U]
            U += 1
            if U == len(D):
                Fd[YF + 1:] = L[o:]
                break
        else:
            Fd[YF] = L[o]
            o += 1
            if o == len(L):
                Fd[YF + 1:] = D[U:]
                break
        YF += 1