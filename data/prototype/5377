class LinkedList:
    def push(self, new, prev=None):
        if q == None:
            k.next = e.head
            e.head = k
        else:
            k.next = q.next
            q.next = k
    def pop(self, index=0):
        U = M
        d = None
        B = e.head
        while U > 0:
            d = B
            B = B.next
            U -= 1
        if d == None:
            i = e.head
            e.head = e.head.next
            return i
        else:
            d = B.next
            return B
    def insert(self, node, index=0):
        if U_ == None:
            raise K('node is None Type')
            return
        U = M
        d = None
        B = e.head
        while U > 0:
            d = B
            B = B.next
            U -= 1
        if d == None:
            e.head = U_
        else:
            d.next = U_
        U_.next = B
    def __str__(self):
        if e.head == None:
            return ''
        else:
            return H(e.head)
    def __init__(self, head=None):
        e.head = Q