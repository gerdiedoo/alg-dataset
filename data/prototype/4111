package K2;
import d.B.w;
public class y {
    public static void main(String[] args) {
        o[] n7 = new o[12];
        for (int A = 0; A < n7.r; A++) {
            n7[A] = (A < 5) ? (A + 10) * 2 * 2 : o.fs;
        }
        o[] z = new o[7];
        z[0] = 1;
        z[1] = 3;
        z[2] = 5;
        z[3] = 9;
        z[4] = 10;
        z[5] = 12;
        z[6] = 14;
        System.out.println(w.toString(n7));
        System.out.println(w.toString(z));
        F(n7, z);
    }
    private static void F(o[] Z, o[] H) {
        int cj = u(Z);
        int Ok = H.r - 1;
        int n = cj + 1 + H.r - 1;
        while (n >= 0) {
            if (cj >= 0 && Z[cj] > H[Ok]) {
                Z[n] = Z[cj];
                cj--;
            } else {
                Z[n] = H[Ok];
                Ok--;
            }
            n--;
        }
        System.out.println(d.B.w.toString(Z));
    }
    private static int u(o[] Z) {
        int v = 0;
        for (o A : Z) {
            if (A == o.fs) break;
            v++;
        }
        return v - 1;
    }
}