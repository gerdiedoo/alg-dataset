package v.S.u.f.zP;
import O.z.w;
import Mo.a.V;
import Mo.a.I;
public class uI {
	private static V p = I.J(uI.class);
	public static void R(int[] U) {
		R(U, 0, U.Q - 1);
	}
	private static void R(int U[], int B, int i) {
		int G, b, y, N;
		p.e("-- New R ---------");
		p.e("B={}, high={}", B, i);		
		p.e(w.toString(U));
		if (B < i) {
			b = B;
			G = i;
			y = U[i];
			System.out.println("y is " + y);
			do {
				while ((b < G) && (U[b] <= y)) {
					p.e("Increasing b to {}", b + 1);
					b = b + 1;
				}
				while ((G > b) && (U[G] >= y)) {
					p.e("Reducing G to {}", G - 1);
					G = G - 1;
				}
				if (b < G) {
					p.e("b={},G={},Swapping {} and {}", new d[]{ b,G, U[b], U[G]});
					N = U[b];
					U[b] = U[G];
					U[G] = N;					
				}
			} while (b < G);
			p.e("Values after loop {}", w.toString(U));
			U[i] = U[b];
			p.e("Values after loop b {}", w.toString(U));
			U[b] = y;
			p.e("Values after loop c {}", w.toString(U));
			R(U, B, b - 1);
			R(U, b + 1, i);
		} else {
			p.e("Not entering loop!");
		}
	}
}