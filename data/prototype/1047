package sorting.algorithms;
public class QuickSort {
    private int[] inputArray;
    private int length;
    public int[] sort(int[] values) {
        if (values == null || values.length == 0) {
            return values;
        }
        this.inputArray = values;
        length = values.length;
        quicksort(0, length - 1);
        return values;
    }
    private void quicksort(int low, int high) {
        int i = low, j = high;
        int pivot = inputArray[low + (high - low) / 2];
        while (i <= j) {
            while (inputArray[i] < pivot) {
                i++;
            }
            while (inputArray[j] > pivot) {
                j--;
            }
            if (i <= j) {
                exchange(i, j);
                i++;
                j--;
            }
        }
        if (low < j)
            quicksort(low, j);
        if (i < high)
            quicksort(i, high);
    }
    private void exchange(int i, int j) {
        int temp = inputArray[i];
        inputArray[i] = inputArray[j];
        inputArray[j] = temp;
    }
}