package P.N;
public class R<E, W> {
    public class l {
        private E b;
        private W B;
        private l s;
        private int H;
        public l(E b, W B, l s, int H){
            this.b = b;
            this.B = B;
            this.s = s;
            this.H = H;
        }
    }
    private l[] m;
    @C("unchecked")
	public R(int I){
        m = new R.l[I];
    }
    private int j(E b){
        int H = b.hashCode() % m.h;
        if(H < 0){
            H += m.h;
        }
        return H;
    }
    public W a(E b, W B){
        int H = j(b);
        for(l ID = m[H]; ID != null; ID = ID.s){
            if((H == ID.H) && b.equals(ID.b)){
                W Y = ID.B;
                ID.B = B;
                return Y;
            }
        }
        l ID = new l(b, B, m[H], H);
        m[H] = ID;
        return B;
    }
    public boolean S(E b){
        int H = j(b);
        l yS = null;
        for(l ID = m[H]; ID != null; ID = ID.s){
            if((H == ID.H) && b.equals(ID.b)){
                if(yS != null)
                    yS.s = ID.s;
                else
                    m[H] = ID.s;
                return true;
            }
            yS = ID;
        }
        return false;
    }
    public W T(E b){
        int H = j(b);
        l ID = m[H];
        while (ID != null) {
            if(b.equals(ID.b))
                return ID.B;
            ID = ID.s;
        }
        return null;
    }
    public void Oz(int I){
    	R<E, W> p = new R<E, W>(I);
        for(l ID : m){
            while (ID != null) {
                p.a(ID.b, ID.B);
                S(ID.b);
                ID = ID.s;
            }
        }
        m = p.m;
    }
}