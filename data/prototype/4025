def b(jT, t):
    if not len(jT) or not len(t):
        return jT or t
    UY = []
    (X, T) = (0, 0)
    while len(UY) < len(jT) + len(t):
        if jT[X] < t[T]:
            UY.append(jT[X])
            X += 1
        else:
            UY.append(t[T])
            T += 1
        if X == len(jT) or T == len(t):
            UY.extend(jT[X:] or t[T:])
            break
    return UY
def H(u):
    if len(u) < 2:
        return u
    A = N(len(u) / 2)
    jT = H(u[:A])
    t = H(u[A:])
    return b(jT, t)