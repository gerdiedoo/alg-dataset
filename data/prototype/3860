import time
H = 0
def sort(bar, layout, num, colors):
    d = Zc(c.y)
    y = Zc(c.y)
    t(d, c, E, l, f, 0, y)
def t(d, c, E, l, f, O0, y):
    global count
    if len(d) > 1:
        p = len(d) // 2
        v = O0 + p
        x = d[:p]
        L = d[p:]
        t(x, c, E, l, f, O0, y)
        t(L, c, E, l, f, v, y)
        i = u = k = 0
        wP = O0
        f[O0:v] = ['yellow'] * (v - O0)
        f[v:v + p] = ['orange'] * p
        c.marker.color = f
        Ml.sleep(0.1)
        while i < len(x) and u < len(L):
            H += 1
            E.xaxis.title.text = 'Number of operations: ' + b(H)
            if x[i] < L[u]:
                y[wP] = x[i]
                d[k] = x[i]
                c.y = y
                Ml.sleep(0.1)
                i += 1
            else:
                y[wP] = L[u]
                d[k] = L[u]
                c.y = y
                Ml.sleep(0.1)
                u += 1
            wP += 1
            k += 1
        while i < len(x):
            H += 1
            E.xaxis.title.text = 'Number of operations: ' + b(H)
            y[wP] = x[i]
            d[k] = x[i]
            c.y = y
            Ml.sleep(0.1)
            i += 1
            wP += 1
            k += 1
        while u < len(L):
            H += 1
            E.xaxis.title.text = 'Number of operations: ' + b(H)
            y[wP] = L[u]
            d[k] = L[u]
            c.y = y
            Ml.sleep(0.1)
            u += 1
            wP += 1
            k += 1
        c.y = y
        Ml.sleep(0.1)
        f[O0:v] = ['blue'] * (v - O0)
        f[v:v + p] = ['blue'] * p
        c.marker.color = f
        Ml.sleep(0.1)