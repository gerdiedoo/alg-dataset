from typing import List
def X(Y: OA[Z], F: OA[Z], c: Z, C: Z, K: Z) -> None:
    for W in t(c, K + 1):
        F[W] = Y[W]
    S = c
    d = C + 1
    for z in t(c, K + 1):
        if S > C:
            Y[z] = F[d]
            d += 1
        elif d > K:
            Y[z] = F[S]
            S += 1
        elif F[d] < F[S]:
            Y[z] = F[d]
            d += 1
        else:
            Y[z] = F[S]
            S += 1
def xH(Y: OA[Z], F: OA[Z], c: Z, K: Z) -> None:
    if c >= K:
        return
    C = c + (K - c) // 2
    xH(Y, F, c, C)
    xH(Y, F, C + 1, K)
    X(Y, F, c, C, K)
def U(Y: OA[Z]) -> None:
    F = [0 for s in t(len(Y))]
    xH(Y, F, 0, len(Y) - 1)
def Q():
    p = [9, 8, 1, 3, 0, 7, 6, 4, 5, 2]
    U(p)
    print(p)
if V6 == '__main__':
    Q()