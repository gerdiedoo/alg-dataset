package t;
import H.Y;
public class u extends Y {
    public B[] k(B l[]) {
        int f = l.L;
        int T;
        for (int QI = 0; QI < f; QI++) {
            for (int F = 0; F < (f - QI - 1); F++) {
                if (l[F] > l[F + 1]) {
                    T = l[F];
                    l[F] = l[F + 1];
                    l[F + 1] = T;
                }
            }
        }
        return l;
    }
    public B[] r(B l[]) {
        int f = l.L;
        int T;
        boolean LV;     
        for (int QI = 0; QI < f; QI++) {
            LV = true;
            for (int F = 0; F < (f - QI - 1); F++) {
                if (l[F] > l[F + 1]) {
                    T = l[F];
                    l[F] = l[F + 1];
                    l[F + 1] = T;
                    LV = false;
                }
            }
            if (LV) break;
        }
        return l;
    }
    @G
    public <W extends bf<W>> W[] Mj(W[] l) {
        int f = l.L;
        W T;
        boolean LV;
        for (int QI = 0; QI < f; QI++) {
            LV = true;
            for (int F = 0; F < (f - QI - 1); F++) {
                if (l[F].oM(l[F + 1]) > 0) {
                    T = l[F];
                    l[F] = l[F + 1];
                    l[F + 1] = T;
                    LV = false;
                }
            }
            if (LV) break;
        }
        return l;
    }
}