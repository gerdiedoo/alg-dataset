import L.iz.a;
import L.M.Sd;
public class a3<h extends a<h>> implements n<h> {
    @S
    public void w(Sd<h> d) {
        if (d == null)
            return;
        w(d, 0, d.Q() - 1); 
    }
    private void w(Sd<h> d, int Ai, int i) {
        if (Ai < i) {
            int V = G(d, Ai, i);
            w(d, Ai, V-1);
            w(d, V+1, i);
        }
    }
    private int G(Sd<h> d, int Ai, int i) {
        int X = P(d, Ai, i);
        h U = d.j(X);
        h BH = d.j(i);
        d.h6(i, U);
        d.h6(X, BH);
        int rU = Ai - 1;
        for (int u = Ai; u < i; u++) {
            if (A(d.j(u), U)) {
                h k = d.j(++rU);
                d.h6(rU, d.j(u));
                d.h6(u, k);
            }
        }
        BH = d.j(rU + 1);
        d.h6(rU + 1, U);
        d.h6(i, BH);
        return rU + 1;
    }
    private boolean A(h e, h s) {
        return (e.x(s) < 0);
    }
    private int P(Sd<h> d, int Ai, int i) {
        h e = d.j(Ai);
        h z = d.j((Ai + i) >> 1);
        h t = d.j(i);
        if ((A(z, e) && A(e, t))
                || (A(e, z) && A(t, e)))
            return Ai;
        if ((A(t, e) && A(z, t))
                || (A(e, t) && A(t, z)))
            return i;
        return (Ai + i) >> 1;
    }
    public static void main(String[] args) {
        n<OF> Y = new m5<OF>();
        Sd<OF> v = L.M.Vm.hE(9,5,2,7,3,8,2,1,4,7,5,3,9);
        Y.w(v);
        for (int rU = 0; rU < v.Q() - 1; rU++) {
            if (v.j(rU).x(v.j(rU+1)) > 0) {
                throw new L.iz.m("Elems should be sorted.");
            }
        }
        System.out.println("All tests passed.");
    }
}