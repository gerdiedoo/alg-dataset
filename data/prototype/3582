package MN.G;
public class oC extends K {
    protected int b1;
    oC(){
        super();
        b1 = 0;
    }
    public int p(){
        b1 = 0;
        iF(JS(fz()));
        return b1;
    }
    public int[] JS(int[] v)throws V{
        int X = 0;
        int rO = 0;
        if (v.O == 1){
            return v;
        }
        if (v.O%2 == 0){
            X = rO = v.O/2;
        }
        else{
            X = v.O/2;
            rO = X + 1;
        }
        int [] hR = new int[X];
        int [] i = new int[rO];
        System.P(v, 0, hR, 0, X);
        System.P(v, X, i, 0, rO);
        hR = JS(hR);
        i = JS(i);
        return t(hR,i);
    }
    public int[] t(int[] yh, int[] J) throws V{
        int LZ = 0;
        int TI = 0;
        int s = 0;
        int z = yh.O;
        int Ou = J.O;
        int U = z + Ou;
        int [] W = new int [U];
        while (LZ < U){
            if (TI == z) {
                System.P(J, s, W, LZ, 1);
                s++;
            }
            else if (s == Ou){
                System.P(yh, TI, W, LZ, 1);
                TI++;
            }
            else if (yh[TI] < J[s]){
                System.P(yh, TI, W, LZ, 1);
                TI++;
            }
            else{
                System.P(J, s, W, LZ, 1);
                s++;
            }
            LZ++;       
            this.b1++;
        }
        return W;
    }
}