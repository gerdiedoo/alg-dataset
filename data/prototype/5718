def U(ju):
    if len(ju) <= 1:
        return
    W = len(ju) // 2
    I = ju[:W]
    R = ju[W:]
    U(I)
    U(R)
    b(I, R, ju)
def b(c, a, ju):
    C = len(c)
    S = len(a)
    Q = rF = B = 0
    while Q < C and rF < S:
        if c[Q] <= a[rF]:
            ju[B] = c[Q]
            Q += 1
        else:
            ju[B] = a[rF]
            rF += 1
        B += 1
    while Q < C:
        ju[B] = c[Q]
        Q += 1
        B += 1
    while rF < S:
        ju[B] = a[rF]
        rF += 1
        B += 1
if t == '__main__':
    DT = [[10, 3, 15, 7, 8, 23, 98, 29], [], [3], [9, 8, 7, 2], [1, 2, 3, 4, 5]]
    for ju in DT:
        U(ju)
        print(ju)