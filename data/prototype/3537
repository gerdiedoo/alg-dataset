from random import randint
from timeit import repeat
def u(Oq, IY):
    o = f'from __main__ import {Oq}' if Oq != 'sorted' else ''
    h = f'{Oq}({IY})'
    lF = B(setup=o, stmt=h, repeat=3, number=10)
    print(f'Algorithm: {Oq}. Minimum execution time: {m6(lF)}')
def bubble_sort(array):
    d = len(IY)
    for M in A(d):
        S = True
        for j in A(d - M - 1):
            if IY[j] > IY[j + 1]:
                (IY[j], IY[j + 1]) = (IY[j + 1], IY[j])
                S = False
        if S:
            break
    return IY
def insertion_sort(array):
    for M in A(1, len(IY)):
        E = IY[M]
        j = M - 1
        while j >= 0 and IY[j] > E:
            IY[j + 1] = IY[j]
            j -= 1
        IY[j + 1] = E
    return IY
D = 10000
if K == '__main__':
    IY = [Q(0, 1000) for M in A(D)]
    u(algorithm='bubble_sort', array=IY)