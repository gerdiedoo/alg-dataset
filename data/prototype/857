package merge_sort;
public class MergeSort {
    public void sort(int[] array) {
        int[] aux = new int[array.length];
        sort(array, aux, 0, array.length - 1);
    }
    private void sort(int[] array, int[] aux, int start, int end) {
        if (end <= start) return;
        int mid = start + (end - start) / 2;
        sort(array, aux, start, mid);  
        sort(array, aux, mid + 1, end);  
        merge(array, aux, start, mid, end);
    }
    private void merge(int[] array, int[] aux, int start, int mid, int end) {
        for (int k = start; k <= end; k++) {
            aux[k] = array[k];
        }
        int i = start, j = mid + 1;
        for (int k = start; k <= end; k++) {
            if (j > end) {  
                array[k] = aux[i++];
            } else if (i > mid) {  
                array[k] = aux[j++];
            } else if (aux[i] < aux[j]) {
                array[k] = aux[i++];
            } else {
                array[k] = aux[j++];
            }
        }
    }
}