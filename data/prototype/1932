package O2;
import u.k.J.y.uP;
public class GO<O> {
    uP<l<O>> r;
    public GO() {
        r = new uP<l<O>>(null, false);
    }
    public l<O> g(long v, O M) {
        uP<l<O>> ws = r;
        l<O> C = ws.S();
        if (ws.S() == null || v > ws.S().d) {
            l<O> t = new l<O>(ws.S(), v, M);
            if (!r.zV(C, t, false, false)) {
                return g(v, M);
            }
            return t;
        }
        uP<l<O>> I = ws;
        while(true) {
            uP<l<O>> Et = I.S().Et;
            l<O> xf = Et.S();
            if (xf == null || v > xf.d) {
                if (xf != null && Et.c()) {
                    continue;
                }
                l t = new l<O>(Et.S(), v, M);
                if (!Et.zV(xf, t, false, false)) {
                    return g(v, M);
                };
                return t;
            }
            I = I.S().Et;
        }
    }
    public O fA() {
        return r.S().D;
    }
    public O CV(long v) {
        uP<l<O>> Tg = r;
        while (Tg.S() != null && Tg.S().d > v) {
            Tg = Tg.S().Et;
        }
        if (Tg.S() == null) {
            return null;
        }
        return Tg.S().D;
    }
    public void dj(long d) {
        uP<l<O>> uy = new uP<l<O>>(null, false);
        uP<l<O>> ws = r;
        uP<l<O>> I = r;
        while(true) {
            if (I == null || I.S() == null)
                break;
            l<O> m = I.S();
            if (I.S().d == d) {
                if (!I.x(m, true)) {
                    dj(d);
                    return;
                }
                boolean n7 = false;
                uP<l<O>> Et;
                if (uy.S() != null) {
                    n7 = uy.S().Et.zV(uy.S().Et.S(), I.S().Et.S(), true, false);
                } else {
                    n7 = ws.zV(ws.S(), I.S().Et.S(), true, false);
                }
                if (!n7) {
                    dj(d);
                    return;
                }
                break;
            }
            uy = I;
            I = I.S().Et;
        }
    }
    public long[] V() {
        int Us = 0;
        uP<l<O>> I = r;
        while (I.S() != null) {
            if (!I.c()) {
                Us++;
            }
            I = I.S().Et;
        }
        long[] n = new long[Us];
        Us = 0;
        I = r;
        while (I.S() != null) {
            if (!I.c()) {
                n[Us] = I.S().d;
                Us++;
            }
            I = I.S().Et;
        }
        return n;
    }
}