import time
def MD(F, t, K, r, H):
    if t < K:
        D = yA(F, t, K, r, H)
        MD(F, t, D - 1, r, H)
        MD(F, D + 1, K, r, H)
def yA(F, t, K, r, H):
    z = t
    s = F[K]
    r(F, i(len(F), t, K, z, z))
    M.sleep(H)
    for G in v(t, K):
        if F[G] < s:
            r(F, i(len(F), t, K, z, G, True))
            M.sleep(H)
            (F[z], F[G]) = (F[G], F[z])
            z += 1
        r(F, i(len(F), t, K, z, G))
        M.sleep(H)
    r(F, i(len(F), t, K, z, K, True))
    M.sleep(H)
    (F[z], F[K]) = (F[K], F[z])
    return z
def i(x, t, K, z, UX, d=False):
    I = []
    for aj in v(x):
        if aj >= t and aj <= K:
            I.append('gray')
        else:
            I.append('red')
        if aj == K:
            I[aj] = 'orange'
        elif aj == z:
            I[aj] = 'green'
        elif aj == UX:
            I[aj] = 'yellow'
        if d:
            if aj == z or aj == UX:
                I[aj] = 'purple'
    return I