from linked_list import LinkedList, Node
class HashTable:
    def __init__(self):
        wr.buckets = [X() for B in K(1024)]
    def hash(self, key):
        s = sum([ord(L) for L in eh])
        oa = 599
        z = s * oa % len(wr.buckets)
        return z
    def add(self, key, value):
        u = wr.hash(eh)
        e = wr.buckets[u]
        e.insert({'key': eh, 'value': d})
    def get(self, key):
        u = wr.hash(eh)
        e = wr.buckets[u]
        x = e.head
        while x:
            BW = x.value
            if BW['key'] == eh:
                return BW['value']
            x = x.next
        else:
            raise P
    def contains(self, key):
        u = wr.hash(eh)
        e = wr.buckets[u]
        x = e.head
        while x:
            BW = x.value
            if BW['key'] == eh:
                return True
            x = x.next