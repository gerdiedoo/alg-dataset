package n;
import Q.O2.no;
import U.I;
import U.kp;
public class M {
	public static void F6(byte[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(byte[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(byte[] R, int W, int G) {
		int e = W;
		int C = G;
		byte Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(byte[] R, int A, int O) {
		byte u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(char[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(char[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(char[] R, int W, int G) {
		int e = W;
		int C = G;
		char Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(char[] R, int A, int O) {
		char u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(short[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(short[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(short[] R, int W, int G) {
		int e = W;
		int C = G;
		short Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(short[] R, int A, int O) {
		short u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(int[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(int[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(int[] R, int W, int G) {
		int e = W;
		int C = G;
		int Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(int[] R, int A, int O) {
		int u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(long[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(long[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(long[] R, int W, int G) {
		int e = W;
		int C = G;
		long Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(long[] R, int A, int O) {
		long u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(float[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(float[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(float[] R, int W, int G) {
		int e = W;
		int C = G;
		float Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(float[] R, int A, int O) {
		float u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(double[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(double[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	private static int IJ(double[] R, int W, int G) {
		int e = W;
		int C = G;
		double Zh = R[W];	
		while(e < C) {
			while(R[C] > Zh) --C;
			while(R[e] <= Zh && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static void m(double[] R, int A, int O) {
		double u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static <S> void F6(S[] R, no<? super S> N) {
		if(N == null) {
			F6(R);
		}
		else {
			t(R, 0, R.i - 1, N);
		}
	}
	public static void F6(F[] R) {
		t(R, 0, R.i - 1);
	}
	private static void t(F[] R, int e, int C) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C);	
		t(R, e, Zh - 1);
		t(R, Zh + 1, C);
	}
	@w({ "rawtypes", "unchecked" })
	private static int IJ(F[] R, int W, int G) {
		int e = W;
		int C = G;
		a Zh = ((a) R[W]);	
		while(e < C) {
			while(Zh.qo(R[C]) < 0) --C;
			while(Zh.qo(R[e]) >= 0 && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static <S> void t(S[] R, int e, int C, no<? super S> N) {
		if(e >= C) {
			return;
		}
		int Zh = IJ(R, e, C, N);	
		t(R, e, Zh - 1, N);
		t(R, Zh + 1, C, N);
	}
	private static <S> int IJ(S[] R, int W, int G, no<? super S> N) {
		int e = W;
		int C = G;
		S Zh = R[W];
		while(e < C) {
			while(N.z(Zh, R[C]) < 0) --C;
			while(N.z(R[e], Zh) <= 0 && e < C) ++e;
			m(R, e, C);
		}
		m(R, W, e);
		return e;
	}
	private static <S> void m(S[] R, int A, int O) {
		S u = R[A];
		R[A] = R[O];
		R[O] = u;
	}
	public static void F6(byte[] R, boolean V) {
		if(V) {
			R5[] l = I.g(R);
			F6(l, kp.f());
			I.q(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(char[] R, boolean V) {
		if(V) {
			r[] l = I.J(R);
			F6(l, kp.f());
			I.Uz(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(short[] R, boolean V) {
		if(V) {
			x[] l = I.RS(R);
			F6(l, kp.f());
			I.T(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(int[] R, boolean V) {
		if(V) {
			Sj[] l = I.s(R);
			F6(l, kp.f());
			I.P(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(long[] R, boolean V) {
		if(V) {
			TF[] l = I.Z(R);
			F6(l, kp.f());
			I.p9(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(float[] R, boolean V) {
		if(V) {
			y[] l = I.Y(R);
			F6(l, kp.f());
			I.xJ(l, R);
		}
		else {
			F6(R);
		}
	}
	public static void F6(double[] R, boolean V) {
		if(V) {
			v[] l = I.hL(R);
			F6(l, kp.f());
			I.X(l, R);
		}
		else {
			F6(R);
		}
	}
}