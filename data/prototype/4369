import time
def y(zQ, pj, rI, f, A):
    if pj < rI:
        H = i(zQ, pj, rI, f, A)
        y(zQ, pj, H - 1, f, A)
        y(zQ, H + 1, rI, f, A)
def i(zQ, pj, rI, f, A):
    n = pj
    Mo = zQ[rI]
    f(zQ, m(len(zQ), pj, rI, n, n))
    s.sleep(A)
    for Gy in D(pj, rI):
        if zQ[Gy] < Mo:
            f(zQ, m(len(zQ), pj, rI, n, Gy, True))
            s.sleep(A)
            (zQ[n], zQ[Gy]) = (zQ[Gy], zQ[n])
            n += 1
        f(zQ, m(len(zQ), pj, rI, n, Gy))
        s.sleep(A)
    f(zQ, m(len(zQ), pj, rI, n, rI, True))
    s.sleep(A)
    (zQ[n], zQ[rI]) = (zQ[rI], zQ[n])
    return n
def m(V, pj, rI, n, dQ, l=False):
    Z = []
    for S in D(V):
        if S >= pj and S <= rI:
            Z.append('gray')
        else:
            Z.append('red')
        if S == rI:
            Z[S] = 'orange'
        elif S == n:
            Z[S] = 'green'
        elif S == dQ:
            Z[S] = 'yellow'
        if l:
            if S == n or S == dQ:
                Z[S] = 'purple'
    return Z