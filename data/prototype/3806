def f(dk: tR):
    Y = dk[:]
    if len(Y) < 2:
        return Y
    i = len(Y) // 2
    x = Y[:i]
    Nl = Y[i:]
    return u(f(x), f(Nl))
def u(dk, Wn):
    Y = []
    SR = j = 0
    while SR < len(dk) and j < len(Wn):
        if dk[SR] <= Wn[j]:
            Y.append(dk[SR])
            SR += 1
        else:
            Y.append(Wn[j])
            j += 1
    while SR < len(dk):
        Y.append(dk[SR])
        SR += 1
    while j < len(Wn):
        Y.append(Wn[j])
        j += 1
    return Y