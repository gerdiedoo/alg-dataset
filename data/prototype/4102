package k.L.P.Y;
import k.L.P.D.r;
import k.L.P.D.B;
import k.L.P.D.G;
import k.L.P.D.G.V;
public final class j extends r {
	public static final B nZ = new j();
	public void A(G n) {
		A(n, 0, n.u());
		n.ac(0, n.u(), V.X);
	}
	private static void A(G n, int R, int d) {
		if (!(0 <= R && R <= d && d <= n.u()))
			throw new e();
		if (d - R <= 1)
			return;
		n.ac(R, d, V.w);
		int g = (R + d) / 2;
		n.ac(g, d, V.gC);
		A(n, R, g);
		n.ac(R, g, V.gC);
		A(n, g, d);
		sh(n, R, g, d);
	}
	private static void sh(G n, int R, int g, int d) {
		if (!(0 <= R && R <= g && g <= d && d <= n.u()))
			throw new e();
		if (R == g || g == d)
			return;
		n.ac(R, d, V.w);
		int t = g - 1;
		int WY = g;
		while (R <= t && WY < d && n.q5(t, WY) > 0) {
			t--;
			WY++;
		}
		int o = WY - g;
		for (int C = 0; C < o; C++)
			n.m(g - o + C, g + C);
		n.ac(g, d, V.gC);
		sh(n, R, t + 1, g);
		n.ac(R, g, V.gC);
		sh(n, g, WY, d);
	}
	private j() {
		super("Rotation sh A");
	}
}