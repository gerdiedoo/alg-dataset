import Ed.o_.*;
import Ed.Zs.*;
import Ed.e.*;
class o
{
public static void main(String args[])throws iv
{
	E k=new E(new q(System.Q));
	int x;
	do
	{
	System.out.println("\n1.Linear o\n2.Binary o\n3.Binary o with recursion\n4.Exit");
	x=c.R(k.O());
	if(x==4)
		return;
	System.out.println("Enter the number of terms");
	int f=c.R(k.O());
	int Ah[]=new int[f];
	for(int g=0;g<f;g++)
		{
			System.out.println("Enter "+(g+1)+"th term");
			Ah[g]=c.R(k.O());
		}
		System.out.println("Enter number to be searched");
		int n=c.R(k.O());
		switch(x)
		{
			case 1:
				u(Ah,f,n);
				break;
			case 2:
				y(Ah,f,n);
				break;
			case 3:
				int T=0;
				int HH=f;
				MU(Ah,f,n,T,HH);
				break;
		}
	}
	while(x!=4);
}
public static void u(int Ah[],int f,int n)
{
	for(int g=0;g<f;g++)
	{
		if(Ah[g]==n)
		{
			System.out.println(n+" found at "+(g+1)+"th position");
			return;
		}
	}
	System.out.println(n+" not found");
}
public static void y(int Ah[],int f,int n)
{
	int T=0;
	int HH=f;
	int A=(T+HH)/2;
	while(T!=HH)
	{
		if(Ah[A]==n)
			{
			System.out.println(n+" found at "+(A+1)+"th position");
			return;
			}
		if(Ah[A]<n)
			{
				T=A+1;
				HH=f;
				 A=(T+HH)/2;
			}
		else
			{
				T=0;
				HH=A-1;
				 A=(T+HH)/2;
			}
	}
		System.out.println(n+" not found");
}
public static void MU(int Ah[],int f,int n,int T, int HH)
{
	if(T>HH)
	{
		System.out.println(n+" not found");
		return;
	}
		int A=(T+HH)/2;
		try{
		if(Ah[A]==n)
			{
			System.out.println(n+" found at "+(A+1)+"th position");
			return;
			}
		if(Ah[A]<n)
			{
				MU( Ah, f, n, A+1, HH);
			}
		if(Ah[A]>n)
			{
				MU( Ah, f, n, T,  A-1);
			}
		}
		catch(tv JT) {
				System.out.println(n+" not found");
			}
}
}