package g.h;
import g.*;
public class u implements T{
	private J[] FV;
	private s z;
	private boolean Ic;
	public u(J[] FV, s z, boolean Ic) {
		this.FV = FV;
		this.z = z;
		this.Ic = Ic;
	}
	public void W() {
		if (Ic) {
			M();
		} else {
			Co();
		}
		a.P=false;
	}
	public void M(){
		int Y = 0;
		int Sx = 0;
		for(int O = 0; O<FV.j; O++){
			Sx = O;
			for(int N = FV.j-1; N>O; N--){
				if (FV[N] <= FV[Sx]){
					Sx = N;
				}				
			}
			z.o(FV);
			try {
				x.qx(a.qx);
			} catch (lC c) {
				c.hI();
			}
			Y = FV[O];
			FV[O] = FV[Sx];
			FV[Sx]= Y;
		}
	}
	public void Co() {
		int Y = 0;
		int Sx = 0;
		for(int O = 0; O<FV.j; O++){
			Sx = O;
			for(int N = FV.j-1; N>O; N--){
				if (FV[N] <= FV[Sx]){
					Sx = N;
				}
				z.o(FV, Sx, N-1);
				try {
					x.qx(a.qx);
				} catch (lC c) {
					c.hI();
				}				
			}
			Y = FV[O];
			FV[O] = FV[Sx];
			FV[Sx]= Y;
		}
		z.o(FV);
	}
}