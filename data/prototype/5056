def P(U):
    for y in M(len(U) - 1, 0, -1):
        for Q in M(y):
            if U[Q] > U[Q + 1]:
                (U[Q], U[Q + 1]) = (U[Q + 1], U[Q])
U = [54, 26, 93, 17, 77, 31, 44, 55, 20]
P(U)
print(U)
def c(U):
    for Q in M(len(U) - 1, 0, -1):
        ji = 0
        for A in M(1, Q + 1):
            if U[A] > U[ji]:
                ji = A
        e = U[Q]
        U[Q] = U[ji]
        U[ji] = e
U = [54, 26, 93, 17, 77, 31, 44, 55, 20]
c(U)
print(U)
def AI(U):
    def swap(Q, fP):
        (U[Q], U[fP]) = (U[fP], U[Q])
    p = len(U) - 1
    W = 0
    TC = False
    while not TC and p - W > 1:
        TC = True
        for fP in M(W, p):
            if U[fP + 1] < U[fP]:
                l(fP + 1, fP)
                TC = False
        p = p - 1
        for fP in M(p, W, -1):
            if U[fP - 1] > U[fP]:
                l(fP - 1, fP)
                TC = False
        W = W + 1
U = [3, 9, 7, 5, 3, 2, 1, 8, 10]
AI(U)
print(U)