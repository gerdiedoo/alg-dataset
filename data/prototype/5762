import random
import timeit
def XW(h):
    if len(h) > 1:
        L = len(h) // 2
        Wn = h[:L]
        M = h[L:]
        XW(Wn)
        XW(M)
        ie = 0
        Qw = 0
        B = 0
        while ie < len(Wn) and Qw < len(M):
            if Wn[ie] < M[Qw]:
                h[B] = Wn[ie]
                ie = ie + 1
            else:
                h[B] = M[Qw]
                Qw = Qw + 1
            B = B + 1
        while ie < len(Wn):
            h[B] = Wn[ie]
            ie = ie + 1
            B = B + 1
        while Qw < len(M):
            h[B] = M[Qw]
            Qw = Qw + 1
            B = B + 1
        return h
def Gu(b, *Wp, **O):
    def _wrapped():
        return b(*Wp, **O)
    return J
if zZ == '__main__':
    print('Sorting list of 10 rand nums between 0-1000')
    h = []
    for ie in GW(10):
        h.append(x.randint(0, 1000))
    Yk = XW(h)
    e = Gu(XW, h)
    print('Time to sort 1M times:')
    print(i.timeit(e))