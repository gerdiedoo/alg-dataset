package Ff;
public class J extends om{
	public static void main(String[] args){
		int[] B = w(5);
		N(new J(), B);
	}
	public J(){ super("Merge"); }
	private int[] j(int[] B, int H, int q, int o){
		int C = 0; 		 
		int d = 0; 		 
		int k = H; 	 
		int f = q - H + 1;
		int s = o - q;
		int[] bt = new int[f];
		int[] V = new int[s];
		for (int W = 0; W < f; W++)
			bt[W] = B[H + W];
		for (int W = 0; W < s; W++)
			V[W] = B[q + W + 1];
		while ( C < f && d < s )
		{
			if ( bt[C] < V[d] )
				B[k++] = bt[C++];
			else
				B[k++] = V[d++];
		}
		while ( C < bt.X )
			B[k++] = bt[C++];
		while ( d < V.X )
			B[k++] = V[d++];
		return B;
	}
	private void Z(int[] B, int H, int o){
		if ( H < o )
		{
			int q = (o - H) / 2 + H;
			Z(B, H, q);
			Z(B, q + 1, o);
			j(B, H, q, o);
		}
	}
	@S
	public void CP(int[] B){
		Z(B, 0, B.X - 1);
	}
}