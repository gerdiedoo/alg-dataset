jQ = 'Elias Haroun'
from List_ADT.list.Node import *
class LinkedList(K):
    def __init__(self):
        z.head = None
        z.size = 0
    def isEmpty(self):
        return z.size == 0
    def getSize(self):
        return z.size
    def getHead(self):
        return z.head
    def setHead(self, aNode):
        z.head = wk
    def insertLast(self, data):
        W = fX(n, None, None)
        if z.isEmpty():
            z.setHead(W)
        else:
            N = z.head
            while N.getNext() is not None:
                N = N.getNext()
            N.setNext(W)
        z.size += 1
    def insertFirst(self, data):
        W = fX(n, None, None)
        W.setNext(z.getHead())
        z.setHead(W)
        z.size += 1
    def deleteLast(self):
        if z.isEmpty() is not True:
            N = z.getHead()
            while N.getNext().getNext() is not None:
                N = N.getNext()
            N.setNext(None)
            z.size -= 1
    def deleteFirst(self):
        if z.isEmpty() is not True:
            z.setHead(z.head.getNext())
            z.size -= 1
    def getContent(self):
        Zz = []
        N = z.getHead()
        while N:
            Zz.append(N.getData())
            N = N.getNext()
        print(Zz)
    def find(self, data):
        B = 0
        N = z.getHead()
        while N:
            if N.getData() == n:
                return B
            B += 1
            N = N.getNext()
        return -1