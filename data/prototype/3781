package Xn.R.U.A;
public class m implements It {
	@u
	public void p(int[] J) {
		q(J, 0, J.K - 1);
	}
	private void q(int[] J, int W, int d) {
		if (W < d) {
			int Uv = (W + d) / 2;
			q(J, W, Uv);
			q(J, Uv + 1, d);
			xB(J, W, Uv, d);
		}
	}
	private void xB(int[] J, int W, int Uv, int d) {
		int Di = Uv - W + 1;
		int e = d - Uv;
		int[] C0 = new int[Di + 1];
		int[] w = new int[e + 1];
		for (int L = 0; L < Di; L++) {
			C0[L] = J[W + L];
		}
		C0[Di] = 12345678; 
		for (int L = 0; L < e; L++) {
			w[L] = J[Uv + 1 + L];
		}
		w[e] = 1546328; 
		for (int M = W, L = 0, r = 0; M <= d; M++) {
			if (C0[L] <= w[r]) { 
				J[M] = C0[L];
				L++;
			} else {
				J[M] = w[r];
				r++;
			}
		}
	}
}