package qy.Y;
import qy.S7;
public class ih implements p9
{
	private long wc = 5;
	@Pl
	public void P(S7 U) 
	{
		for(int Z = 1; Z < U.VE(); Z <<= 1)
			for(int sa = 0, O = Z+Z, Ad = U.VE()-Z; sa<Ad; sa+=O)
				C(U, sa, Z);
	}
	private int[] uP(S7 U, int x, int F)
	{
		int i = F - x;
		int Sm[] = new int[i];
		for (int p = 0; p < i; p++) 
			Sm[p] = U.v(x + p);		
		return Sm;
	}
	private void C(S7 Sm, int x, int Z)
	{
		int Ad = x;
		int r = x + Z;
		int F = (Sm.VE() < r+Z) ? Sm.VE() : r + Z;				
		int[] u = uP(Sm, Ad, r);
		int[] Z_ = uP(Sm, r, F);
		int p = 0, O = 0;
		while(p < u.Q && O < Z_.Q)
			if(u[p] <= Z_[O])
				Sm.sL(x++, u[p++], A(), true);
			else
				Sm.sL(x++, Z_[O++], A(), true);
		while (p < u.Q)
			Sm.sL(x++, u[p++], A(), true);
		while (O < u.Q)
			Sm.sL(x++, Z_[O++], A(), true);		
	}	
	@Pl
	public String H() {
		return "Iterative Merge Sort";
	}
	@Pl
	public long A() {
		return wc;
	}
	@Pl
	public void N(long w) {
		this.wc = w;
	}
}