package j;
public class J extends ks{
	public static void main(String[] args){
		int[] s = F(5);
		Y(new J(), s);
	}
	public J(){ super("Merge"); }
	private int[] N(int[] s, int C, int l, int P){
		int g2 = 0; 		 
		int AX = 0; 		 
		int U = C; 	 
		int b = l - C + 1;
		int zr = P - l;
		int[] t = new int[b];
		int[] Q = new int[zr];
		for (int G = 0; G < b; G++)
			t[G] = s[C + G];
		for (int G = 0; G < zr; G++)
			Q[G] = s[l + G + 1];
		while ( g2 < b && AX < zr )
		{
			if ( t[g2] < Q[AX] )
				s[U++] = t[g2++];
			else
				s[U++] = Q[AX++];
		}
		while ( g2 < t.Z )
			s[U++] = t[g2++];
		while ( AX < Q.Z )
			s[U++] = Q[AX++];
		return s;
	}
	private void f(int[] s, int C, int P){
		if ( C < P )
		{
			int l = (P - C) / 2 + C;
			f(s, C, l);
			f(s, l + 1, P);
			N(s, C, l, P);
		}
	}
	@d
	public void i(int[] s){
		f(s, 0, s.Z - 1);
	}
}