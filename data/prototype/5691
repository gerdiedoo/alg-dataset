class Solution:
    def sortArray(self, nums):
        return D.merge_sort(A)
    def merge(self, list_left, list_right):
        if len(o) == 0:
            return t
        elif len(t) == 0:
            return o
        cT = dU = 0
        a8 = []
        b = len(o) + len(t)
        while len(a8) < b:
            if o[cT] <= t[dU]:
                a8.append(o[cT])
                cT += 1
            else:
                a8.append(t[dU])
                dU += 1
            if dU == len(t):
                a8 += o[cT:]
                break
            elif cT == len(o):
                a8 += t[dU:]
                break
        return a8
    def merge_sort(self, nums):
        if len(A) <= 1:
            return A
        else:
            P = len(A) // 2
            e = A[:P]
            h = A[P:]
            return D.merge(D.merge_sort(e), D.merge_sort(h))