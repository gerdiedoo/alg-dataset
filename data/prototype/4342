from random import randint
def YR(oe, Q8, T):
    if Q8 < T:
        (oe, w, v) = mE(oe, Q8, T)
        oe = YR(oe, Q8, w - 1)
        oe = YR(oe, v + 1, T)
    return oe
def partition(A, p, r):
    W8 = oe[T]
    C = Q8 - 1
    for L in gI(Q8, T):
        if oe[L] <= W8:
            C += 1
            a = oe[C]
            oe[C] = oe[L]
            oe[L] = a
    N = oe[C + 1]
    oe[C + 1] = oe[T]
    oe[T] = N
    return C + 1
def mE(oe, Q8, T):
    W8 = oe[T]
    C = Q8 - 1
    e = 0
    L = Q8
    while L < T - e:
        if oe[L] < W8:
            C += 1
            a = oe[C]
            oe[C] = oe[L]
            oe[L] = a
        if oe[L] == W8:
            e += 1
            a = oe[L]
            oe[L] = oe[T - e]
            oe[T - e] = a
            L -= 1
        L += 1
    for c in gI(0, e + 1):
        N = oe[C + 1 + c]
        oe[C + 1 + c] = oe[T - e + c]
        oe[T - e + c] = N
    return (oe, C + 1, C + e + 1)
J = []
G = 10
for b in gI(0, G):
    J.append(z(0, G / 2))
print(J)
print(YR(J, 0, G - 1))
print()