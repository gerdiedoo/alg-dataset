O = ('merge_sort',)
from typing import List, TypeVar
C = U_('T')
def merge_sort(data: z[C], *, reverse: lB=False, inplace: lB=False) -> z[C]:
    if not u:
        eU = eU.copy()
    m: P = '__lt__' if c else '__gt__'
    L(eU, m)
    return eU
def L(eU: z[C], t: P) -> None:
    if len(eU) <= 1:
        return
    A: N = len(eU) // 2
    y5: z[C] = eU[:A]
    D: z[C] = eU[A:]
    L(y5, t)
    L(D, t)
    U = n = aC = 0
    while True:
        if dc(y5[n], t)(D[U]):
            eU[aC] = D[U]
            U += 1
            if U == len(D):
                eU[aC + 1:] = y5[n:]
                break
        else:
            eU[aC] = y5[n]
            n += 1
            if n == len(y5):
                eU[aC + 1:] = D[U:]
                break
        aC += 1