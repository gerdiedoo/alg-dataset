def Tt(p):
    for l in W(len(p) - 1, 0, -1):
        for Te in W(l):
            if p[Te] > p[Te + 1]:
                k = p[Te]
                p[Te] = p[Te + 1]
                p[Te + 1] = k
p = [19, 2, 31, 45, 6, 11, 121, 27]
Tt(p)
print(p)
def H(xt):
    for Te in W(len(xt)):
        qF = Te
        for j in W(Te + 1, len(xt)):
            if xt[qF] > xt[j]:
                qF = j
        (xt[Te], xt[qF]) = (xt[qF], xt[Te])
VI = [19, 2, 31, 45, 30, 11, 121, 27]
H(VI)
print(VI)
def wP(n):
    def swap(b, j):
        (n[b], n[j]) = (n[j], n[b])
    NJ = len(n) - 1
    S = 0
    wb = False
    while not wb and NJ - S > 1:
        wb = True
        for j in W(S, NJ):
            if n[j + 1] < n[j]:
                U(j + 1, j)
                wb = False
        NJ = NJ - 1
        for j in W(NJ, S, -1):
            if n[j - 1] > n[j]:
                U(j - 1, j)
                wb = False
        S = S + 1
n = [3, 9, 7, 5, 3, 2, 1, 8, 10]
wP(n)
print(n)