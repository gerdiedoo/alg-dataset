package U;
import d.EM.Scanner;
class Z{
    static int[] i(int R[],int b[]){
        int E=R.K;
        int A=b.K;
        int T3[] = new int[E+A];
        int c=0;
        int a=0,P=0;
        while(a<E && P<A){
            if(R[a]<b[P]){
                T3[c]=R[a];
                a++;
                c++;
            }
            else{
                T3[c]=b[P];
                P++;
                c++;
            }
        }
        if(a>=E){
            for(int G = 0;G<(A-P);G++){
                T3[c+G]=b[P+G];
            }
        }
        if(P>=A){
            for (int G = 0;G<(E-a); G++) {
                T3[c+G]=R[a+G];
            }
        }
        return T3;
    }
    static int[] Z(int s[]){
        int wr=0;
        if(s.K>1){
            wr=(0+s.K)/2;
        }
        else{
            return s;
        }
        int x[] = new int[wr];
        for(int G =0;G<wr;G++){
            x[G]=s[G];
        }
        int T[]=new int[s.K-wr];
        for(int G =0;G<(s.K-wr);G++){
            T[G]=s[G+wr];
        }
        x=Z(x);
        T=Z(T);
        int k[] = i(x,T);
        return k;
    }
}