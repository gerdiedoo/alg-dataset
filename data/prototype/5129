import Re.Z.*;
public class wI<d,t>{
	static final int H = 1 << 2;
	T<d,t>[] C;
	int u;
	int OP;
	public wI() {
		OP = H;
	}
	public wI(int V) {
		this.OP = V;
	}
	class T<d, t> {
		final int FA;
		final d P;
		t e;
		T<d,t> l;
		T(int FA, d P, t e, T<d,t> l) {
			this.FA = FA;
			this.P = P;
			this.e = e;
			this.l = l;
		}
		public d f() {
			return P;
		}
		public t x() {
			return e;
		}
		public final String toString() { return P + "=" + e; }
		public final int hashCode() {
			return y.hashCode(P) ^ y.hashCode(e);
		}
	}
	static final int FA(K P) {
		return (P == null) ? 0 : P.hashCode();
	}
	public int u() {
		return u;
	}
	public boolean s() {
		return u == 0;
	}
	@A("unchecked")
	public t U(d P, t e) {
		T<d, t> b;  int FA = FA(P);
		if (C == null || C.z == 0) {
			C = (T<d, t>[]) new T[OP];
		}
		int Q = C.z;
		int i = (Q - 1) & FA;
		if (C[i] == null) {
			C[i] = new T<d,t>(FA, P, e, null);
		} else {
			T<d, t> m;
			b = C[i];
			if (b.FA == FA && 
					b.P == P || (P != null && b.P.equals(P))){
				m = b;
			} else {
				for (int sH = 0; ; sH++) {
					System.out.println("LinkedList: Not " + b.P);
					m = b.l;
					if (b.l == null) {
						b.l = new T(FA, P, e, null);
						break;
					}
					if (m.FA == FA &&
							(m.P == P || (P != null && m.P.equals(P)))) {
						break;
					}
					b = m;
				}
			}
			if (m != null) {
				t k = m.e;
				m.e = e;
				return k;
			}
		}
		u++;
		return null;
	}
	public t N(K P) {
		int FA = FA(P);
		int Q = C.z;
		if (C != null && C.z > 0 && C[FA & (Q - 1)] != null) {
			T<d, t> M7 = C[FA & (Q - 1)];
			if (M7.FA == FA && 
					M7.P == P || (P != null && M7.P.equals(P))) {
				return M7.e;
			}
			T<d, t> m = M7.l;
			if (M7.l != null) {
				do {
					if (m.FA == FA &&
							m.P == P || (m.P != null && m.P.equals(P))) {
						return m.e;
					} 
				}while ((m = m.l) != null);
			}
		}
		return null;
	}
	public boolean G(K P) {
		return N(P) != null;
	}
	public t X(K P) {
		int FA = FA(P);
		int Q = C.z;
		int i = FA & (Q - 1);
		if (C != null && C.z > 0 && C[i] != null) {
			T<d, t> r = C[i];
			T<d, t> m = null; T<d, t> QZ = null;
			if (r.FA == FA && 
					r.P == P || (P != null && r.P.equals(P))) {
				QZ = r;
			}
			m = r.l;
			if (r.l != null) {
				do {
					if (m.FA == FA && 
							m.P == P || (P != null && m.P.equals(P))) {
						QZ = m;
						break;
					}
					r = m;
				} while ((m = m.l) != null);
			}
			if (QZ != null) {
				if (QZ == r) {
					C[i] = QZ.l;
				} else {
					r.l = QZ.l;
				}
				u--;
				return QZ.e;
			}
		}
		return null;
	}
}