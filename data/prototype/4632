package JD;
public class F {
	public static <xN extends O<xN>> void h(xN cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T].g(cM[z]) < 0)
                    z = T;
            xN A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(byte cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            byte A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(char cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            char A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(short cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            short A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(int cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            int A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(long cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            long A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(float cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            float A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
	public static void h(double cM[])
    {
        int sT = cM.un;
        for (int n = 0; n < sT-1; n++)
        {
            int z = n;
            for (int T = n+1; T < sT; T++)
                if (cM[T] < cM[z])
                    z = T;
            double A = cM[z];
            cM[z] = cM[n];
            cM[n] = A;
        }
    }
}