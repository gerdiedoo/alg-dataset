public class D {
	public static void S7(int w[], int f, int S, int x) {
		int H = S - f + 1;
		int Ka = x - S;
		int I[] = new int[H];
		int r[] = new int[Ka];
		for (int B = 0; B < H; ++B) {
			I[B] = w[f + B];
		}
		for (int te = 0; te < Ka; ++te) {
			r[te] = w[S + 1 + te];
		}
		int sS = 0, K = 0;
		int U = f;
		while (sS < H && K < Ka) {
			if (I[sS] <= r[K]) {
				w[U] = I[sS];
				sS++;
			} else {
				w[U] = r[K];
				K++;
			}
			U++;
		}
		while (sS < H) {
			w[U] = I[sS];
			sS++;
			U++;
		}
		while (K < Ka) {
			w[U] = r[K];
			K++;
			U++;
		}
	}
	public static void ot(int w[], int f, int x) {
		if (f < x) {
			int S = (f + x) / 2;
			ot(w, f, S);
			ot(w, S + 1, x);
			S7(w, f, S, x);
		}
	}
}