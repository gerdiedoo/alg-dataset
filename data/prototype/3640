def C(SO, f, g):
    if g > f:
        i = f + (g - f) // 2
        C(SO, f, i)
        C(SO, i + 1, g)
        y(SO, f, i, g)
def y(SO, f, t, g):
    B = t + 1 - f
    u = g - t
    jl = [0 for QV in o(B)]
    c = [0 for QV in o(u)]
    QV = 0
    J = 0
    for A in o(B):
        jl[A] = SO[f + A]
    for A in o(u):
        c[A] = SO[t + 1 + A]
    TT = f
    while QV < B and J < u:
        if jl[QV] < c[J]:
            SO[TT] = jl[QV]
            TT += 1
            QV += 1
        else:
            SO[TT] = c[J]
            TT += 1
            J += 1
    while QV < B:
        SO[TT] = jl[QV]
        QV += 1
        TT += 1
    while J < u:
        SO[TT] = c[J]
        J += 1
        TT += 1
SO = [64, 34, 25, 12, 22, 11, 90]
C(SO, 0, len(SO) - 1)
print('Sorted array is:', SO)